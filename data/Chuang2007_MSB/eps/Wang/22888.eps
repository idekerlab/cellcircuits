%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:46:56 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.05434 0.00000 0.00000 1.05434 136.432 22.8628 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
39.4504 169.355 m
35.2236 206.415 l
S
newpath
25.6514 290.343 m
30.1243 251.125 l
S
newpath
98.1303 28.0091 m
68.9363 51.2255 l
S
newpath
44.5496 124.645 m
48.7764 87.5852 l
S
newpath
10.0674 13.3487 m
37.3215 47.6198 l
S
.623529 1.00000 .549020 RG
newpath
54.1740 228.770 m
54.1740 240.644 44.5481 250.270 32.6740 250.270  c
20.7999 250.270 11.1740 240.644 11.1740 228.770  c
11.1740 216.896 20.7999 207.270 32.6740 207.270  c
44.5481 207.270 54.1740 216.896 54.1740 228.770  c
h
f
0.00000 0.00000 0.00000 RG
newpath
55.1740 228.770 m
55.1740 241.196 45.1004 251.270 32.6740 251.270  c
20.2476 251.270 10.1740 241.196 10.1740 228.770  c
10.1740 216.343 20.2476 206.270 32.6740 206.270  c
45.1004 206.270 55.1740 216.343 55.1740 228.770  c
h
54.1740 228.770 m
54.1740 240.644 44.5481 250.270 32.6740 250.270  c
20.7999 250.270 11.1740 240.644 11.1740 228.770  c
11.1740 216.896 20.7999 207.270 32.6740 207.270  c
44.5481 207.270 54.1740 216.896 54.1740 228.770  c
h
f*
32.6740 228.770 translate
1.00000 1.00000 scale
-21.7002 4.42090 translate
newpath
1.04688 -8.67188 m
2.28125 -8.67188 l
2.28125 -3.20312 l
2.28125 -2.32812 2.44271 -1.69271 2.76562 -1.29688  c
3.08854 -.901042 3.59896 -.703125 4.29688 -.703125  c
4.98438 -.703125 5.47135 -.890625 5.75781 -1.26562  c
6.04427 -1.64062 6.18750 -2.27083 6.18750 -3.15625  c
6.18750 -8.67188 l
7.26562 -8.67188 l
7.26562 -3.17188 l
7.26562 -1.99479 7.02344 -1.13542 6.53906 -.593750  c
6.05469 -.0520833 5.28125 .218750 4.21875 .218750  c
3.13542 .218750 2.33594 -.0598958 1.82031 -.617188  c
1.30469 -1.17448 1.04688 -2.04167 1.04688 -3.21875  c
1.04688 -8.67188 l
h
9.43945 0.00000 m
9.43945 -8.67188 l
11.6895 -8.67188 l
12.5540 -8.67188 13.2181 -8.50781 13.6816 -8.17969  c
14.1452 -7.85156 14.3770 -7.38021 14.3770 -6.76562  c
14.3770 -5.71354 13.7832 -4.96354 12.5957 -4.51562  c
14.0124 -4.08854 14.7207 -3.30729 14.7207 -2.17188  c
14.7207 -1.46354 14.4863 -.924479 14.0176 -.554688  c
13.5488 -.184896 12.8717 0.00000 11.9863 0.00000  c
9.43945 0.00000 l
h
10.6582 -.921875 m
10.9082 -.921875 l
11.8040 -.921875 12.3874 -.979167 12.6582 -1.09375  c
13.1686 -1.30208 13.4238 -1.69792 13.4238 -2.28125  c
13.4238 -2.80208 13.1921 -3.23177 12.7285 -3.57031  c
12.2650 -3.90885 11.6895 -4.07812 11.0020 -4.07812  c
10.6582 -4.07812 l
10.6582 -.921875 l
h
10.6582 -4.85938 m
11.0488 -4.85938 l
11.7051 -4.85938 12.2129 -5.00000 12.5723 -5.28125  c
12.9316 -5.56250 13.1113 -5.95833 13.1113 -6.46875  c
13.1113 -7.32292 12.4499 -7.75000 11.1270 -7.75000  c
10.6582 -7.75000 l
10.6582 -4.85938 l
h
16.3418 0.00000 m
16.3418 -8.67188 l
21.1855 -8.67188 l
21.1855 -7.75000 l
17.5605 -7.75000 l
17.5605 -4.96875 l
20.5918 -4.96875 l
20.5918 -4.06250 l
17.5605 -4.06250 l
17.5605 -.921875 l
21.4355 -.921875 l
21.4355 0.00000 l
16.3418 0.00000 l
h
22.7207 0.00000 m
22.7207 -1.01562 l
23.0540 -1.79688 23.7311 -2.65104 24.7520 -3.57812  c
25.4238 -4.17188 l
26.2676 -4.94271 26.6895 -5.70833 26.6895 -6.46875  c
26.6895 -6.94792 26.5462 -7.32552 26.2598 -7.60156  c
25.9733 -7.87760 25.5749 -8.01562 25.0645 -8.01562  c
24.4603 -8.01562 23.7520 -7.78646 22.9395 -7.32812  c
22.9395 -8.34375 l
23.7103 -8.70833 24.4707 -8.89062 25.2207 -8.89062  c
26.0332 -8.89062 26.6868 -8.67188 27.1816 -8.23438  c
27.6764 -7.79688 27.9238 -7.21875 27.9238 -6.50000  c
27.9238 -5.97917 27.7988 -5.51562 27.5488 -5.10938  c
27.2988 -4.70312 26.8353 -4.21354 26.1582 -3.64062  c
25.7207 -3.26562 l
24.7936 -2.48438 24.2572 -1.73438 24.1113 -1.01562  c
27.8770 -1.01562 l
27.8770 0.00000 l
22.7207 0.00000 l
h
30.4336 0.00000 m
30.4336 -8.67188 l
35.2773 -8.67188 l
35.2773 -7.75000 l
31.6523 -7.75000 l
31.6523 -4.96875 l
34.6836 -4.96875 l
34.6836 -4.06250 l
31.6523 -4.06250 l
31.6523 -.921875 l
35.5273 -.921875 l
35.5273 0.00000 l
30.4336 0.00000 l
h
37.0312 -.0625000 m
37.0312 -1.14062 l
37.8646 -.817708 38.5156 -.656250 38.9844 -.656250  c
39.5365 -.656250 39.9870 -.817708 40.3359 -1.14062  c
40.6849 -1.46354 40.8594 -1.88021 40.8594 -2.39062  c
40.8594 -3.60938 40.0052 -4.21875 38.2969 -4.21875  c
37.8281 -4.21875 l
37.8281 -5.00000 l
38.2344 -5.00000 l
39.8385 -5.00000 40.6406 -5.56250 40.6406 -6.68750  c
40.6406 -7.57292 40.1146 -8.01562 39.0625 -8.01562  c
38.4792 -8.01562 37.8438 -7.85417 37.1562 -7.53125  c
37.1562 -8.54688 l
37.8333 -8.77604 38.4948 -8.89062 39.1406 -8.89062  c
40.9115 -8.89062 41.7969 -8.21875 41.7969 -6.87500  c
41.7969 -5.85417 41.1927 -5.13021 39.9844 -4.70312  c
41.3906 -4.38021 42.0938 -3.61458 42.0938 -2.40625  c
42.0938 -1.58333 41.8229 -.940104 41.2812 -.476562  c
40.7396 -.0130208 40.0000 .218750 39.0625 .218750  c
38.5208 .218750 37.8438 .125000 37.0312 -.0625000  c
h
f
[ 1.05434 0.00000 0.00000 1.05434 136.432 22.8628 ] defaultmatrix matrix concatmatrix setmatrix
.631373 1.00000 .552941 RG
newpath
137.241 14.0045 m
137.241 25.8787 127.615 35.5045 115.741 35.5045  c
103.866 35.5045 94.2405 25.8787 94.2405 14.0045  c
94.2405 2.13042 103.866 -7.49545 115.741 -7.49545  c
127.615 -7.49545 137.241 2.13042 137.241 14.0045  c
h
f
0.00000 0.00000 0.00000 RG
newpath
138.241 14.0045 m
138.241 26.4310 128.167 36.5045 115.741 36.5045  c
103.314 36.5045 93.2405 26.4310 93.2405 14.0045  c
93.2405 1.57814 103.314 -8.49545 115.741 -8.49545  c
128.167 -8.49545 138.241 1.57814 138.241 14.0045  c
h
137.241 14.0045 m
137.241 25.8787 127.615 35.5045 115.741 35.5045  c
103.866 35.5045 94.2405 25.8787 94.2405 14.0045  c
94.2405 2.13042 103.866 -7.49545 115.741 -7.49545  c
127.615 -7.49545 137.241 2.13042 137.241 14.0045  c
h
f*
115.741 14.0045 translate
1.00000 1.00000 scale
-18.6709 4.42090 translate
newpath
.562500 0.00000 m
.562500 -.984375 l
5.21875 -7.75000 l
.843750 -7.75000 l
.843750 -8.67188 l
6.68750 -8.67188 l
6.68750 -7.75000 l
2.03125 -.984375 l
6.68750 -.984375 l
6.68750 0.00000 l
.562500 0.00000 l
h
12.7695 -3.31250 m
11.2852 -7.06250 l
9.81641 -3.31250 l
12.7695 -3.31250 l
h
14.0664 0.00000 m
13.1289 -2.40625 l
9.45703 -2.40625 l
8.50391 0.00000 l
7.34766 0.00000 l
10.8008 -8.67188 l
12.0195 -8.67188 l
15.3945 0.00000 l
14.0664 0.00000 l
h
16.6582 0.00000 m
16.6582 -8.67188 l
19.0176 -8.67188 l
20.0592 -8.67188 20.8092 -8.49479 21.2676 -8.14062  c
21.7259 -7.78646 21.9551 -7.20833 21.9551 -6.40625  c
21.9551 -5.47917 21.6426 -4.75521 21.0176 -4.23438  c
20.3926 -3.71354 19.5280 -3.45312 18.4238 -3.45312  c
17.8770 -3.45312 l
17.8770 0.00000 l
16.6582 0.00000 l
h
17.8770 -4.37500 m
18.3770 -4.37500 l
19.1061 -4.37500 19.6686 -4.54427 20.0645 -4.88281  c
20.4603 -5.22135 20.6582 -5.69792 20.6582 -6.31250  c
20.6582 -6.82292 20.5020 -7.19010 20.1895 -7.41406  c
19.8770 -7.63802 19.3561 -7.75000 18.6270 -7.75000  c
17.8770 -7.75000 l
17.8770 -4.37500 l
h
23.9785 0.00000 m
24.0827 -.677083 24.2415 -1.26042 24.4551 -1.75000  c
24.6686 -2.23958 25.0410 -2.91667 25.5723 -3.78125  c
27.9316 -7.59375 l
23.4629 -7.59375 l
23.4629 -8.67188 l
29.0410 -8.67188 l
29.0410 -7.59375 l
26.8118 -4.31250 25.5671 -1.78125 25.3066 0.00000  c
23.9785 0.00000 l
h
33.5195 .218750 m
32.6237 .218750 31.8997 -.203125 31.3477 -1.04688  c
30.7956 -1.89062 30.5195 -2.98958 30.5195 -4.34375  c
30.5195 -5.70833 30.7982 -6.80729 31.3555 -7.64062  c
31.9128 -8.47396 32.6445 -8.89062 33.5508 -8.89062  c
34.4570 -8.89062 35.1888 -8.47396 35.7461 -7.64062  c
36.3034 -6.80729 36.5820 -5.71354 36.5820 -4.35938  c
36.5820 -2.97396 36.3034 -1.86458 35.7461 -1.03125  c
35.1888 -.197917 34.4466 .218750 33.5195 .218750  c
h
33.5352 -.656250 m
34.7539 -.656250 35.3633 -1.89583 35.3633 -4.37500  c
35.3633 -6.80208 34.7591 -8.01562 33.5508 -8.01562  c
32.3529 -8.01562 31.7539 -6.79167 31.7539 -4.34375  c
31.7539 -1.88542 32.3477 -.656250 33.5352 -.656250  c
h
f
[ 1.05434 0.00000 0.00000 1.05434 136.432 22.8628 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .800000 .600000 RG
newpath
63.5000 147.000 m
63.5000 158.874 53.8741 168.500 42.0000 168.500  c
30.1259 168.500 20.5000 158.874 20.5000 147.000  c
20.5000 135.126 30.1259 125.500 42.0000 125.500  c
53.8741 125.500 63.5000 135.126 63.5000 147.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
64.5000 147.000 m
64.5000 159.426 54.4264 169.500 42.0000 169.500  c
29.5736 169.500 19.5000 159.426 19.5000 147.000  c
19.5000 134.574 29.5736 124.500 42.0000 124.500  c
54.4264 124.500 64.5000 134.574 64.5000 147.000  c
h
63.5000 147.000 m
63.5000 158.874 53.8741 168.500 42.0000 168.500  c
30.1259 168.500 20.5000 158.874 20.5000 147.000  c
20.5000 135.126 30.1259 125.500 42.0000 125.500  c
53.8741 125.500 63.5000 135.126 63.5000 147.000  c
h
f*
42.0000 147.000 translate
1.00000 1.00000 scale
-19.8193 4.42090 translate
newpath
1.04688 -8.67188 m
2.28125 -8.67188 l
2.28125 -3.20312 l
2.28125 -2.32812 2.44271 -1.69271 2.76562 -1.29688  c
3.08854 -.901042 3.59896 -.703125 4.29688 -.703125  c
4.98438 -.703125 5.47135 -.890625 5.75781 -1.26562  c
6.04427 -1.64062 6.18750 -2.27083 6.18750 -3.15625  c
6.18750 -8.67188 l
7.26562 -8.67188 l
7.26562 -3.17188 l
7.26562 -1.99479 7.02344 -1.13542 6.53906 -.593750  c
6.05469 -.0520833 5.28125 .218750 4.21875 .218750  c
3.13542 .218750 2.33594 -.0598958 1.82031 -.617188  c
1.30469 -1.17448 1.04688 -2.04167 1.04688 -3.21875  c
1.04688 -8.67188 l
h
9.43945 0.00000 m
9.43945 -8.67188 l
11.6895 -8.67188 l
12.5540 -8.67188 13.2181 -8.50781 13.6816 -8.17969  c
14.1452 -7.85156 14.3770 -7.38021 14.3770 -6.76562  c
14.3770 -5.71354 13.7832 -4.96354 12.5957 -4.51562  c
14.0124 -4.08854 14.7207 -3.30729 14.7207 -2.17188  c
14.7207 -1.46354 14.4863 -.924479 14.0176 -.554688  c
13.5488 -.184896 12.8717 0.00000 11.9863 0.00000  c
9.43945 0.00000 l
h
10.6582 -.921875 m
10.9082 -.921875 l
11.8040 -.921875 12.3874 -.979167 12.6582 -1.09375  c
13.1686 -1.30208 13.4238 -1.69792 13.4238 -2.28125  c
13.4238 -2.80208 13.1921 -3.23177 12.7285 -3.57031  c
12.2650 -3.90885 11.6895 -4.07812 11.0020 -4.07812  c
10.6582 -4.07812 l
10.6582 -.921875 l
h
10.6582 -4.85938 m
11.0488 -4.85938 l
11.7051 -4.85938 12.2129 -5.00000 12.5723 -5.28125  c
12.9316 -5.56250 13.1113 -5.95833 13.1113 -6.46875  c
13.1113 -7.32292 12.4499 -7.75000 11.1270 -7.75000  c
10.6582 -7.75000 l
10.6582 -4.85938 l
h
19.8262 .218750 m
18.6283 .218750 17.6621 -.197917 16.9277 -1.03125  c
16.1934 -1.86458 15.8262 -2.96875 15.8262 -4.34375  c
15.8262 -5.71875 16.1934 -6.82031 16.9277 -7.64844  c
17.6621 -8.47656 18.6491 -8.89062 19.8887 -8.89062  c
21.1074 -8.89062 22.0866 -8.47917 22.8262 -7.65625  c
23.5658 -6.83333 23.9355 -5.73438 23.9355 -4.35938  c
23.9355 -2.95312 23.5658 -1.83854 22.8262 -1.01562  c
22.0866 -.192708 21.0866 .218750 19.8262 .218750  c
h
19.8418 -.703125 m
20.7272 -.703125 21.4121 -1.02344 21.8965 -1.66406  c
22.3809 -2.30469 22.6230 -3.20312 22.6230 -4.35938  c
22.6230 -5.49479 22.3809 -6.38021 21.8965 -7.01562  c
21.4121 -7.65104 20.7428 -7.96875 19.8887 -7.96875  c
19.0241 -7.96875 18.3496 -7.64844 17.8652 -7.00781  c
17.3809 -6.36719 17.1387 -5.47917 17.1387 -4.34375  c
17.1387 -3.21875 17.3783 -2.33073 17.8574 -1.67969  c
18.3366 -1.02865 18.9980 -.703125 19.8418 -.703125  c
h
24.6328 0.00000 m
27.5078 -4.35938 l
24.7734 -8.67188 l
26.2266 -8.67188 l
28.3203 -5.40625 l
30.5078 -8.67188 l
31.6641 -8.67188 l
28.8984 -4.48438 l
31.7422 0.00000 l
30.2891 0.00000 l
28.0859 -3.43750 l
25.8047 0.00000 l
24.6328 0.00000 l
h
33.5039 .0312500 m
33.5039 -1.00000 l
34.0872 -.770833 34.6341 -.656250 35.1445 -.656250  c
35.7174 -.656250 36.1680 -.822917 36.4961 -1.15625  c
36.8242 -1.48958 36.9883 -1.95312 36.9883 -2.54688  c
36.9883 -3.84896 36.0924 -4.50000 34.3008 -4.50000  c
34.0924 -4.50000 33.8789 -4.48438 33.6602 -4.45312  c
33.6602 -8.67188 l
38.0508 -8.67188 l
38.0508 -7.67188 l
34.6758 -7.67188 l
34.6758 -5.37500 l
35.7904 -5.37500 36.6602 -5.11979 37.2852 -4.60938  c
37.9102 -4.09896 38.2227 -3.39062 38.2227 -2.48438  c
38.2227 -1.64062 37.9362 -.979167 37.3633 -.500000  c
36.7904 -.0208333 36.0039 .218750 35.0039 .218750  c
34.5664 .218750 34.0664 .156250 33.5039 .0312500  c
h
f
[ 1.05434 0.00000 0.00000 1.05434 136.432 22.8628 ] defaultmatrix matrix concatmatrix setmatrix
.349020 .921569 .372549 RG
newpath
44.4338 310.540 m
23.3480 331.626 l
2.26219 310.540 l
23.3480 289.454 l
h
f
0.00000 0.00000 0.00000 RG
newpath
23.3480 288.040 m
45.8480 310.540 l
23.3480 333.040 l
.847976 310.540 l
h
44.4338 310.540 m
23.3480 331.626 l
2.26219 310.540 l
23.3480 289.454 l
h
f*
23.3480 310.540 translate
1.00000 1.00000 scale
-20.8857 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.32812 -8.67188 l
6.68750 -1.96875 l
6.68750 -8.67188 l
7.75000 -8.67188 l
7.75000 0.00000 l
6.54688 0.00000 l
2.17188 -6.70312 l
2.17188 0.00000 l
1.12500 0.00000 l
h
9.99023 0.00000 m
9.99023 -8.67188 l
14.8340 -8.67188 l
14.8340 -7.75000 l
11.2090 -7.75000 l
11.2090 -4.84375 l
14.2559 -4.84375 l
14.2559 -3.93750 l
11.2090 -3.93750 l
11.2090 0.00000 l
9.99023 0.00000 l
h
16.4238 0.00000 m
16.4238 -8.67188 l
17.5801 -8.67188 l
17.5801 -4.40625 l
21.0801 -8.67188 l
22.3145 -8.67188 l
18.9238 -4.53125 l
22.9238 0.00000 l
21.3613 0.00000 l
17.5801 -4.39062 l
17.5801 0.00000 l
16.4238 0.00000 l
h
24.2578 0.00000 m
24.2578 -8.67188 l
26.5078 -8.67188 l
27.3724 -8.67188 28.0365 -8.50781 28.5000 -8.17969  c
28.9635 -7.85156 29.1953 -7.38021 29.1953 -6.76562  c
29.1953 -5.71354 28.6016 -4.96354 27.4141 -4.51562  c
28.8307 -4.08854 29.5391 -3.30729 29.5391 -2.17188  c
29.5391 -1.46354 29.3047 -.924479 28.8359 -.554688  c
28.3672 -.184896 27.6901 0.00000 26.8047 0.00000  c
24.2578 0.00000 l
h
25.4766 -.921875 m
25.7266 -.921875 l
26.6224 -.921875 27.2057 -.979167 27.4766 -1.09375  c
27.9870 -1.30208 28.2422 -1.69792 28.2422 -2.28125  c
28.2422 -2.80208 28.0104 -3.23177 27.5469 -3.57031  c
27.0833 -3.90885 26.5078 -4.07812 25.8203 -4.07812  c
25.4766 -4.07812 l
25.4766 -.921875 l
h
25.4766 -4.85938 m
25.8672 -4.85938 l
26.5234 -4.85938 27.0312 -5.00000 27.3906 -5.28125  c
27.7500 -5.56250 27.9297 -5.95833 27.9297 -6.46875  c
27.9297 -7.32292 27.2682 -7.75000 25.9453 -7.75000  c
25.4766 -7.75000 l
25.4766 -4.85938 l
h
31.1445 0.00000 m
31.1445 -8.67188 l
32.3789 -8.67188 l
32.3789 0.00000 l
31.1445 0.00000 l
h
39.0078 -3.31250 m
37.5234 -7.06250 l
36.0547 -3.31250 l
39.0078 -3.31250 l
h
40.3047 0.00000 m
39.3672 -2.40625 l
35.6953 -2.40625 l
34.7422 0.00000 l
33.5859 0.00000 l
37.0391 -8.67188 l
38.2578 -8.67188 l
41.6328 0.00000 l
40.3047 0.00000 l
h
f
[ 1.05434 0.00000 0.00000 1.05434 136.432 22.8628 ] defaultmatrix matrix concatmatrix setmatrix
.231373 .745098 .313725 RG
newpath
21.1862 .815575 m
.100452 21.9014 l
-20.9853 .815575 l
.100452 -20.2702 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.100452 -21.6844 m
22.6005 .815575 l
.100452 23.3156 l
-22.3995 .815575 l
h
21.1862 .815575 m
.100452 21.9014 l
-20.9853 .815575 l
.100452 -20.2702 l
h
f*
.100452 .815575 translate
1.00000 1.00000 scale
-19.0312 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
9.91602 -8.67188 l
14.2754 -1.96875 l
14.2754 -8.67188 l
15.3379 -8.67188 l
15.3379 0.00000 l
14.1348 0.00000 l
9.75977 -6.70312 l
9.75977 0.00000 l
8.71289 0.00000 l
h
17.5781 0.00000 m
17.5781 -8.67188 l
22.4219 -8.67188 l
22.4219 -7.75000 l
18.7969 -7.75000 l
18.7969 -4.84375 l
21.8438 -4.84375 l
21.8438 -3.93750 l
18.7969 -3.93750 l
18.7969 0.00000 l
17.5781 0.00000 l
h
24.6992 0.00000 m
24.6992 -.875000 l
26.4336 -.875000 l
26.4336 -7.71875 l
24.6992 -7.28125 l
24.6992 -8.17188 l
27.5898 -8.89062 l
27.5898 -.875000 l
29.3242 -.875000 l
29.3242 0.00000 l
24.6992 0.00000 l
h
31.8340 -.0468750 m
31.8340 -1.03125 l
32.5736 -.781250 33.1986 -.656250 33.7090 -.656250  c
34.4277 -.656250 34.9902 -.960938 35.3965 -1.57031  c
35.8027 -2.17969 36.0059 -3.03125 36.0059 -4.12500  c
35.4225 -3.39583 34.7559 -3.03125 34.0059 -3.03125  c
33.2767 -3.03125 32.6595 -3.29948 32.1543 -3.83594  c
31.6491 -4.37240 31.3965 -5.03125 31.3965 -5.81250  c
31.3965 -6.69792 31.6647 -7.43229 32.2012 -8.01562  c
32.7376 -8.59896 33.4173 -8.89062 34.2402 -8.89062  c
35.1882 -8.89062 35.9329 -8.51302 36.4746 -7.75781  c
37.0163 -7.00260 37.2871 -5.96875 37.2871 -4.65625  c
37.2871 -3.16667 36.9564 -1.98177 36.2949 -1.10156  c
35.6335 -.221354 34.7350 .218750 33.5996 .218750  c
33.1517 .218750 32.5632 .130208 31.8340 -.0468750  c
h
32.5371 -6.03125 m
32.5371 -5.36458 32.6882 -4.83854 32.9902 -4.45312  c
33.2923 -4.06771 33.7038 -3.87500 34.2246 -3.87500  c
34.7142 -3.87500 35.1309 -4.03906 35.4746 -4.36719  c
35.8184 -4.69531 35.9902 -5.09375 35.9902 -5.56250  c
35.9902 -6.30208 35.8236 -6.89844 35.4902 -7.35156  c
35.1569 -7.80469 34.7194 -8.03125 34.1777 -8.03125  c
33.6673 -8.03125 33.2663 -7.85156 32.9746 -7.49219  c
32.6829 -7.13281 32.5371 -6.64583 32.5371 -6.03125  c
h
f
[ 1.05434 0.00000 0.00000 1.05434 136.432 22.8628 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .835294 .635294 RG
newpath
72.8260 65.2301 m
72.8260 77.1042 63.2001 86.7301 51.3260 86.7301  c
39.4519 86.7301 29.8260 77.1042 29.8260 65.2301  c
29.8260 53.3560 39.4519 43.7301 51.3260 43.7301  c
63.2001 43.7301 72.8260 53.3560 72.8260 65.2301  c
h
f
0.00000 0.00000 0.00000 RG
newpath
73.8260 65.2301 m
73.8260 77.6565 63.7524 87.7301 51.3260 87.7301  c
38.8996 87.7301 28.8260 77.6565 28.8260 65.2301  c
28.8260 52.8037 38.8996 42.7301 51.3260 42.7301  c
63.7524 42.7301 73.8260 52.8037 73.8260 65.2301  c
h
72.8260 65.2301 m
72.8260 77.1042 63.2001 86.7301 51.3260 86.7301  c
39.4519 86.7301 29.8260 77.1042 29.8260 65.2301  c
29.8260 53.3560 39.4519 43.7301 51.3260 43.7301  c
63.2001 43.7301 72.8260 53.3560 72.8260 65.2301  c
h
f*
51.3260 65.2301 translate
1.00000 1.00000 scale
-21.6475 4.42090 translate
newpath
1.04688 -8.67188 m
2.28125 -8.67188 l
2.28125 -3.20312 l
2.28125 -2.32812 2.44271 -1.69271 2.76562 -1.29688  c
3.08854 -.901042 3.59896 -.703125 4.29688 -.703125  c
4.98438 -.703125 5.47135 -.890625 5.75781 -1.26562  c
6.04427 -1.64062 6.18750 -2.27083 6.18750 -3.15625  c
6.18750 -8.67188 l
7.26562 -8.67188 l
7.26562 -3.17188 l
7.26562 -1.99479 7.02344 -1.13542 6.53906 -.593750  c
6.05469 -.0520833 5.28125 .218750 4.21875 .218750  c
3.13542 .218750 2.33594 -.0598958 1.82031 -.617188  c
1.30469 -1.17448 1.04688 -2.04167 1.04688 -3.21875  c
1.04688 -8.67188 l
h
9.43945 0.00000 m
9.43945 -8.67188 l
11.6895 -8.67188 l
12.5540 -8.67188 13.2181 -8.50781 13.6816 -8.17969  c
14.1452 -7.85156 14.3770 -7.38021 14.3770 -6.76562  c
14.3770 -5.71354 13.7832 -4.96354 12.5957 -4.51562  c
14.0124 -4.08854 14.7207 -3.30729 14.7207 -2.17188  c
14.7207 -1.46354 14.4863 -.924479 14.0176 -.554688  c
13.5488 -.184896 12.8717 0.00000 11.9863 0.00000  c
9.43945 0.00000 l
h
10.6582 -.921875 m
10.9082 -.921875 l
11.8040 -.921875 12.3874 -.979167 12.6582 -1.09375  c
13.1686 -1.30208 13.4238 -1.69792 13.4238 -2.28125  c
13.4238 -2.80208 13.1921 -3.23177 12.7285 -3.57031  c
12.2650 -3.90885 11.6895 -4.07812 11.0020 -4.07812  c
10.6582 -4.07812 l
10.6582 -.921875 l
h
10.6582 -4.85938 m
11.0488 -4.85938 l
11.7051 -4.85938 12.2129 -5.00000 12.5723 -5.28125  c
12.9316 -5.56250 13.1113 -5.95833 13.1113 -6.46875  c
13.1113 -7.32292 12.4499 -7.75000 11.1270 -7.75000  c
10.6582 -7.75000 l
10.6582 -4.85938 l
h
16.3418 0.00000 m
16.3418 -8.67188 l
21.1855 -8.67188 l
21.1855 -7.75000 l
17.5605 -7.75000 l
17.5605 -4.96875 l
20.5918 -4.96875 l
20.5918 -4.06250 l
17.5605 -4.06250 l
17.5605 -.921875 l
21.4355 -.921875 l
21.4355 0.00000 l
16.3418 0.00000 l
h
22.7207 0.00000 m
22.7207 -1.01562 l
23.0540 -1.79688 23.7311 -2.65104 24.7520 -3.57812  c
25.4238 -4.17188 l
26.2676 -4.94271 26.6895 -5.70833 26.6895 -6.46875  c
26.6895 -6.94792 26.5462 -7.32552 26.2598 -7.60156  c
25.9733 -7.87760 25.5749 -8.01562 25.0645 -8.01562  c
24.4603 -8.01562 23.7520 -7.78646 22.9395 -7.32812  c
22.9395 -8.34375 l
23.7103 -8.70833 24.4707 -8.89062 25.2207 -8.89062  c
26.0332 -8.89062 26.6868 -8.67188 27.1816 -8.23438  c
27.6764 -7.79688 27.9238 -7.21875 27.9238 -6.50000  c
27.9238 -5.97917 27.7988 -5.51562 27.5488 -5.10938  c
27.2988 -4.70312 26.8353 -4.21354 26.1582 -3.64062  c
25.7207 -3.26562 l
24.7936 -2.48438 24.2572 -1.73438 24.1113 -1.01562  c
27.8770 -1.01562 l
27.8770 0.00000 l
22.7207 0.00000 l
h
30.4336 0.00000 m
30.4336 -8.67188 l
31.6523 -8.67188 l
31.6523 -.921875 l
35.5586 -.921875 l
35.5586 0.00000 l
30.4336 0.00000 l
h
36.9258 -.0625000 m
36.9258 -1.14062 l
37.7591 -.817708 38.4102 -.656250 38.8789 -.656250  c
39.4310 -.656250 39.8815 -.817708 40.2305 -1.14062  c
40.5794 -1.46354 40.7539 -1.88021 40.7539 -2.39062  c
40.7539 -3.60938 39.8997 -4.21875 38.1914 -4.21875  c
37.7227 -4.21875 l
37.7227 -5.00000 l
38.1289 -5.00000 l
39.7331 -5.00000 40.5352 -5.56250 40.5352 -6.68750  c
40.5352 -7.57292 40.0091 -8.01562 38.9570 -8.01562  c
38.3737 -8.01562 37.7383 -7.85417 37.0508 -7.53125  c
37.0508 -8.54688 l
37.7279 -8.77604 38.3893 -8.89062 39.0352 -8.89062  c
40.8060 -8.89062 41.6914 -8.21875 41.6914 -6.87500  c
41.6914 -5.85417 41.0872 -5.13021 39.8789 -4.70312  c
41.2852 -4.38021 41.9883 -3.61458 41.9883 -2.40625  c
41.9883 -1.58333 41.7174 -.940104 41.1758 -.476562  c
40.6341 -.0130208 39.8945 .218750 38.9570 .218750  c
38.4154 .218750 37.7383 .125000 36.9258 -.0625000  c
h
f
[ 1.05434 0.00000 0.00000 1.05434 136.432 22.8628 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
