%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:48:07 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.70319 0.00000 0.00000 1.70319 37.3389 71.1831 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
13.2686 117.378 m
34.3084 86.5789 l
S
newpath
106.800 68.0000 m
69.5000 68.0000 l
S
newpath
145.210 83.9099 m
171.585 110.285 l
S
newpath
171.585 25.7150 m
145.210 52.0901 l
S
newpath
9.70902 13.4107 m
34.3084 49.4211 l
S
.870588 1.00000 .713725 RG
newpath
22.0771 135.957 m
22.0771 147.831 12.4512 157.457 .577059 157.457  c
-11.2971 157.457 -20.9229 147.831 -20.9229 135.957  c
-20.9229 124.083 -11.2971 114.457 .577059 114.457  c
12.4512 114.457 22.0771 124.083 22.0771 135.957  c
h
f
0.00000 0.00000 0.00000 RG
newpath
23.0771 135.957 m
23.0771 148.384 13.0035 158.457 .577059 158.457  c
-11.8493 158.457 -21.9229 148.384 -21.9229 135.957  c
-21.9229 123.531 -11.8493 113.457 .577059 113.457  c
13.0035 113.457 23.0771 123.531 23.0771 135.957  c
h
22.0771 135.957 m
22.0771 147.831 12.4512 157.457 .577059 157.457  c
-11.2971 157.457 -20.9229 147.831 -20.9229 135.957  c
-20.9229 124.083 -11.2971 114.457 .577059 114.457  c
12.4512 114.457 22.0771 124.083 22.0771 135.957  c
h
f*
.577059 135.957 translate
1.00000 1.00000 scale
-18.8496 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
11.0723 -8.67188 l
12.1139 -8.67188 12.8639 -8.49479 13.3223 -8.14062  c
13.7806 -7.78646 14.0098 -7.20833 14.0098 -6.40625  c
14.0098 -5.47917 13.6973 -4.75521 13.0723 -4.23438  c
12.4473 -3.71354 11.5827 -3.45312 10.4785 -3.45312  c
9.93164 -3.45312 l
9.93164 0.00000 l
8.71289 0.00000 l
h
9.93164 -4.37500 m
10.4316 -4.37500 l
11.1608 -4.37500 11.7233 -4.54427 12.1191 -4.88281  c
12.5150 -5.22135 12.7129 -5.69792 12.7129 -6.31250  c
12.7129 -6.82292 12.5566 -7.19010 12.2441 -7.41406  c
11.9316 -7.63802 11.4108 -7.75000 10.6816 -7.75000  c
9.93164 -7.75000 l
9.93164 -4.37500 l
h
15.3457 0.00000 m
15.3457 -8.67188 l
17.9707 -8.67188 l
18.8040 -8.67188 19.4421 -8.48958 19.8848 -8.12500  c
20.3275 -7.76042 20.5488 -7.22396 20.5488 -6.51562  c
20.5488 -5.35938 19.9655 -4.54167 18.7988 -4.06250  c
21.6895 0.00000 l
20.1738 0.00000 l
17.7051 -3.67188 l
16.5645 -3.67188 l
16.5645 0.00000 l
15.3457 0.00000 l
h
16.5645 -4.59375 m
16.9551 -4.59375 l
18.5072 -4.59375 19.2832 -5.19792 19.2832 -6.40625  c
19.2832 -7.30208 18.6322 -7.75000 17.3301 -7.75000  c
16.5645 -7.75000 l
16.5645 -4.59375 l
h
26.6367 .218750 m
25.2930 .218750 24.2539 -.177083 23.5195 -.968750  c
22.7852 -1.76042 22.4180 -2.88021 22.4180 -4.32812  c
22.4180 -5.77604 22.7930 -6.89844 23.5430 -7.69531  c
24.2930 -8.49219 25.3451 -8.89062 26.6992 -8.89062  c
27.4805 -8.89062 28.3919 -8.76562 29.4336 -8.51562  c
29.4336 -7.35938 l
28.2461 -7.76562 27.3294 -7.96875 26.6836 -7.96875  c
25.7461 -7.96875 25.0195 -7.65104 24.5039 -7.01562  c
23.9883 -6.38021 23.7305 -5.47917 23.7305 -4.31250  c
23.7305 -3.20833 24.0039 -2.33854 24.5508 -1.70312  c
25.0977 -1.06771 25.8503 -.750000 26.8086 -.750000  c
27.6315 -.750000 28.5117 -1.00000 29.4492 -1.50000  c
29.4492 -.453125 l
28.5951 -.00520833 27.6576 .218750 26.6367 .218750  c
h
31.9238 0.00000 m
31.9238 -.875000 l
33.6582 -.875000 l
33.6582 -7.71875 l
31.9238 -7.28125 l
31.9238 -8.17188 l
34.8145 -8.89062 l
34.8145 -.875000 l
36.5488 -.875000 l
36.5488 0.00000 l
31.9238 0.00000 l
h
f
[ 1.70319 0.00000 0.00000 1.70319 37.3389 71.1831 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .709804 .509804 RG
newpath
150.800 68.0000 m
150.800 79.8741 141.174 89.5000 129.300 89.5000  c
117.426 89.5000 107.800 79.8741 107.800 68.0000  c
107.800 56.1259 117.426 46.5000 129.300 46.5000  c
141.174 46.5000 150.800 56.1259 150.800 68.0000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
151.800 68.0000 m
151.800 80.4264 141.726 90.5000 129.300 90.5000  c
116.874 90.5000 106.800 80.4264 106.800 68.0000  c
106.800 55.5736 116.874 45.5000 129.300 45.5000  c
141.726 45.5000 151.800 55.5736 151.800 68.0000  c
h
150.800 68.0000 m
150.800 79.8741 141.174 89.5000 129.300 89.5000  c
117.426 89.5000 107.800 79.8741 107.800 68.0000  c
107.800 56.1259 117.426 46.5000 129.300 46.5000  c
141.174 46.5000 150.800 56.1259 150.800 68.0000  c
h
f*
129.300 68.0000 translate
1.00000 1.00000 scale
-19.1543 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
12.9121 .218750 m
11.7142 .218750 10.7480 -.197917 10.0137 -1.03125  c
9.27930 -1.86458 8.91211 -2.96875 8.91211 -4.34375  c
8.91211 -5.71875 9.27930 -6.82031 10.0137 -7.64844  c
10.7480 -8.47656 11.7350 -8.89062 12.9746 -8.89062  c
14.1934 -8.89062 15.1725 -8.47917 15.9121 -7.65625  c
16.6517 -6.83333 17.0215 -5.73438 17.0215 -4.35938  c
17.0215 -2.95312 16.6517 -1.83854 15.9121 -1.01562  c
15.1725 -.192708 14.1725 .218750 12.9121 .218750  c
h
12.9277 -.703125 m
13.8132 -.703125 14.4980 -1.02344 14.9824 -1.66406  c
15.4668 -2.30469 15.7090 -3.20312 15.7090 -4.35938  c
15.7090 -5.49479 15.4668 -6.38021 14.9824 -7.01562  c
14.4980 -7.65104 13.8288 -7.96875 12.9746 -7.96875  c
12.1100 -7.96875 11.4355 -7.64844 10.9512 -7.00781  c
10.4668 -6.36719 10.2246 -5.47917 10.2246 -4.34375  c
10.2246 -3.21875 10.4642 -2.33073 10.9434 -1.67969  c
11.4225 -1.02865 12.0840 -.703125 12.9277 -.703125  c
h
18.7500 0.00000 m
18.7500 -8.67188 l
21.1094 -8.67188 l
22.1510 -8.67188 22.9010 -8.49479 23.3594 -8.14062  c
23.8177 -7.78646 24.0469 -7.20833 24.0469 -6.40625  c
24.0469 -5.47917 23.7344 -4.75521 23.1094 -4.23438  c
22.4844 -3.71354 21.6198 -3.45312 20.5156 -3.45312  c
19.9688 -3.45312 l
19.9688 0.00000 l
18.7500 0.00000 l
h
19.9688 -4.37500 m
20.4688 -4.37500 l
21.1979 -4.37500 21.7604 -4.54427 22.1562 -4.88281  c
22.5521 -5.22135 22.7500 -5.69792 22.7500 -6.31250  c
22.7500 -6.82292 22.5938 -7.19010 22.2812 -7.41406  c
21.9688 -7.63802 21.4479 -7.75000 20.7188 -7.75000  c
19.9688 -7.75000 l
19.9688 -4.37500 l
h
27.0703 .218750 m
26.4974 .218750 25.7578 .0885417 24.8516 -.171875  c
24.8516 -1.39062 l
25.8203 -.932292 26.6224 -.703125 27.2578 -.703125  c
27.7370 -.703125 28.1250 -.830729 28.4219 -1.08594  c
28.7188 -1.34115 28.8672 -1.67708 28.8672 -2.09375  c
28.8672 -2.42708 28.7708 -2.71354 28.5781 -2.95312  c
28.3854 -3.19271 28.0286 -3.45833 27.5078 -3.75000  c
26.9141 -4.09375 l
26.1745 -4.52083 25.6536 -4.91927 25.3516 -5.28906  c
25.0495 -5.65885 24.8984 -6.09375 24.8984 -6.59375  c
24.8984 -7.26042 25.1406 -7.80990 25.6250 -8.24219  c
26.1094 -8.67448 26.7266 -8.89062 27.4766 -8.89062  c
28.1432 -8.89062 28.8464 -8.78125 29.5859 -8.56250  c
29.5859 -7.43750 l
28.6693 -7.79167 27.9870 -7.96875 27.5391 -7.96875  c
27.1120 -7.96875 26.7604 -7.85677 26.4844 -7.63281  c
26.2083 -7.40885 26.0703 -7.12500 26.0703 -6.78125  c
26.0703 -6.48958 26.1719 -6.23177 26.3750 -6.00781  c
26.5781 -5.78385 26.9505 -5.51562 27.4922 -5.20312  c
28.1016 -4.85938 l
28.8516 -4.43229 29.3750 -4.02865 29.6719 -3.64844  c
29.9688 -3.26823 30.1172 -2.81250 30.1172 -2.28125  c
30.1172 -1.53125 29.8411 -.927083 29.2891 -.468750  c
28.7370 -.0104167 27.9974 .218750 27.0703 .218750  c
h
35.2363 0.00000 m
35.2363 -2.45312 l
31.3301 -2.45312 l
31.3301 -3.32812 l
35.2363 -8.67188 l
36.3301 -8.67188 l
36.3301 -3.40625 l
37.4863 -3.40625 l
37.4863 -2.45312 l
36.3301 -2.45312 l
36.3301 0.00000 l
35.2363 0.00000 l
h
32.4707 -3.40625 m
35.3145 -3.40625 l
35.3145 -7.25000 l
32.4707 -3.40625 l
h
f
[ 1.70319 0.00000 0.00000 1.70319 37.3389 71.1831 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .603922 .403922 RG
newpath
208.995 126.195 m
208.995 138.069 199.369 147.695 187.495 147.695  c
175.621 147.695 165.995 138.069 165.995 126.195  c
165.995 114.321 175.621 104.695 187.495 104.695  c
199.369 104.695 208.995 114.321 208.995 126.195  c
h
f
0.00000 0.00000 0.00000 RG
newpath
209.995 126.195 m
209.995 138.621 199.921 148.695 187.495 148.695  c
175.068 148.695 164.995 138.621 164.995 126.195  c
164.995 113.768 175.068 103.695 187.495 103.695  c
199.921 103.695 209.995 113.768 209.995 126.195  c
h
208.995 126.195 m
208.995 138.069 199.369 147.695 187.495 147.695  c
175.621 147.695 165.995 138.069 165.995 126.195  c
165.995 114.321 175.621 104.695 187.495 104.695  c
199.369 104.695 208.995 114.321 208.995 126.195  c
h
f*
187.495 126.195 translate
1.00000 1.00000 scale
-13.6641 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.82812 -8.67188 l
5.23438 -1.96875 l
7.70312 -8.67188 l
9.21875 -8.67188 l
9.21875 0.00000 l
8.07812 0.00000 l
8.07812 -7.06250 l
5.68750 -.578125 l
4.50000 -.578125 l
2.17188 -7.07812 l
2.17188 0.00000 l
1.12500 0.00000 l
h
11.4609 0.00000 m
11.4609 -8.67188 l
13.7109 -8.67188 l
14.5755 -8.67188 15.2396 -8.50781 15.7031 -8.17969  c
16.1667 -7.85156 16.3984 -7.38021 16.3984 -6.76562  c
16.3984 -5.71354 15.8047 -4.96354 14.6172 -4.51562  c
16.0339 -4.08854 16.7422 -3.30729 16.7422 -2.17188  c
16.7422 -1.46354 16.5078 -.924479 16.0391 -.554688  c
15.5703 -.184896 14.8932 0.00000 14.0078 0.00000  c
11.4609 0.00000 l
h
12.6797 -.921875 m
12.9297 -.921875 l
13.8255 -.921875 14.4089 -.979167 14.6797 -1.09375  c
15.1901 -1.30208 15.4453 -1.69792 15.4453 -2.28125  c
15.4453 -2.80208 15.2135 -3.23177 14.7500 -3.57031  c
14.2865 -3.90885 13.7109 -4.07812 13.0234 -4.07812  c
12.6797 -4.07812 l
12.6797 -.921875 l
h
12.6797 -4.85938 m
13.0703 -4.85938 l
13.7266 -4.85938 14.2344 -5.00000 14.5938 -5.28125  c
14.9531 -5.56250 15.1328 -5.95833 15.1328 -6.46875  c
15.1328 -7.32292 14.4714 -7.75000 13.1484 -7.75000  c
12.6797 -7.75000 l
12.6797 -4.85938 l
h
18.3477 0.00000 m
18.3477 -8.67188 l
19.5820 -8.67188 l
19.5820 0.00000 l
18.3477 0.00000 l
h
21.8203 0.00000 m
21.8203 -8.67188 l
24.1797 -8.67188 l
25.2214 -8.67188 25.9714 -8.49479 26.4297 -8.14062  c
26.8880 -7.78646 27.1172 -7.20833 27.1172 -6.40625  c
27.1172 -5.47917 26.8047 -4.75521 26.1797 -4.23438  c
25.5547 -3.71354 24.6901 -3.45312 23.5859 -3.45312  c
23.0391 -3.45312 l
23.0391 0.00000 l
21.8203 0.00000 l
h
23.0391 -4.37500 m
23.5391 -4.37500 l
24.2682 -4.37500 24.8307 -4.54427 25.2266 -4.88281  c
25.6224 -5.22135 25.8203 -5.69792 25.8203 -6.31250  c
25.8203 -6.82292 25.6641 -7.19010 25.3516 -7.41406  c
25.0391 -7.63802 24.5182 -7.75000 23.7891 -7.75000  c
23.0391 -7.75000 l
23.0391 -4.37500 l
h
f
[ 1.70319 0.00000 0.00000 1.70319 37.3389 71.1831 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .439216 .239216 RG
newpath
68.5000 68.0000 m
68.5000 79.8741 58.8741 89.5000 47.0000 89.5000  c
35.1259 89.5000 25.5000 79.8741 25.5000 68.0000  c
25.5000 56.1259 35.1259 46.5000 47.0000 46.5000  c
58.8741 46.5000 68.5000 56.1259 68.5000 68.0000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
69.5000 68.0000 m
69.5000 80.4264 59.4264 90.5000 47.0000 90.5000  c
34.5736 90.5000 24.5000 80.4264 24.5000 68.0000  c
24.5000 55.5736 34.5736 45.5000 47.0000 45.5000  c
59.4264 45.5000 69.5000 55.5736 69.5000 68.0000  c
h
68.5000 68.0000 m
68.5000 79.8741 58.8741 89.5000 47.0000 89.5000  c
35.1259 89.5000 25.5000 79.8741 25.5000 68.0000  c
25.5000 56.1259 35.1259 46.5000 47.0000 46.5000  c
58.8741 46.5000 68.5000 56.1259 68.5000 68.0000  c
h
f*
47.0000 68.0000 translate
1.00000 1.00000 scale
-19.1543 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
12.9121 .218750 m
11.7142 .218750 10.7480 -.197917 10.0137 -1.03125  c
9.27930 -1.86458 8.91211 -2.96875 8.91211 -4.34375  c
8.91211 -5.71875 9.27930 -6.82031 10.0137 -7.64844  c
10.7480 -8.47656 11.7350 -8.89062 12.9746 -8.89062  c
14.1934 -8.89062 15.1725 -8.47917 15.9121 -7.65625  c
16.6517 -6.83333 17.0215 -5.73438 17.0215 -4.35938  c
17.0215 -2.95312 16.6517 -1.83854 15.9121 -1.01562  c
15.1725 -.192708 14.1725 .218750 12.9121 .218750  c
h
12.9277 -.703125 m
13.8132 -.703125 14.4980 -1.02344 14.9824 -1.66406  c
15.4668 -2.30469 15.7090 -3.20312 15.7090 -4.35938  c
15.7090 -5.49479 15.4668 -6.38021 14.9824 -7.01562  c
14.4980 -7.65104 13.8288 -7.96875 12.9746 -7.96875  c
12.1100 -7.96875 11.4355 -7.64844 10.9512 -7.00781  c
10.4668 -6.36719 10.2246 -5.47917 10.2246 -4.34375  c
10.2246 -3.21875 10.4642 -2.33073 10.9434 -1.67969  c
11.4225 -1.02865 12.0840 -.703125 12.9277 -.703125  c
h
18.7500 0.00000 m
18.7500 -8.67188 l
21.1094 -8.67188 l
22.1510 -8.67188 22.9010 -8.49479 23.3594 -8.14062  c
23.8177 -7.78646 24.0469 -7.20833 24.0469 -6.40625  c
24.0469 -5.47917 23.7344 -4.75521 23.1094 -4.23438  c
22.4844 -3.71354 21.6198 -3.45312 20.5156 -3.45312  c
19.9688 -3.45312 l
19.9688 0.00000 l
18.7500 0.00000 l
h
19.9688 -4.37500 m
20.4688 -4.37500 l
21.1979 -4.37500 21.7604 -4.54427 22.1562 -4.88281  c
22.5521 -5.22135 22.7500 -5.69792 22.7500 -6.31250  c
22.7500 -6.82292 22.5938 -7.19010 22.2812 -7.41406  c
21.9688 -7.63802 21.4479 -7.75000 20.7188 -7.75000  c
19.9688 -7.75000 l
19.9688 -4.37500 l
h
27.0703 .218750 m
26.4974 .218750 25.7578 .0885417 24.8516 -.171875  c
24.8516 -1.39062 l
25.8203 -.932292 26.6224 -.703125 27.2578 -.703125  c
27.7370 -.703125 28.1250 -.830729 28.4219 -1.08594  c
28.7188 -1.34115 28.8672 -1.67708 28.8672 -2.09375  c
28.8672 -2.42708 28.7708 -2.71354 28.5781 -2.95312  c
28.3854 -3.19271 28.0286 -3.45833 27.5078 -3.75000  c
26.9141 -4.09375 l
26.1745 -4.52083 25.6536 -4.91927 25.3516 -5.28906  c
25.0495 -5.65885 24.8984 -6.09375 24.8984 -6.59375  c
24.8984 -7.26042 25.1406 -7.80990 25.6250 -8.24219  c
26.1094 -8.67448 26.7266 -8.89062 27.4766 -8.89062  c
28.1432 -8.89062 28.8464 -8.78125 29.5859 -8.56250  c
29.5859 -7.43750 l
28.6693 -7.79167 27.9870 -7.96875 27.5391 -7.96875  c
27.1120 -7.96875 26.7604 -7.85677 26.4844 -7.63281  c
26.2083 -7.40885 26.0703 -7.12500 26.0703 -6.78125  c
26.0703 -6.48958 26.1719 -6.23177 26.3750 -6.00781  c
26.5781 -5.78385 26.9505 -5.51562 27.4922 -5.20312  c
28.1016 -4.85938 l
28.8516 -4.43229 29.3750 -4.02865 29.6719 -3.64844  c
29.9688 -3.26823 30.1172 -2.81250 30.1172 -2.28125  c
30.1172 -1.53125 29.8411 -.927083 29.2891 -.468750  c
28.7370 -.0104167 27.9974 .218750 27.0703 .218750  c
h
32.7832 -4.50000 m
33.3353 -5.20833 34.0280 -5.56250 34.8613 -5.56250  c
35.6217 -5.56250 36.2441 -5.31250 36.7285 -4.81250  c
37.2129 -4.31250 37.4551 -3.67188 37.4551 -2.89062  c
37.4551 -1.98438 37.1842 -1.23958 36.6426 -.656250  c
36.1009 -.0729167 35.4134 .218750 34.5801 .218750  c
33.6217 .218750 32.8717 -.166667 32.3301 -.937500  c
31.7884 -1.70833 31.5176 -2.77604 31.5176 -4.14062  c
31.5176 -5.65104 31.8275 -6.82031 32.4473 -7.64844  c
33.0671 -8.47656 33.9395 -8.89062 35.0645 -8.89062  c
35.5853 -8.89062 36.2311 -8.78125 37.0020 -8.56250  c
37.0020 -7.56250 l
36.1895 -7.87500 35.5228 -8.03125 35.0020 -8.03125  c
33.5228 -8.03125 32.7832 -6.85417 32.7832 -4.50000  c
h
36.2832 -2.62500 m
36.2832 -3.28125 36.1374 -3.79688 35.8457 -4.17188  c
35.5540 -4.54688 35.1426 -4.73438 34.6113 -4.73438  c
34.1322 -4.73438 33.7155 -4.57031 33.3613 -4.24219  c
33.0072 -3.91406 32.8301 -3.52083 32.8301 -3.06250  c
32.8301 -2.33333 32.9967 -1.75000 33.3301 -1.31250  c
33.6634 -.875000 34.1061 -.656250 34.6582 -.656250  c
35.1582 -.656250 35.5540 -.833333 35.8457 -1.18750  c
36.1374 -1.54167 36.2832 -2.02083 36.2832 -2.62500  c
h
f
[ 1.70319 0.00000 0.00000 1.70319 37.3389 71.1831 ] defaultmatrix matrix concatmatrix setmatrix
.980392 .360784 .200000 RG
newpath
21.6628 .0426559 m
.577059 21.1284 l
-20.5087 .0426559 l
.577059 -21.0431 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.577059 -22.4573 m
23.0771 .0426559 l
.577059 22.5427 l
-21.9229 .0426559 l
h
21.6628 .0426559 m
.577059 21.1284 l
-20.5087 .0426559 l
.577059 -21.0431 l
h
f*
.577059 .0426559 translate
1.00000 1.00000 scale
-21.6826 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
4.00000 -8.67188 l
4.86458 -8.67188 5.55990 -8.57552 6.08594 -8.38281  c
6.61198 -8.19010 7.06771 -7.86458 7.45312 -7.40625  c
8.06771 -6.68750 8.37500 -5.73438 8.37500 -4.54688  c
8.37500 -3.09896 7.99479 -1.97917 7.23438 -1.18750  c
6.47396 -.395833 5.40104 0.00000 4.01562 0.00000  c
1.12500 0.00000 l
h
2.34375 -.921875 m
3.92188 -.921875 l
5.04688 -.921875 5.84375 -1.22396 6.31250 -1.82812  c
6.82292 -2.47396 7.07812 -3.33854 7.07812 -4.42188  c
7.07812 -5.44271 6.82812 -6.24479 6.32812 -6.82812  c
6.02604 -7.18229 5.66667 -7.42448 5.25000 -7.55469  c
4.83333 -7.68490 4.20312 -7.75000 3.35938 -7.75000  c
2.34375 -7.75000 l
2.34375 -.921875 l
h
10.1133 0.00000 m
10.1133 -8.67188 l
11.3164 -8.67188 l
15.6758 -1.96875 l
15.6758 -8.67188 l
16.7383 -8.67188 l
16.7383 0.00000 l
15.5352 0.00000 l
11.1602 -6.70312 l
11.1602 0.00000 l
10.1133 0.00000 l
h
18.9785 0.00000 m
18.9785 -8.67188 l
20.6816 -8.67188 l
23.0879 -1.96875 l
25.5566 -8.67188 l
27.0723 -8.67188 l
27.0723 0.00000 l
25.9316 0.00000 l
25.9316 -7.06250 l
23.5410 -.578125 l
22.3535 -.578125 l
20.0254 -7.07812 l
20.0254 0.00000 l
18.9785 0.00000 l
h
31.3770 0.00000 m
31.3770 -7.75000 l
28.2988 -7.75000 l
28.2988 -8.67188 l
35.6738 -8.67188 l
35.6738 -7.75000 l
32.5957 -7.75000 l
32.5957 0.00000 l
31.3770 0.00000 l
h
36.7773 0.00000 m
36.7773 -1.01562 l
37.1107 -1.79688 37.7878 -2.65104 38.8086 -3.57812  c
39.4805 -4.17188 l
40.3242 -4.94271 40.7461 -5.70833 40.7461 -6.46875  c
40.7461 -6.94792 40.6029 -7.32552 40.3164 -7.60156  c
40.0299 -7.87760 39.6315 -8.01562 39.1211 -8.01562  c
38.5169 -8.01562 37.8086 -7.78646 36.9961 -7.32812  c
36.9961 -8.34375 l
37.7669 -8.70833 38.5273 -8.89062 39.2773 -8.89062  c
40.0898 -8.89062 40.7435 -8.67188 41.2383 -8.23438  c
41.7331 -7.79688 41.9805 -7.21875 41.9805 -6.50000  c
41.9805 -5.97917 41.8555 -5.51562 41.6055 -5.10938  c
41.3555 -4.70312 40.8919 -4.21354 40.2148 -3.64062  c
39.7773 -3.26562 l
38.8503 -2.48438 38.3138 -1.73438 38.1680 -1.01562  c
41.9336 -1.01562 l
41.9336 0.00000 l
36.7773 0.00000 l
h
f
[ 1.70319 0.00000 0.00000 1.70319 37.3389 71.1831 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .701961 .501961 RG
newpath
208.995 9.80511 m
208.995 21.6792 199.369 31.3051 187.495 31.3051  c
175.621 31.3051 165.995 21.6792 165.995 9.80511  c
165.995 -2.06901 175.621 -11.6949 187.495 -11.6949  c
199.369 -11.6949 208.995 -2.06901 208.995 9.80511  c
h
f
0.00000 0.00000 0.00000 RG
newpath
209.995 9.80511 m
209.995 22.2315 199.921 32.3051 187.495 32.3051  c
175.068 32.3051 164.995 22.2315 164.995 9.80511  c
164.995 -2.62130 175.068 -12.6949 187.495 -12.6949  c
199.921 -12.6949 209.995 -2.62130 209.995 9.80511  c
h
208.995 9.80511 m
208.995 21.6792 199.369 31.3051 187.495 31.3051  c
175.621 31.3051 165.995 21.6792 165.995 9.80511  c
165.995 -2.06901 175.621 -11.6949 187.495 -11.6949  c
199.369 -11.6949 208.995 -2.06901 208.995 9.80511  c
h
f*
187.495 9.80511 translate
1.00000 1.00000 scale
-17.4844 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
11.4609 .218750 m
10.1172 .218750 9.07812 -.177083 8.34375 -.968750  c
7.60938 -1.76042 7.24219 -2.88021 7.24219 -4.32812  c
7.24219 -5.77604 7.61719 -6.89844 8.36719 -7.69531  c
9.11719 -8.49219 10.1693 -8.89062 11.5234 -8.89062  c
12.3047 -8.89062 13.2161 -8.76562 14.2578 -8.51562  c
14.2578 -7.35938 l
13.0703 -7.76562 12.1536 -7.96875 11.5078 -7.96875  c
10.5703 -7.96875 9.84375 -7.65104 9.32812 -7.01562  c
8.81250 -6.38021 8.55469 -5.47917 8.55469 -4.31250  c
8.55469 -3.20833 8.82812 -2.33854 9.37500 -1.70312  c
9.92188 -1.06771 10.6745 -.750000 11.6328 -.750000  c
12.4557 -.750000 13.3359 -1.00000 14.2734 -1.50000  c
14.2734 -.453125 l
13.4193 -.00520833 12.4818 .218750 11.4609 .218750  c
h
16.0449 0.00000 m
16.0449 -8.67188 l
17.2793 -8.67188 l
17.2793 0.00000 l
16.0449 0.00000 l
h
19.5176 0.00000 m
19.5176 -8.67188 l
22.3926 -8.67188 l
23.2572 -8.67188 23.9525 -8.57552 24.4785 -8.38281  c
25.0046 -8.19010 25.4603 -7.86458 25.8457 -7.40625  c
26.4603 -6.68750 26.7676 -5.73438 26.7676 -4.54688  c
26.7676 -3.09896 26.3874 -1.97917 25.6270 -1.18750  c
24.8665 -.395833 23.7936 0.00000 22.4082 0.00000  c
19.5176 0.00000 l
h
20.7363 -.921875 m
22.3145 -.921875 l
23.4395 -.921875 24.2363 -1.22396 24.7051 -1.82812  c
25.2155 -2.47396 25.4707 -3.33854 25.4707 -4.42188  c
25.4707 -5.44271 25.2207 -6.24479 24.7207 -6.82812  c
24.4186 -7.18229 24.0592 -7.42448 23.6426 -7.55469  c
23.2259 -7.68490 22.5957 -7.75000 21.7520 -7.75000  c
20.7363 -7.75000 l
20.7363 -.921875 l
h
29.1934 0.00000 m
29.1934 -.875000 l
30.9277 -.875000 l
30.9277 -7.71875 l
29.1934 -7.28125 l
29.1934 -8.17188 l
32.0840 -8.89062 l
32.0840 -.875000 l
33.8184 -.875000 l
33.8184 0.00000 l
29.1934 0.00000 l
h
f
[ 1.70319 0.00000 0.00000 1.70319 37.3389 71.1831 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
