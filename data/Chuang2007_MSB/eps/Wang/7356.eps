%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:48:02 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.34639 0.00000 0.00000 1.34639 39.7098 29.2098 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
47.7500 47.7500 m
12.0551 12.0551 l
S
newpath
70.2500 70.2500 m
101.285 101.285 l
S
newpath
47.7500 70.2500 m
12.0551 105.945 l
S
newpath
101.285 16.7150 m
70.2500 47.7500 l
S
newpath
186.640 186.640 m
222.335 222.335 l
S
newpath
164.140 164.140 m
133.105 133.105 l
S
.964706 .325490 .200000 RG
newpath
21.8909 .805113 m
.805113 21.8909 l
-20.2807 .805113 l
.805113 -20.2807 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.805113 -21.6949 m
23.3051 .805113 l
.805113 23.3051 l
-21.6949 .805113 l
h
21.8909 .805113 m
.805113 21.8909 l
-20.2807 .805113 l
.805113 -20.2807 l
h
f*
.805113 .805113 translate
1.00000 1.00000 scale
-16.5264 4.42090 translate
newpath
3.18750 0.00000 m
3.18750 -7.75000 l
.109375 -7.75000 l
.109375 -8.67188 l
7.48438 -8.67188 l
7.48438 -7.75000 l
4.40625 -7.75000 l
4.40625 0.00000 l
3.18750 0.00000 l
h
15.2285 -.234375 m
14.1764 .0677083 13.2598 .218750 12.4785 .218750  c
11.0931 .218750 10.0332 -.174479 9.29883 -.960938  c
8.56445 -1.74740 8.19727 -2.87500 8.19727 -4.34375  c
8.19727 -5.78125 8.56966 -6.89844 9.31445 -7.69531  c
10.0592 -8.49219 11.1087 -8.89062 12.4629 -8.89062  c
13.3379 -8.89062 14.2546 -8.76042 15.2129 -8.50000  c
15.2129 -7.35938 l
14.0150 -7.76562 13.0983 -7.96875 12.4629 -7.96875  c
11.5254 -7.96875 10.7988 -7.65104 10.2832 -7.01562  c
9.76758 -6.38021 9.50977 -5.48438 9.50977 -4.32812  c
9.50977 -3.18229 9.78581 -2.29167 10.3379 -1.65625  c
10.8900 -1.02083 11.6660 -.703125 12.6660 -.703125  c
13.0827 -.703125 13.5254 -.776042 13.9941 -.921875  c
13.9941 -3.75000 l
15.2285 -3.75000 l
15.2285 -.234375 l
h
17.3848 0.00000 m
17.3848 -8.67188 l
22.2285 -8.67188 l
22.2285 -7.75000 l
18.6035 -7.75000 l
18.6035 -4.84375 l
21.6504 -4.84375 l
21.6504 -3.93750 l
18.6035 -3.93750 l
18.6035 0.00000 l
17.3848 0.00000 l
h
23.8184 0.00000 m
23.8184 -8.67188 l
26.0684 -8.67188 l
26.9329 -8.67188 27.5970 -8.50781 28.0605 -8.17969  c
28.5241 -7.85156 28.7559 -7.38021 28.7559 -6.76562  c
28.7559 -5.71354 28.1621 -4.96354 26.9746 -4.51562  c
28.3913 -4.08854 29.0996 -3.30729 29.0996 -2.17188  c
29.0996 -1.46354 28.8652 -.924479 28.3965 -.554688  c
27.9277 -.184896 27.2507 0.00000 26.3652 0.00000  c
23.8184 0.00000 l
h
25.0371 -.921875 m
25.2871 -.921875 l
26.1829 -.921875 26.7663 -.979167 27.0371 -1.09375  c
27.5475 -1.30208 27.8027 -1.69792 27.8027 -2.28125  c
27.8027 -2.80208 27.5710 -3.23177 27.1074 -3.57031  c
26.6439 -3.90885 26.0684 -4.07812 25.3809 -4.07812  c
25.0371 -4.07812 l
25.0371 -.921875 l
h
25.0371 -4.85938 m
25.4277 -4.85938 l
26.0840 -4.85938 26.5918 -5.00000 26.9512 -5.28125  c
27.3105 -5.56250 27.4902 -5.95833 27.4902 -6.46875  c
27.4902 -7.32292 26.8288 -7.75000 25.5059 -7.75000  c
25.0371 -7.75000 l
25.0371 -4.85938 l
h
30.7051 0.00000 m
30.7051 -8.67188 l
31.9395 -8.67188 l
31.9395 0.00000 l
30.7051 0.00000 l
h
f
[ 1.34639 0.00000 0.00000 1.34639 39.7098 29.2098 ] defaultmatrix matrix concatmatrix setmatrix
.988235 .376471 .200000 RG
newpath
80.0858 59.0000 m
59.0000 80.0858 l
37.9142 59.0000 l
59.0000 37.9142 l
h
f
0.00000 0.00000 0.00000 RG
newpath
59.0000 36.5000 m
81.5000 59.0000 l
59.0000 81.5000 l
36.5000 59.0000 l
h
80.0858 59.0000 m
59.0000 80.0858 l
37.9142 59.0000 l
59.0000 37.9142 l
h
f*
59.0000 59.0000 translate
1.00000 1.00000 scale
-11.4434 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.84375 l
5.39062 -4.84375 l
5.39062 -3.93750 l
2.34375 -3.93750 l
2.34375 0.00000 l
1.12500 0.00000 l
h
7.55859 0.00000 m
7.55859 -8.67188 l
8.76172 -8.67188 l
13.1211 -1.96875 l
13.1211 -8.67188 l
14.1836 -8.67188 l
14.1836 0.00000 l
12.9805 0.00000 l
8.60547 -6.70312 l
8.60547 0.00000 l
7.55859 0.00000 l
h
17.1113 0.00000 m
17.1113 -.875000 l
18.8457 -.875000 l
18.8457 -7.71875 l
17.1113 -7.28125 l
17.1113 -8.17188 l
20.0020 -8.89062 l
20.0020 -.875000 l
21.7363 -.875000 l
21.7363 0.00000 l
17.1113 0.00000 l
h
f
[ 1.34639 0.00000 0.00000 1.34639 39.7098 29.2098 ] defaultmatrix matrix concatmatrix setmatrix
.952941 .305882 .200000 RG
newpath
254.670 233.585 m
233.585 254.670 l
212.499 233.585 l
233.585 212.499 l
h
f
0.00000 0.00000 0.00000 RG
newpath
233.585 211.085 m
256.085 233.585 l
233.585 256.085 l
211.085 233.585 l
h
254.670 233.585 m
233.585 254.670 l
212.499 233.585 l
233.585 212.499 l
h
f*
233.585 233.585 translate
1.00000 1.00000 scale
-24.4688 4.42090 translate
newpath
1.04688 -8.67188 m
2.28125 -8.67188 l
2.28125 -3.20312 l
2.28125 -2.32812 2.44271 -1.69271 2.76562 -1.29688  c
3.08854 -.901042 3.59896 -.703125 4.29688 -.703125  c
4.98438 -.703125 5.47135 -.890625 5.75781 -1.26562  c
6.04427 -1.64062 6.18750 -2.27083 6.18750 -3.15625  c
6.18750 -8.67188 l
7.26562 -8.67188 l
7.26562 -3.17188 l
7.26562 -1.99479 7.02344 -1.13542 6.53906 -.593750  c
6.05469 -.0520833 5.28125 .218750 4.21875 .218750  c
3.13542 .218750 2.33594 -.0598958 1.82031 -.617188  c
1.30469 -1.17448 1.04688 -2.04167 1.04688 -3.21875  c
1.04688 -8.67188 l
h
9.43945 0.00000 m
9.43945 -8.67188 l
10.6426 -8.67188 l
15.0020 -1.96875 l
15.0020 -8.67188 l
16.0645 -8.67188 l
16.0645 0.00000 l
14.8613 0.00000 l
10.4863 -6.70312 l
10.4863 0.00000 l
9.43945 0.00000 l
h
22.0078 .218750 m
20.6641 .218750 19.6250 -.177083 18.8906 -.968750  c
18.1562 -1.76042 17.7891 -2.88021 17.7891 -4.32812  c
17.7891 -5.77604 18.1641 -6.89844 18.9141 -7.69531  c
19.6641 -8.49219 20.7161 -8.89062 22.0703 -8.89062  c
22.8516 -8.89062 23.7630 -8.76562 24.8047 -8.51562  c
24.8047 -7.35938 l
23.6172 -7.76562 22.7005 -7.96875 22.0547 -7.96875  c
21.1172 -7.96875 20.3906 -7.65104 19.8750 -7.01562  c
19.3594 -6.38021 19.1016 -5.47917 19.1016 -4.31250  c
19.1016 -3.20833 19.3750 -2.33854 19.9219 -1.70312  c
20.4688 -1.06771 21.2214 -.750000 22.1797 -.750000  c
23.0026 -.750000 23.8828 -1.00000 24.8203 -1.50000  c
24.8203 -.453125 l
23.9661 -.00520833 23.0286 .218750 22.0078 .218750  c
h
28.2480 -4.71875 m
27.3939 -5.31250 26.9668 -5.96875 26.9668 -6.68750  c
26.9668 -7.34375 27.2090 -7.87500 27.6934 -8.28125  c
28.1777 -8.68750 28.8053 -8.89062 29.5762 -8.89062  c
30.2845 -8.89062 30.8626 -8.71875 31.3105 -8.37500  c
31.7585 -8.03125 31.9824 -7.57812 31.9824 -7.01562  c
31.9824 -6.18229 31.4408 -5.41667 30.3574 -4.71875  c
31.6699 -4.08333 32.3262 -3.26042 32.3262 -2.25000  c
32.3262 -1.52083 32.0501 -.927083 31.4980 -.468750  c
30.9460 -.0104167 30.2376 .218750 29.3730 .218750  c
28.5189 .218750 27.8288 .00260417 27.3027 -.429688  c
26.7767 -.861979 26.5137 -1.43229 26.5137 -2.14062  c
26.5137 -3.17188 27.0918 -4.03125 28.2480 -4.71875  c
h
29.7168 -5.09375 m
30.5189 -5.62500 30.9199 -6.21354 30.9199 -6.85938  c
30.9199 -7.21354 30.7871 -7.49479 30.5215 -7.70312  c
30.2559 -7.91146 29.8991 -8.01562 29.4512 -8.01562  c
29.0241 -8.01562 28.6777 -7.91146 28.4121 -7.70312  c
28.1465 -7.49479 28.0137 -7.22396 28.0137 -6.89062  c
28.0137 -6.56771 28.1361 -6.27865 28.3809 -6.02344  c
28.6257 -5.76823 29.0710 -5.45833 29.7168 -5.09375  c
h
28.8730 -4.25000 m
28.4043 -3.89583 28.0866 -3.58333 27.9199 -3.31250  c
27.7533 -3.04167 27.6699 -2.70833 27.6699 -2.31250  c
27.6699 -1.82292 27.8314 -1.42448 28.1543 -1.11719  c
28.4772 -.809896 28.8991 -.656250 29.4199 -.656250  c
29.9199 -.656250 30.3314 -.786458 30.6543 -1.04688  c
30.9772 -1.30729 31.1387 -1.64583 31.1387 -2.06250  c
31.1387 -2.39583 31.0397 -2.67969 30.8418 -2.91406  c
30.6439 -3.14844 30.2585 -3.43229 29.6855 -3.76562  c
28.8730 -4.25000 l
h
37.5859 0.00000 m
37.5859 -2.45312 l
33.6797 -2.45312 l
33.6797 -3.32812 l
37.5859 -8.67188 l
38.6797 -8.67188 l
38.6797 -3.40625 l
39.8359 -3.40625 l
39.8359 -2.45312 l
38.6797 -2.45312 l
38.6797 0.00000 l
37.5859 0.00000 l
h
34.8203 -3.40625 m
37.6641 -3.40625 l
37.6641 -7.25000 l
34.8203 -3.40625 l
h
46.1738 -3.31250 m
44.6895 -7.06250 l
43.2207 -3.31250 l
46.1738 -3.31250 l
h
47.4707 0.00000 m
46.5332 -2.40625 l
42.8613 -2.40625 l
41.9082 0.00000 l
40.7520 0.00000 l
44.2051 -8.67188 l
45.4238 -8.67188 l
48.7988 0.00000 l
47.4707 0.00000 l
h
f
[ 1.34639 0.00000 0.00000 1.34639 39.7098 29.2098 ] defaultmatrix matrix concatmatrix setmatrix
.968627 .333333 .200000 RG
newpath
196.476 175.390 m
175.390 196.476 l
154.304 175.390 l
175.390 154.304 l
h
f
0.00000 0.00000 0.00000 RG
newpath
175.390 152.890 m
197.890 175.390 l
175.390 197.890 l
152.890 175.390 l
h
196.476 175.390 m
175.390 196.476 l
154.304 175.390 l
175.390 154.304 l
h
f*
175.390 175.390 translate
1.00000 1.00000 scale
-16.5498 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
11.3379 -8.67188 l
12.1712 -8.67188 12.8092 -8.48958 13.2520 -8.12500  c
13.6947 -7.76042 13.9160 -7.22396 13.9160 -6.51562  c
13.9160 -5.35938 13.3327 -4.54167 12.1660 -4.06250  c
15.0566 0.00000 l
13.5410 0.00000 l
11.0723 -3.67188 l
9.93164 -3.67188 l
9.93164 0.00000 l
8.71289 0.00000 l
h
9.93164 -4.59375 m
10.3223 -4.59375 l
11.8743 -4.59375 12.6504 -5.19792 12.6504 -6.40625  c
12.6504 -7.30208 11.9993 -7.75000 10.6973 -7.75000  c
9.93164 -7.75000 l
9.93164 -4.59375 l
h
16.3008 0.00000 m
16.3008 -8.67188 l
18.0039 -8.67188 l
20.4102 -1.96875 l
22.8789 -8.67188 l
24.3945 -8.67188 l
24.3945 0.00000 l
23.2539 0.00000 l
23.2539 -7.06250 l
20.8633 -.578125 l
19.6758 -.578125 l
17.3477 -7.07812 l
17.3477 0.00000 l
16.3008 0.00000 l
h
26.5117 0.00000 m
26.5117 -1.01562 l
26.8451 -1.79688 27.5221 -2.65104 28.5430 -3.57812  c
29.2148 -4.17188 l
30.0586 -4.94271 30.4805 -5.70833 30.4805 -6.46875  c
30.4805 -6.94792 30.3372 -7.32552 30.0508 -7.60156  c
29.7643 -7.87760 29.3659 -8.01562 28.8555 -8.01562  c
28.2513 -8.01562 27.5430 -7.78646 26.7305 -7.32812  c
26.7305 -8.34375 l
27.5013 -8.70833 28.2617 -8.89062 29.0117 -8.89062  c
29.8242 -8.89062 30.4779 -8.67188 30.9727 -8.23438  c
31.4674 -7.79688 31.7148 -7.21875 31.7148 -6.50000  c
31.7148 -5.97917 31.5898 -5.51562 31.3398 -5.10938  c
31.0898 -4.70312 30.6263 -4.21354 29.9492 -3.64062  c
29.5117 -3.26562 l
28.5846 -2.48438 28.0482 -1.73438 27.9023 -1.01562  c
31.6680 -1.01562 l
31.6680 0.00000 l
26.5117 0.00000 l
h
f
[ 1.34639 0.00000 0.00000 1.34639 39.7098 29.2098 ] defaultmatrix matrix concatmatrix setmatrix
.960784 .321569 .200000 RG
newpath
21.8909 117.195 m
.805113 138.281 l
-20.2807 117.195 l
.805113 96.1091 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.805113 94.6949 m
23.3051 117.195 l
.805113 139.695 l
-21.6949 117.195 l
h
21.8909 117.195 m
.805113 138.281 l
-20.2807 117.195 l
.805113 96.1091 l
h
f*
.805113 117.195 translate
1.00000 1.00000 scale
-17.7920 4.42090 translate
newpath
1.10938 0.00000 m
1.10938 -8.67188 l
2.34375 -8.67188 l
2.34375 0.00000 l
1.10938 0.00000 l
h
6.64453 0.00000 m
6.64453 -7.75000 l
3.56641 -7.75000 l
3.56641 -8.67188 l
10.9414 -8.67188 l
10.9414 -7.75000 l
7.86328 -7.75000 l
7.86328 0.00000 l
6.64453 0.00000 l
h
18.6855 -.234375 m
17.6335 .0677083 16.7168 .218750 15.9355 .218750  c
14.5501 .218750 13.4902 -.174479 12.7559 -.960938  c
12.0215 -1.74740 11.6543 -2.87500 11.6543 -4.34375  c
11.6543 -5.78125 12.0267 -6.89844 12.7715 -7.69531  c
13.5163 -8.49219 14.5658 -8.89062 15.9199 -8.89062  c
16.7949 -8.89062 17.7116 -8.76042 18.6699 -8.50000  c
18.6699 -7.35938 l
17.4720 -7.76562 16.5553 -7.96875 15.9199 -7.96875  c
14.9824 -7.96875 14.2559 -7.65104 13.7402 -7.01562  c
13.2246 -6.38021 12.9668 -5.48438 12.9668 -4.32812  c
12.9668 -3.18229 13.2428 -2.29167 13.7949 -1.65625  c
14.3470 -1.02083 15.1230 -.703125 16.1230 -.703125  c
16.5397 -.703125 16.9824 -.776042 17.4512 -.921875  c
17.4512 -3.75000 l
18.6855 -3.75000 l
18.6855 -.234375 l
h
25.2324 -3.31250 m
23.7480 -7.06250 l
22.2793 -3.31250 l
25.2324 -3.31250 l
h
26.5293 0.00000 m
25.5918 -2.40625 l
21.9199 -2.40625 l
20.9668 0.00000 l
19.8105 0.00000 l
23.2637 -8.67188 l
24.4824 -8.67188 l
27.8574 0.00000 l
26.5293 0.00000 l
h
29.4492 .0312500 m
29.4492 -1.00000 l
30.0326 -.770833 30.5794 -.656250 31.0898 -.656250  c
31.6628 -.656250 32.1133 -.822917 32.4414 -1.15625  c
32.7695 -1.48958 32.9336 -1.95312 32.9336 -2.54688  c
32.9336 -3.84896 32.0378 -4.50000 30.2461 -4.50000  c
30.0378 -4.50000 29.8242 -4.48438 29.6055 -4.45312  c
29.6055 -8.67188 l
33.9961 -8.67188 l
33.9961 -7.67188 l
30.6211 -7.67188 l
30.6211 -5.37500 l
31.7357 -5.37500 32.6055 -5.11979 33.2305 -4.60938  c
33.8555 -4.09896 34.1680 -3.39062 34.1680 -2.48438  c
34.1680 -1.64062 33.8815 -.979167 33.3086 -.500000  c
32.7357 -.0208333 31.9492 .218750 30.9492 .218750  c
30.5117 .218750 30.0117 .156250 29.4492 .0312500  c
h
f
[ 1.34639 0.00000 0.00000 1.34639 39.7098 29.2098 ] defaultmatrix matrix concatmatrix setmatrix
.772549 1.00000 .647059 RG
newpath
138.695 117.195 m
138.695 129.069 129.069 138.695 117.195 138.695  c
105.321 138.695 95.6949 129.069 95.6949 117.195  c
95.6949 105.321 105.321 95.6949 117.195 95.6949  c
129.069 95.6949 138.695 105.321 138.695 117.195  c
h
f
0.00000 0.00000 0.00000 RG
newpath
139.695 117.195 m
139.695 129.621 129.621 139.695 117.195 139.695  c
104.768 139.695 94.6949 129.621 94.6949 117.195  c
94.6949 104.768 104.768 94.6949 117.195 94.6949  c
129.621 94.6949 139.695 104.768 139.695 117.195  c
h
138.695 117.195 m
138.695 129.069 129.069 138.695 117.195 138.695  c
105.321 138.695 95.6949 129.069 95.6949 117.195  c
95.6949 105.321 105.321 95.6949 117.195 95.6949  c
129.069 95.6949 138.695 105.321 138.695 117.195  c
h
f*
117.195 117.195 translate
1.00000 1.00000 scale
-26.8975 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
11.2910 .218750 m
9.94727 .218750 8.90820 -.177083 8.17383 -.968750  c
7.43945 -1.76042 7.07227 -2.88021 7.07227 -4.32812  c
7.07227 -5.77604 7.44727 -6.89844 8.19727 -7.69531  c
8.94727 -8.49219 9.99935 -8.89062 11.3535 -8.89062  c
12.1348 -8.89062 13.0462 -8.76562 14.0879 -8.51562  c
14.0879 -7.35938 l
12.9004 -7.76562 11.9837 -7.96875 11.3379 -7.96875  c
10.4004 -7.96875 9.67383 -7.65104 9.15820 -7.01562  c
8.64258 -6.38021 8.38477 -5.47917 8.38477 -4.31250  c
8.38477 -3.20833 8.65820 -2.33854 9.20508 -1.70312  c
9.75195 -1.06771 10.5046 -.750000 11.4629 -.750000  c
12.2858 -.750000 13.1660 -1.00000 14.1035 -1.50000  c
14.1035 -.453125 l
13.2493 -.00520833 12.3118 .218750 11.2910 .218750  c
h
22.4062 -.234375 m
21.3542 .0677083 20.4375 .218750 19.6562 .218750  c
18.2708 .218750 17.2109 -.174479 16.4766 -.960938  c
15.7422 -1.74740 15.3750 -2.87500 15.3750 -4.34375  c
15.3750 -5.78125 15.7474 -6.89844 16.4922 -7.69531  c
17.2370 -8.49219 18.2865 -8.89062 19.6406 -8.89062  c
20.5156 -8.89062 21.4323 -8.76042 22.3906 -8.50000  c
22.3906 -7.35938 l
21.1927 -7.76562 20.2760 -7.96875 19.6406 -7.96875  c
18.7031 -7.96875 17.9766 -7.65104 17.4609 -7.01562  c
16.9453 -6.38021 16.6875 -5.48438 16.6875 -4.32812  c
16.6875 -3.18229 16.9635 -2.29167 17.5156 -1.65625  c
18.0677 -1.02083 18.8438 -.703125 19.8438 -.703125  c
20.2604 -.703125 20.7031 -.776042 21.1719 -.921875  c
21.1719 -3.75000 l
22.4062 -3.75000 l
22.4062 -.234375 l
h
24.5625 0.00000 m
24.5625 -8.67188 l
26.8125 -8.67188 l
27.6771 -8.67188 28.3411 -8.50781 28.8047 -8.17969  c
29.2682 -7.85156 29.5000 -7.38021 29.5000 -6.76562  c
29.5000 -5.71354 28.9062 -4.96354 27.7188 -4.51562  c
29.1354 -4.08854 29.8438 -3.30729 29.8438 -2.17188  c
29.8438 -1.46354 29.6094 -.924479 29.1406 -.554688  c
28.6719 -.184896 27.9948 0.00000 27.1094 0.00000  c
24.5625 0.00000 l
h
25.7812 -.921875 m
26.0312 -.921875 l
26.9271 -.921875 27.5104 -.979167 27.7812 -1.09375  c
28.2917 -1.30208 28.5469 -1.69792 28.5469 -2.28125  c
28.5469 -2.80208 28.3151 -3.23177 27.8516 -3.57031  c
27.3880 -3.90885 26.8125 -4.07812 26.1250 -4.07812  c
25.7812 -4.07812 l
25.7812 -.921875 l
h
25.7812 -4.85938 m
26.1719 -4.85938 l
26.8281 -4.85938 27.3359 -5.00000 27.6953 -5.28125  c
28.0547 -5.56250 28.2344 -5.95833 28.2344 -6.46875  c
28.2344 -7.32292 27.5729 -7.75000 26.2500 -7.75000  c
25.7812 -7.75000 l
25.7812 -4.85938 l
h
32.1523 0.00000 m
32.1523 -.875000 l
33.8867 -.875000 l
33.8867 -7.71875 l
32.1523 -7.28125 l
32.1523 -8.17188 l
35.0430 -8.89062 l
35.0430 -.875000 l
36.7773 -.875000 l
36.7773 0.00000 l
32.1523 0.00000 l
h
43.4434 -3.31250 m
41.9590 -7.06250 l
40.4902 -3.31250 l
43.4434 -3.31250 l
h
44.7402 0.00000 m
43.8027 -2.40625 l
40.1309 -2.40625 l
39.1777 0.00000 l
38.0215 0.00000 l
41.4746 -8.67188 l
42.6934 -8.67188 l
46.0684 0.00000 l
44.7402 0.00000 l
h
48.0195 0.00000 m
48.0195 -.875000 l
49.7539 -.875000 l
49.7539 -7.71875 l
48.0195 -7.28125 l
48.0195 -8.17188 l
50.9102 -8.89062 l
50.9102 -.875000 l
52.6445 -.875000 l
52.6445 0.00000 l
48.0195 0.00000 l
h
f
[ 1.34639 0.00000 0.00000 1.34639 39.7098 29.2098 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .407843 .207843 RG
newpath
138.695 .805113 m
138.695 12.6792 129.069 22.3051 117.195 22.3051  c
105.321 22.3051 95.6949 12.6792 95.6949 .805113  c
95.6949 -11.0690 105.321 -20.6949 117.195 -20.6949  c
129.069 -20.6949 138.695 -11.0690 138.695 .805113  c
h
f
0.00000 0.00000 0.00000 RG
newpath
139.695 .805113 m
139.695 13.2315 129.621 23.3051 117.195 23.3051  c
104.768 23.3051 94.6949 13.2315 94.6949 .805113  c
94.6949 -11.6213 104.768 -21.6949 117.195 -21.6949  c
129.621 -21.6949 139.695 -11.6213 139.695 .805113  c
h
138.695 .805113 m
138.695 12.6792 129.069 22.3051 117.195 22.3051  c
105.321 22.3051 95.6949 12.6792 95.6949 .805113  c
95.6949 -11.0690 105.321 -20.6949 117.195 -20.6949  c
129.069 -20.6949 138.695 -11.0690 138.695 .805113  c
h
f*
117.195 .805113 translate
1.00000 1.00000 scale
-23.7393 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
12.9121 .218750 m
11.7142 .218750 10.7480 -.197917 10.0137 -1.03125  c
9.27930 -1.86458 8.91211 -2.96875 8.91211 -4.34375  c
8.91211 -5.71875 9.27930 -6.82031 10.0137 -7.64844  c
10.7480 -8.47656 11.7350 -8.89062 12.9746 -8.89062  c
14.1934 -8.89062 15.1725 -8.47917 15.9121 -7.65625  c
16.6517 -6.83333 17.0215 -5.73438 17.0215 -4.35938  c
17.0215 -2.95312 16.6517 -1.83854 15.9121 -1.01562  c
15.1725 -.192708 14.1725 .218750 12.9121 .218750  c
h
12.9277 -.703125 m
13.8132 -.703125 14.4980 -1.02344 14.9824 -1.66406  c
15.4668 -2.30469 15.7090 -3.20312 15.7090 -4.35938  c
15.7090 -5.49479 15.4668 -6.38021 14.9824 -7.01562  c
14.4980 -7.65104 13.8288 -7.96875 12.9746 -7.96875  c
12.1100 -7.96875 11.4355 -7.64844 10.9512 -7.00781  c
10.4668 -6.36719 10.2246 -5.47917 10.2246 -4.34375  c
10.2246 -3.21875 10.4642 -2.33073 10.9434 -1.67969  c
11.4225 -1.02865 12.0840 -.703125 12.9277 -.703125  c
h
18.7500 0.00000 m
18.7500 -8.67188 l
19.9688 -8.67188 l
19.9688 -.921875 l
23.8750 -.921875 l
23.8750 0.00000 l
18.7500 0.00000 l
h
26.0859 -4.50000 m
26.6380 -5.20833 27.3307 -5.56250 28.1641 -5.56250  c
28.9245 -5.56250 29.5469 -5.31250 30.0312 -4.81250  c
30.5156 -4.31250 30.7578 -3.67188 30.7578 -2.89062  c
30.7578 -1.98438 30.4870 -1.23958 29.9453 -.656250  c
29.4036 -.0729167 28.7161 .218750 27.8828 .218750  c
26.9245 .218750 26.1745 -.166667 25.6328 -.937500  c
25.0911 -1.70833 24.8203 -2.77604 24.8203 -4.14062  c
24.8203 -5.65104 25.1302 -6.82031 25.7500 -7.64844  c
26.3698 -8.47656 27.2422 -8.89062 28.3672 -8.89062  c
28.8880 -8.89062 29.5339 -8.78125 30.3047 -8.56250  c
30.3047 -7.56250 l
29.4922 -7.87500 28.8255 -8.03125 28.3047 -8.03125  c
26.8255 -8.03125 26.0859 -6.85417 26.0859 -4.50000  c
h
29.5859 -2.62500 m
29.5859 -3.28125 29.4401 -3.79688 29.1484 -4.17188  c
28.8568 -4.54688 28.4453 -4.73438 27.9141 -4.73438  c
27.4349 -4.73438 27.0182 -4.57031 26.6641 -4.24219  c
26.3099 -3.91406 26.1328 -3.52083 26.1328 -3.06250  c
26.1328 -2.33333 26.2995 -1.75000 26.6328 -1.31250  c
26.9661 -.875000 27.4089 -.656250 27.9609 -.656250  c
28.4609 -.656250 28.8568 -.833333 29.1484 -1.18750  c
29.4401 -1.54167 29.5859 -2.02083 29.5859 -2.62500  c
h
37.1270 -3.31250 m
35.6426 -7.06250 l
34.1738 -3.31250 l
37.1270 -3.31250 l
h
38.4238 0.00000 m
37.4863 -2.40625 l
33.8145 -2.40625 l
32.8613 0.00000 l
31.7051 0.00000 l
35.1582 -8.67188 l
36.3770 -8.67188 l
39.7520 0.00000 l
38.4238 0.00000 l
h
41.7031 0.00000 m
41.7031 -.875000 l
43.4375 -.875000 l
43.4375 -7.71875 l
41.7031 -7.28125 l
41.7031 -8.17188 l
44.5938 -8.89062 l
44.5938 -.875000 l
46.3281 -.875000 l
46.3281 0.00000 l
41.7031 0.00000 l
h
f
[ 1.34639 0.00000 0.00000 1.34639 39.7098 29.2098 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
