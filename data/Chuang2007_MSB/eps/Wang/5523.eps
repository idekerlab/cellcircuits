%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:47:19 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.6035 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
105.520 49.0959 m
102.338 37.2191 l
S
newpath
86.7391 95.4336 m
95.4336 86.7391 l
S
newpath
196.514 73.9785 m
133.828 71.6606 l
S
newpath
37.2191 90.6908 m
89.6101 76.6527 l
S
newpath
186.678 110.687 m
131.231 81.3516 l
S
newpath
52.4208 11.9065 m
95.4336 54.9193 l
S
newpath
45.9256 18.4017 m
65.0058 89.6101 l
S
newpath
21.3092 74.7809 m
36.4160 18.4017 l
S
newpath
11.9065 29.9208 m
29.9208 11.9065 l
S
newpath
74.7809 9.66234 m
58.9160 5.41134 l
S
newpath
54.9193 95.4336 m
11.9065 52.4208 l
S
newpath
9.66234 74.7809 m
5.41134 58.9160 l
S
newpath
37.2191 102.338 m
49.0959 105.520 l
S
1.00000 .509804 .309804 RG
newpath
132.843 70.8292 m
132.843 82.7034 123.218 92.3292 111.343 92.3292  c
99.4694 92.3292 89.8435 82.7034 89.8435 70.8292  c
89.8435 58.9551 99.4694 49.3292 111.343 49.3292  c
123.218 49.3292 132.843 58.9551 132.843 70.8292  c
h
f
0.00000 0.00000 0.00000 RG
newpath
133.843 70.8292 m
133.843 83.2556 123.770 93.3292 111.343 93.3292  c
98.9171 93.3292 88.8435 83.2556 88.8435 70.8292  c
88.8435 58.4028 98.9171 48.3292 111.343 48.3292  c
123.770 48.3292 133.843 58.4028 133.843 70.8292  c
h
132.843 70.8292 m
132.843 82.7034 123.218 92.3292 111.343 92.3292  c
99.4694 92.3292 89.8435 82.7034 89.8435 70.8292  c
89.8435 58.9551 99.4694 49.3292 111.343 49.3292  c
123.218 49.3292 132.843 58.9551 132.843 70.8292  c
h
f*
111.343 70.8292 translate
1.00000 1.00000 scale
-14.2383 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
10.9629 -8.67188 l
11.8275 -8.67188 12.4915 -8.50781 12.9551 -8.17969  c
13.4186 -7.85156 13.6504 -7.38021 13.6504 -6.76562  c
13.6504 -5.71354 13.0566 -4.96354 11.8691 -4.51562  c
13.2858 -4.08854 13.9941 -3.30729 13.9941 -2.17188  c
13.9941 -1.46354 13.7598 -.924479 13.2910 -.554688  c
12.8223 -.184896 12.1452 0.00000 11.2598 0.00000  c
8.71289 0.00000 l
h
9.93164 -.921875 m
10.1816 -.921875 l
11.0775 -.921875 11.6608 -.979167 11.9316 -1.09375  c
12.4421 -1.30208 12.6973 -1.69792 12.6973 -2.28125  c
12.6973 -2.80208 12.4655 -3.23177 12.0020 -3.57031  c
11.5384 -3.90885 10.9629 -4.07812 10.2754 -4.07812  c
9.93164 -4.07812 l
9.93164 -.921875 l
h
9.93164 -4.85938 m
10.3223 -4.85938 l
10.9785 -4.85938 11.4863 -5.00000 11.8457 -5.28125  c
12.2051 -5.56250 12.3848 -5.95833 12.3848 -6.46875  c
12.3848 -7.32292 11.7233 -7.75000 10.4004 -7.75000  c
9.93164 -7.75000 l
9.93164 -4.85938 l
h
15.6152 0.00000 m
15.6152 -8.67188 l
16.8340 -8.67188 l
16.8340 -.921875 l
20.7402 -.921875 l
20.7402 0.00000 l
15.6152 0.00000 l
h
22.7012 0.00000 m
22.7012 -.875000 l
24.4355 -.875000 l
24.4355 -7.71875 l
22.7012 -7.28125 l
22.7012 -8.17188 l
25.5918 -8.89062 l
25.5918 -.875000 l
27.3262 -.875000 l
27.3262 0.00000 l
22.7012 0.00000 l
h
f
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.6035 ] defaultmatrix matrix concatmatrix setmatrix
.952941 .309804 .200000 RG
newpath
62.2565 .656527 m
41.1708 21.7423 l
20.0850 .656527 l
41.1708 -20.4293 l
h
f
0.00000 0.00000 0.00000 RG
newpath
41.1708 -21.8435 m
63.6708 .656527 l
41.1708 23.1565 l
18.6708 .656527 l
h
62.2565 .656527 m
41.1708 21.7423 l
20.0850 .656527 l
41.1708 -20.4293 l
h
f*
41.1708 .656527 translate
1.00000 1.00000 scale
-16.5908 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
9.42773 0.00000 m
9.42773 -8.67188 l
12.3027 -8.67188 l
13.1673 -8.67188 13.8626 -8.57552 14.3887 -8.38281  c
14.9147 -8.19010 15.3704 -7.86458 15.7559 -7.40625  c
16.3704 -6.68750 16.6777 -5.73438 16.6777 -4.54688  c
16.6777 -3.09896 16.2975 -1.97917 15.5371 -1.18750  c
14.7767 -.395833 13.7038 0.00000 12.3184 0.00000  c
9.42773 0.00000 l
h
10.6465 -.921875 m
12.2246 -.921875 l
13.3496 -.921875 14.1465 -1.22396 14.6152 -1.82812  c
15.1257 -2.47396 15.3809 -3.33854 15.3809 -4.42188  c
15.3809 -5.44271 15.1309 -6.24479 14.6309 -6.82812  c
14.3288 -7.18229 13.9694 -7.42448 13.5527 -7.55469  c
13.1361 -7.68490 12.5059 -7.75000 11.6621 -7.75000  c
10.6465 -7.75000 l
10.6465 -.921875 l
h
22.1191 .218750 m
20.7754 .218750 19.7363 -.177083 19.0020 -.968750  c
18.2676 -1.76042 17.9004 -2.88021 17.9004 -4.32812  c
17.9004 -5.77604 18.2754 -6.89844 19.0254 -7.69531  c
19.7754 -8.49219 20.8275 -8.89062 22.1816 -8.89062  c
22.9629 -8.89062 23.8743 -8.76562 24.9160 -8.51562  c
24.9160 -7.35938 l
23.7285 -7.76562 22.8118 -7.96875 22.1660 -7.96875  c
21.2285 -7.96875 20.5020 -7.65104 19.9863 -7.01562  c
19.4707 -6.38021 19.2129 -5.47917 19.2129 -4.31250  c
19.2129 -3.20833 19.4863 -2.33854 20.0332 -1.70312  c
20.5801 -1.06771 21.3327 -.750000 22.2910 -.750000  c
23.1139 -.750000 23.9941 -1.00000 24.9316 -1.50000  c
24.9316 -.453125 l
24.0775 -.00520833 23.1400 .218750 22.1191 .218750  c
h
26.5938 0.00000 m
26.5938 -1.01562 l
26.9271 -1.79688 27.6042 -2.65104 28.6250 -3.57812  c
29.2969 -4.17188 l
30.1406 -4.94271 30.5625 -5.70833 30.5625 -6.46875  c
30.5625 -6.94792 30.4193 -7.32552 30.1328 -7.60156  c
29.8464 -7.87760 29.4479 -8.01562 28.9375 -8.01562  c
28.3333 -8.01562 27.6250 -7.78646 26.8125 -7.32812  c
26.8125 -8.34375 l
27.5833 -8.70833 28.3438 -8.89062 29.0938 -8.89062  c
29.9062 -8.89062 30.5599 -8.67188 31.0547 -8.23438  c
31.5495 -7.79688 31.7969 -7.21875 31.7969 -6.50000  c
31.7969 -5.97917 31.6719 -5.51562 31.4219 -5.10938  c
31.1719 -4.70312 30.7083 -4.21354 30.0312 -3.64062  c
29.5938 -3.26562 l
28.6667 -2.48438 28.1302 -1.73438 27.9844 -1.01562  c
31.7500 -1.01562 l
31.7500 0.00000 l
26.5938 0.00000 l
h
f
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.6035 ] defaultmatrix matrix concatmatrix setmatrix
.964706 .325490 .200000 RG
newpath
21.7423 41.1708 m
.656527 62.2565 l
-20.4293 41.1708 l
.656527 20.0850 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.656527 18.6708 m
23.1565 41.1708 l
.656527 63.6708 l
-21.8435 41.1708 l
h
21.7423 41.1708 m
.656527 62.2565 l
-20.4293 41.1708 l
.656527 20.0850 l
h
f*
.656527 41.1708 translate
1.00000 1.00000 scale
-16.0400 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
11.4609 .218750 m
10.1172 .218750 9.07812 -.177083 8.34375 -.968750  c
7.60938 -1.76042 7.24219 -2.88021 7.24219 -4.32812  c
7.24219 -5.77604 7.61719 -6.89844 8.36719 -7.69531  c
9.11719 -8.49219 10.1693 -8.89062 11.5234 -8.89062  c
12.3047 -8.89062 13.2161 -8.76562 14.2578 -8.51562  c
14.2578 -7.35938 l
13.0703 -7.76562 12.1536 -7.96875 11.5078 -7.96875  c
10.5703 -7.96875 9.84375 -7.65104 9.32812 -7.01562  c
8.81250 -6.38021 8.55469 -5.47917 8.55469 -4.31250  c
8.55469 -3.20833 8.82812 -2.33854 9.37500 -1.70312  c
9.92188 -1.06771 10.6745 -.750000 11.6328 -.750000  c
12.4557 -.750000 13.3359 -1.00000 14.2734 -1.50000  c
14.2734 -.453125 l
13.4193 -.00520833 12.4818 .218750 11.4609 .218750  c
h
16.0605 0.00000 m
16.0605 -8.67188 l
17.2637 -8.67188 l
21.6230 -1.96875 l
21.6230 -8.67188 l
22.6855 -8.67188 l
22.6855 0.00000 l
21.4824 0.00000 l
17.1074 -6.70312 l
17.1074 0.00000 l
16.0605 0.00000 l
h
29.3164 -3.31250 m
27.8320 -7.06250 l
26.3633 -3.31250 l
29.3164 -3.31250 l
h
30.6133 0.00000 m
29.6758 -2.40625 l
26.0039 -2.40625 l
25.0508 0.00000 l
23.8945 0.00000 l
27.3477 -8.67188 l
28.5664 -8.67188 l
31.9414 0.00000 l
30.6133 0.00000 l
h
f
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.6035 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .501961 .301961 RG
newpath
36.9858 96.5142 m
36.9858 108.388 27.3599 118.014 15.4858 118.014  c
3.61164 118.014 -6.01423 108.388 -6.01423 96.5142  c
-6.01423 84.6401 3.61164 75.0142 15.4858 75.0142  c
27.3599 75.0142 36.9858 84.6401 36.9858 96.5142  c
h
f
0.00000 0.00000 0.00000 RG
newpath
37.9858 96.5142 m
37.9858 108.941 27.9122 119.014 15.4858 119.014  c
3.05936 119.014 -7.01423 108.941 -7.01423 96.5142  c
-7.01423 84.0878 3.05936 74.0142 15.4858 74.0142  c
27.9122 74.0142 37.9858 84.0878 37.9858 96.5142  c
h
36.9858 96.5142 m
36.9858 108.388 27.3599 118.014 15.4858 118.014  c
3.61164 118.014 -6.01423 108.388 -6.01423 96.5142  c
-6.01423 84.6401 3.61164 75.0142 15.4858 75.0142  c
27.3599 75.0142 36.9858 84.6401 36.9858 96.5142  c
h
f*
15.4858 96.5142 translate
1.00000 1.00000 scale
-21.0234 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
13.1309 .218750 m
11.7871 .218750 10.7480 -.177083 10.0137 -.968750  c
9.27930 -1.76042 8.91211 -2.88021 8.91211 -4.32812  c
8.91211 -5.77604 9.28711 -6.89844 10.0371 -7.69531  c
10.7871 -8.49219 11.8392 -8.89062 13.1934 -8.89062  c
13.9746 -8.89062 14.8861 -8.76562 15.9277 -8.51562  c
15.9277 -7.35938 l
14.7402 -7.76562 13.8236 -7.96875 13.1777 -7.96875  c
12.2402 -7.96875 11.5137 -7.65104 10.9980 -7.01562  c
10.4824 -6.38021 10.2246 -5.47917 10.2246 -4.31250  c
10.2246 -3.20833 10.4980 -2.33854 11.0449 -1.70312  c
11.5918 -1.06771 12.3444 -.750000 13.3027 -.750000  c
14.1257 -.750000 15.0059 -1.00000 15.9434 -1.50000  c
15.9434 -.453125 l
15.0892 -.00520833 14.1517 .218750 13.1309 .218750  c
h
17.7305 0.00000 m
17.7305 -8.67188 l
18.9336 -8.67188 l
23.2930 -1.96875 l
23.2930 -8.67188 l
24.3555 -8.67188 l
24.3555 0.00000 l
23.1523 0.00000 l
18.7773 -6.70312 l
18.7773 0.00000 l
17.7305 0.00000 l
h
26.5957 0.00000 m
26.5957 -8.67188 l
29.4707 -8.67188 l
30.3353 -8.67188 31.0306 -8.57552 31.5566 -8.38281  c
32.0827 -8.19010 32.5384 -7.86458 32.9238 -7.40625  c
33.5384 -6.68750 33.8457 -5.73438 33.8457 -4.54688  c
33.8457 -3.09896 33.4655 -1.97917 32.7051 -1.18750  c
31.9447 -.395833 30.8717 0.00000 29.4863 0.00000  c
26.5957 0.00000 l
h
27.8145 -.921875 m
29.3926 -.921875 l
30.5176 -.921875 31.3145 -1.22396 31.7832 -1.82812  c
32.2936 -2.47396 32.5488 -3.33854 32.5488 -4.42188  c
32.5488 -5.44271 32.2988 -6.24479 31.7988 -6.82812  c
31.4967 -7.18229 31.1374 -7.42448 30.7207 -7.55469  c
30.3040 -7.68490 29.6738 -7.75000 28.8301 -7.75000  c
27.8145 -7.75000 l
27.8145 -.921875 l
h
36.2715 0.00000 m
36.2715 -.875000 l
38.0059 -.875000 l
38.0059 -7.71875 l
36.2715 -7.28125 l
36.2715 -8.17188 l
39.1621 -8.89062 l
39.1621 -.875000 l
40.8965 -.875000 l
40.8965 0.00000 l
36.2715 0.00000 l
h
f
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.6035 ] defaultmatrix matrix concatmatrix setmatrix
.972549 1.00000 .780392 RG
newpath
118.014 15.4858 m
118.014 27.3599 108.388 36.9858 96.5142 36.9858  c
84.6401 36.9858 75.0142 27.3599 75.0142 15.4858  c
75.0142 3.61164 84.6401 -6.01423 96.5142 -6.01423  c
108.388 -6.01423 118.014 3.61164 118.014 15.4858  c
h
f
0.00000 0.00000 0.00000 RG
newpath
119.014 15.4858 m
119.014 27.9122 108.941 37.9858 96.5142 37.9858  c
84.0878 37.9858 74.0142 27.9122 74.0142 15.4858  c
74.0142 3.05936 84.0878 -7.01423 96.5142 -7.01423  c
108.941 -7.01423 119.014 3.05936 119.014 15.4858  c
h
118.014 15.4858 m
118.014 27.3599 108.388 36.9858 96.5142 36.9858  c
84.6401 36.9858 75.0142 27.3599 75.0142 15.4858  c
75.0142 3.61164 84.6401 -6.01423 96.5142 -6.01423  c
108.388 -6.01423 118.014 3.61164 118.014 15.4858  c
h
f*
96.5142 15.4858 translate
1.00000 1.00000 scale
-19.7812 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
13.1309 .218750 m
11.7871 .218750 10.7480 -.177083 10.0137 -.968750  c
9.27930 -1.76042 8.91211 -2.88021 8.91211 -4.32812  c
8.91211 -5.77604 9.28711 -6.89844 10.0371 -7.69531  c
10.7871 -8.49219 11.8392 -8.89062 13.1934 -8.89062  c
13.9746 -8.89062 14.8861 -8.76562 15.9277 -8.51562  c
15.9277 -7.35938 l
14.7402 -7.76562 13.8236 -7.96875 13.1777 -7.96875  c
12.2402 -7.96875 11.5137 -7.65104 10.9980 -7.01562  c
10.4824 -6.38021 10.2246 -5.47917 10.2246 -4.31250  c
10.2246 -3.20833 10.4980 -2.33854 11.0449 -1.70312  c
11.5918 -1.06771 12.3444 -.750000 13.3027 -.750000  c
14.1257 -.750000 15.0059 -1.00000 15.9434 -1.50000  c
15.9434 -.453125 l
15.0892 -.00520833 14.1517 .218750 13.1309 .218750  c
h
17.7305 0.00000 m
17.7305 -8.67188 l
18.9336 -8.67188 l
23.2930 -1.96875 l
23.2930 -8.67188 l
24.3555 -8.67188 l
24.3555 0.00000 l
23.1523 0.00000 l
18.7773 -6.70312 l
18.7773 0.00000 l
17.7305 0.00000 l
h
26.5957 0.00000 m
26.5957 -8.67188 l
31.4395 -8.67188 l
31.4395 -7.75000 l
27.8145 -7.75000 l
27.8145 -4.96875 l
30.8457 -4.96875 l
30.8457 -4.06250 l
27.8145 -4.06250 l
27.8145 -.921875 l
31.6895 -.921875 l
31.6895 0.00000 l
26.5957 0.00000 l
h
33.7871 0.00000 m
33.7871 -.875000 l
35.5215 -.875000 l
35.5215 -7.71875 l
33.7871 -7.28125 l
33.7871 -8.17188 l
36.6777 -8.89062 l
36.6777 -.875000 l
38.4121 -.875000 l
38.4121 0.00000 l
33.7871 0.00000 l
h
f
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.6035 ] defaultmatrix matrix concatmatrix setmatrix
.513725 1.00000 .474510 RG
newpath
228.066 121.209 m
228.066 133.083 218.440 142.709 206.566 142.709  c
194.691 142.709 185.066 133.083 185.066 121.209  c
185.066 109.335 194.691 99.7093 206.566 99.7093  c
218.440 99.7093 228.066 109.335 228.066 121.209  c
h
f
0.00000 0.00000 0.00000 RG
newpath
229.066 121.209 m
229.066 133.636 218.992 143.709 206.566 143.709  c
194.139 143.709 184.066 133.636 184.066 121.209  c
184.066 108.783 194.139 98.7093 206.566 98.7093  c
218.992 98.7093 229.066 108.783 229.066 121.209  c
h
228.066 121.209 m
228.066 133.083 218.440 142.709 206.566 142.709  c
194.691 142.709 185.066 133.083 185.066 121.209  c
185.066 109.335 194.691 99.7093 206.566 99.7093  c
218.440 99.7093 228.066 109.335 228.066 121.209  c
h
f*
206.566 121.209 translate
1.00000 1.00000 scale
-23.9561 4.42090 translate
newpath
-1.07812 1.60938 m
-1.07812 .515625 l
-.609375 .671875 -.192708 .750000 .171875 .750000  c
.640625 .750000 .966146 .617188 1.14844 .351562  c
1.33073 .0859375 1.42188 -.385417 1.42188 -1.06250  c
1.42188 -8.67188 l
2.65625 -8.67188 l
2.65625 -1.09375 l
2.65625 .791667 1.76042 1.73438 -.0312500 1.73438  c
-.302083 1.73438 -.651042 1.69271 -1.07812 1.60938  c
h
9.24805 -3.31250 m
7.76367 -7.06250 l
6.29492 -3.31250 l
9.24805 -3.31250 l
h
10.5449 0.00000 m
9.60742 -2.40625 l
5.93555 -2.40625 l
4.98242 0.00000 l
3.82617 0.00000 l
7.27930 -8.67188 l
8.49805 -8.67188 l
11.8730 0.00000 l
10.5449 0.00000 l
h
13.1367 0.00000 m
13.1367 -8.67188 l
15.7617 -8.67188 l
16.5951 -8.67188 17.2331 -8.48958 17.6758 -8.12500  c
18.1185 -7.76042 18.3398 -7.22396 18.3398 -6.51562  c
18.3398 -5.35938 17.7565 -4.54167 16.5898 -4.06250  c
19.4805 0.00000 l
17.9648 0.00000 l
15.4961 -3.67188 l
14.3555 -3.67188 l
14.3555 0.00000 l
13.1367 0.00000 l
h
14.3555 -4.59375 m
14.7461 -4.59375 l
16.2982 -4.59375 17.0742 -5.19792 17.0742 -6.40625  c
17.0742 -7.30208 16.4232 -7.75000 15.1211 -7.75000  c
14.3555 -7.75000 l
14.3555 -4.59375 l
h
20.7090 0.00000 m
20.7090 -8.67188 l
21.9434 -8.67188 l
21.9434 0.00000 l
20.7090 0.00000 l
h
24.1816 0.00000 m
24.1816 -8.67188 l
27.0566 -8.67188 l
27.9212 -8.67188 28.6165 -8.57552 29.1426 -8.38281  c
29.6686 -8.19010 30.1243 -7.86458 30.5098 -7.40625  c
31.1243 -6.68750 31.4316 -5.73438 31.4316 -4.54688  c
31.4316 -3.09896 31.0514 -1.97917 30.2910 -1.18750  c
29.5306 -.395833 28.4577 0.00000 27.0723 0.00000  c
24.1816 0.00000 l
h
25.4004 -.921875 m
26.9785 -.921875 l
28.1035 -.921875 28.9004 -1.22396 29.3691 -1.82812  c
29.8796 -2.47396 30.1348 -3.33854 30.1348 -4.42188  c
30.1348 -5.44271 29.8848 -6.24479 29.3848 -6.82812  c
29.0827 -7.18229 28.7233 -7.42448 28.3066 -7.55469  c
27.8900 -7.68490 27.2598 -7.75000 26.4160 -7.75000  c
25.4004 -7.75000 l
25.4004 -.921875 l
h
33.8574 0.00000 m
33.8574 -.875000 l
35.5918 -.875000 l
35.5918 -7.71875 l
33.8574 -7.28125 l
33.8574 -8.17188 l
36.7480 -8.89062 l
36.7480 -.875000 l
38.4824 -.875000 l
38.4824 0.00000 l
33.8574 0.00000 l
h
45.1484 -3.31250 m
43.6641 -7.06250 l
42.1953 -3.31250 l
45.1484 -3.31250 l
h
46.4453 0.00000 m
45.5078 -2.40625 l
41.8359 -2.40625 l
40.8828 0.00000 l
39.7266 0.00000 l
43.1797 -8.67188 l
44.3984 -8.67188 l
47.7734 0.00000 l
46.4453 0.00000 l
h
f
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.6035 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .705882 .505882 RG
newpath
240.498 74.8099 m
240.498 86.6840 230.872 96.3099 218.998 96.3099  c
207.124 96.3099 197.498 86.6840 197.498 74.8099  c
197.498 62.9357 207.124 53.3099 218.998 53.3099  c
230.872 53.3099 240.498 62.9357 240.498 74.8099  c
h
f
0.00000 0.00000 0.00000 RG
newpath
241.498 74.8099 m
241.498 87.2363 231.425 97.3099 218.998 97.3099  c
206.572 97.3099 196.498 87.2363 196.498 74.8099  c
196.498 62.3834 206.572 52.3099 218.998 52.3099  c
231.425 52.3099 241.498 62.3834 241.498 74.8099  c
h
240.498 74.8099 m
240.498 86.6840 230.872 96.3099 218.998 96.3099  c
207.124 96.3099 197.498 86.6840 197.498 74.8099  c
197.498 62.9357 207.124 53.3099 218.998 53.3099  c
230.872 53.3099 240.498 62.9357 240.498 74.8099  c
h
f*
218.998 74.8099 translate
1.00000 1.00000 scale
-25.4707 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
7.75781 0.00000 m
7.75781 -8.67188 l
10.1172 -8.67188 l
11.1589 -8.67188 11.9089 -8.49479 12.3672 -8.14062  c
12.8255 -7.78646 13.0547 -7.20833 13.0547 -6.40625  c
13.0547 -5.47917 12.7422 -4.75521 12.1172 -4.23438  c
11.4922 -3.71354 10.6276 -3.45312 9.52344 -3.45312  c
8.97656 -3.45312 l
8.97656 0.00000 l
7.75781 0.00000 l
h
8.97656 -4.37500 m
9.47656 -4.37500 l
10.2057 -4.37500 10.7682 -4.54427 11.1641 -4.88281  c
11.5599 -5.22135 11.7578 -5.69792 11.7578 -6.31250  c
11.7578 -6.82292 11.6016 -7.19010 11.2891 -7.41406  c
10.9766 -7.63802 10.4557 -7.75000 9.72656 -7.75000  c
8.97656 -7.75000 l
8.97656 -4.37500 l
h
14.3906 0.00000 m
14.3906 -8.67188 l
16.7500 -8.67188 l
17.7917 -8.67188 18.5417 -8.49479 19.0000 -8.14062  c
19.4583 -7.78646 19.6875 -7.20833 19.6875 -6.40625  c
19.6875 -5.47917 19.3750 -4.75521 18.7500 -4.23438  c
18.1250 -3.71354 17.2604 -3.45312 16.1562 -3.45312  c
15.6094 -3.45312 l
15.6094 0.00000 l
14.3906 0.00000 l
h
15.6094 -4.37500 m
16.1094 -4.37500 l
16.8385 -4.37500 17.4010 -4.54427 17.7969 -4.88281  c
18.1927 -5.22135 18.3906 -5.69792 18.3906 -6.31250  c
18.3906 -6.82292 18.2344 -7.19010 17.9219 -7.41406  c
17.6094 -7.63802 17.0885 -7.75000 16.3594 -7.75000  c
15.6094 -7.75000 l
15.6094 -4.37500 l
h
20.8984 0.00000 m
20.8984 -1.01562 l
21.2318 -1.79688 21.9089 -2.65104 22.9297 -3.57812  c
23.6016 -4.17188 l
24.4453 -4.94271 24.8672 -5.70833 24.8672 -6.46875  c
24.8672 -6.94792 24.7240 -7.32552 24.4375 -7.60156  c
24.1510 -7.87760 23.7526 -8.01562 23.2422 -8.01562  c
22.6380 -8.01562 21.9297 -7.78646 21.1172 -7.32812  c
21.1172 -8.34375 l
21.8880 -8.70833 22.6484 -8.89062 23.3984 -8.89062  c
24.2109 -8.89062 24.8646 -8.67188 25.3594 -8.23438  c
25.8542 -7.79688 26.1016 -7.21875 26.1016 -6.50000  c
26.1016 -5.97917 25.9766 -5.51562 25.7266 -5.10938  c
25.4766 -4.70312 25.0130 -4.21354 24.3359 -3.64062  c
23.8984 -3.26562 l
22.9714 -2.48438 22.4349 -1.73438 22.2891 -1.01562  c
26.0547 -1.01562 l
26.0547 0.00000 l
20.8984 0.00000 l
h
28.6113 0.00000 m
28.6113 -8.67188 l
31.2363 -8.67188 l
32.0697 -8.67188 32.7077 -8.48958 33.1504 -8.12500  c
33.5931 -7.76042 33.8145 -7.22396 33.8145 -6.51562  c
33.8145 -5.35938 33.2311 -4.54167 32.0645 -4.06250  c
34.9551 0.00000 l
33.4395 0.00000 l
30.9707 -3.67188 l
29.8301 -3.67188 l
29.8301 0.00000 l
28.6113 0.00000 l
h
29.8301 -4.59375 m
30.2207 -4.59375 l
31.7728 -4.59375 32.5488 -5.19792 32.5488 -6.40625  c
32.5488 -7.30208 31.8978 -7.75000 30.5957 -7.75000  c
29.8301 -7.75000 l
29.8301 -4.59375 l
h
36.2930 -.0625000 m
36.2930 -1.14062 l
37.1263 -.817708 37.7773 -.656250 38.2461 -.656250  c
38.7982 -.656250 39.2487 -.817708 39.5977 -1.14062  c
39.9466 -1.46354 40.1211 -1.88021 40.1211 -2.39062  c
40.1211 -3.60938 39.2669 -4.21875 37.5586 -4.21875  c
37.0898 -4.21875 l
37.0898 -5.00000 l
37.4961 -5.00000 l
39.1003 -5.00000 39.9023 -5.56250 39.9023 -6.68750  c
39.9023 -7.57292 39.3763 -8.01562 38.3242 -8.01562  c
37.7409 -8.01562 37.1055 -7.85417 36.4180 -7.53125  c
36.4180 -8.54688 l
37.0951 -8.77604 37.7565 -8.89062 38.4023 -8.89062  c
40.1732 -8.89062 41.0586 -8.21875 41.0586 -6.87500  c
41.0586 -5.85417 40.4544 -5.13021 39.2461 -4.70312  c
40.6523 -4.38021 41.3555 -3.61458 41.3555 -2.40625  c
41.3555 -1.58333 41.0846 -.940104 40.5430 -.476562  c
40.0013 -.0130208 39.2617 .218750 38.3242 .218750  c
37.7826 .218750 37.1055 .125000 36.2930 -.0625000  c
h
48.1777 -3.31250 m
46.6934 -7.06250 l
45.2246 -3.31250 l
48.1777 -3.31250 l
h
49.4746 0.00000 m
48.5371 -2.40625 l
44.8652 -2.40625 l
43.9121 0.00000 l
42.7559 0.00000 l
46.2090 -8.67188 l
47.4277 -8.67188 l
50.8027 0.00000 l
49.4746 0.00000 l
h
f
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.6035 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .678431 .478431 RG
newpath
92.3292 111.343 m
92.3292 123.218 82.7034 132.843 70.8292 132.843  c
58.9551 132.843 49.3292 123.218 49.3292 111.343  c
49.3292 99.4694 58.9551 89.8435 70.8292 89.8435  c
82.7034 89.8435 92.3292 99.4694 92.3292 111.343  c
h
f
0.00000 0.00000 0.00000 RG
newpath
93.3292 111.343 m
93.3292 123.770 83.2556 133.843 70.8292 133.843  c
58.4028 133.843 48.3292 123.770 48.3292 111.343  c
48.3292 98.9171 58.4028 88.8435 70.8292 88.8435  c
83.2556 88.8435 93.3292 98.9171 93.3292 111.343  c
h
92.3292 111.343 m
92.3292 123.218 82.7034 132.843 70.8292 132.843  c
58.9551 132.843 49.3292 123.218 49.3292 111.343  c
49.3292 99.4694 58.9551 89.8435 70.8292 89.8435  c
82.7034 89.8435 92.3292 99.4694 92.3292 111.343  c
h
f*
70.8292 111.343 translate
1.00000 1.00000 scale
-16.3564 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
9.42773 0.00000 m
9.42773 -8.67188 l
12.3027 -8.67188 l
13.1673 -8.67188 13.8626 -8.57552 14.3887 -8.38281  c
14.9147 -8.19010 15.3704 -7.86458 15.7559 -7.40625  c
16.3704 -6.68750 16.6777 -5.73438 16.6777 -4.54688  c
16.6777 -3.09896 16.2975 -1.97917 15.5371 -1.18750  c
14.7767 -.395833 13.7038 0.00000 12.3184 0.00000  c
9.42773 0.00000 l
h
10.6465 -.921875 m
12.2246 -.921875 l
13.3496 -.921875 14.1465 -1.22396 14.6152 -1.82812  c
15.1257 -2.47396 15.3809 -3.33854 15.3809 -4.42188  c
15.3809 -5.44271 15.1309 -6.24479 14.6309 -6.82812  c
14.3288 -7.18229 13.9694 -7.42448 13.5527 -7.55469  c
13.1361 -7.68490 12.5059 -7.75000 11.6621 -7.75000  c
10.6465 -7.75000 l
10.6465 -.921875 l
h
18.4160 0.00000 m
18.4160 -8.67188 l
19.5723 -8.67188 l
19.5723 -4.40625 l
23.0723 -8.67188 l
24.3066 -8.67188 l
20.9160 -4.53125 l
24.9160 0.00000 l
23.3535 0.00000 l
19.5723 -4.39062 l
19.5723 0.00000 l
18.4160 0.00000 l
h
27.1875 -4.50000 m
27.7396 -5.20833 28.4323 -5.56250 29.2656 -5.56250  c
30.0260 -5.56250 30.6484 -5.31250 31.1328 -4.81250  c
31.6172 -4.31250 31.8594 -3.67188 31.8594 -2.89062  c
31.8594 -1.98438 31.5885 -1.23958 31.0469 -.656250  c
30.5052 -.0729167 29.8177 .218750 28.9844 .218750  c
28.0260 .218750 27.2760 -.166667 26.7344 -.937500  c
26.1927 -1.70833 25.9219 -2.77604 25.9219 -4.14062  c
25.9219 -5.65104 26.2318 -6.82031 26.8516 -7.64844  c
27.4714 -8.47656 28.3438 -8.89062 29.4688 -8.89062  c
29.9896 -8.89062 30.6354 -8.78125 31.4062 -8.56250  c
31.4062 -7.56250 l
30.5938 -7.87500 29.9271 -8.03125 29.4062 -8.03125  c
27.9271 -8.03125 27.1875 -6.85417 27.1875 -4.50000  c
h
30.6875 -2.62500 m
30.6875 -3.28125 30.5417 -3.79688 30.2500 -4.17188  c
29.9583 -4.54688 29.5469 -4.73438 29.0156 -4.73438  c
28.5365 -4.73438 28.1198 -4.57031 27.7656 -4.24219  c
27.4115 -3.91406 27.2344 -3.52083 27.2344 -3.06250  c
27.2344 -2.33333 27.4010 -1.75000 27.7344 -1.31250  c
28.0677 -.875000 28.5104 -.656250 29.0625 -.656250  c
29.5625 -.656250 29.9583 -.833333 30.2500 -1.18750  c
30.5417 -1.54167 30.6875 -2.02083 30.6875 -2.62500  c
h
f
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.6035 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
