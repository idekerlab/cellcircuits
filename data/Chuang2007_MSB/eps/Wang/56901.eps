%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:46:52 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.28127 0.00000 0.00000 1.28127 27.9293 32.9296 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
229.133 226.486 m
202.836 184.382 l
S
newpath
84.2035 61.1627 m
98.1606 21.3916 l
S
newpath
21.9324 58.0160 m
61.7035 71.9730 l
S
newpath
104.256 131.719 m
85.6607 93.0159 l
S
newpath
99.9396 169.566 m
72.5732 203.755 l
S
newpath
135.922 157.066 m
175.910 166.308 l
S
newpath
250.141 135.586 m
208.036 161.882 l
S
.929412 .258824 .200000 RG
newpath
258.869 240.336 m
237.783 261.422 l
216.697 240.336 l
237.783 219.250 l
h
f
0.00000 0.00000 0.00000 RG
newpath
237.783 217.836 m
260.283 240.336 l
237.783 262.836 l
215.283 240.336 l
h
258.869 240.336 m
237.783 261.422 l
216.697 240.336 l
237.783 219.250 l
h
f*
237.783 240.336 translate
1.00000 1.00000 scale
-22.3125 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.28125 -8.67188 l
2.28125 -4.40625 l
5.78125 -8.67188 l
7.01562 -8.67188 l
3.62500 -4.53125 l
7.62500 0.00000 l
6.06250 0.00000 l
2.28125 -4.39062 l
2.28125 0.00000 l
1.12500 0.00000 l
h
8.95898 0.00000 m
8.95898 -8.67188 l
10.1777 -8.67188 l
10.1777 -.921875 l
14.0840 -.921875 l
14.0840 0.00000 l
8.95898 0.00000 l
h
15.3574 0.00000 m
15.3574 -8.67188 l
16.5762 -8.67188 l
16.5762 -5.01562 l
20.7012 -5.01562 l
20.7012 -8.67188 l
21.9355 -8.67188 l
21.9355 0.00000 l
20.7012 0.00000 l
20.7012 -4.09375 l
16.5762 -4.09375 l
16.5762 0.00000 l
15.3574 0.00000 l
h
24.1758 0.00000 m
24.1758 -8.67188 l
25.3945 -8.67188 l
25.3945 -.921875 l
29.3008 -.921875 l
29.3008 0.00000 l
24.1758 0.00000 l
h
30.4492 0.00000 m
30.4492 -1.01562 l
30.7826 -1.79688 31.4596 -2.65104 32.4805 -3.57812  c
33.1523 -4.17188 l
33.9961 -4.94271 34.4180 -5.70833 34.4180 -6.46875  c
34.4180 -6.94792 34.2747 -7.32552 33.9883 -7.60156  c
33.7018 -7.87760 33.3034 -8.01562 32.7930 -8.01562  c
32.1888 -8.01562 31.4805 -7.78646 30.6680 -7.32812  c
30.6680 -8.34375 l
31.4388 -8.70833 32.1992 -8.89062 32.9492 -8.89062  c
33.7617 -8.89062 34.4154 -8.67188 34.9102 -8.23438  c
35.4049 -7.79688 35.6523 -7.21875 35.6523 -6.50000  c
35.6523 -5.97917 35.5273 -5.51562 35.2773 -5.10938  c
35.0273 -4.70312 34.5638 -4.21354 33.8867 -3.64062  c
33.4492 -3.26562 l
32.5221 -2.48438 31.9857 -1.73438 31.8398 -1.01562  c
35.6055 -1.01562 l
35.6055 0.00000 l
30.4492 0.00000 l
h
40.8027 .218750 m
39.9069 .218750 39.1829 -.203125 38.6309 -1.04688  c
38.0788 -1.89062 37.8027 -2.98958 37.8027 -4.34375  c
37.8027 -5.70833 38.0814 -6.80729 38.6387 -7.64062  c
39.1960 -8.47396 39.9277 -8.89062 40.8340 -8.89062  c
41.7402 -8.89062 42.4720 -8.47396 43.0293 -7.64062  c
43.5866 -6.80729 43.8652 -5.71354 43.8652 -4.35938  c
43.8652 -2.97396 43.5866 -1.86458 43.0293 -1.03125  c
42.4720 -.197917 41.7298 .218750 40.8027 .218750  c
h
40.8184 -.656250 m
42.0371 -.656250 42.6465 -1.89583 42.6465 -4.37500  c
42.6465 -6.80208 42.0423 -8.01562 40.8340 -8.01562  c
39.6361 -8.01562 39.0371 -6.79167 39.0371 -4.34375  c
39.0371 -1.88542 39.6309 -.656250 40.8184 -.656250  c
h
f
[ 1.28127 0.00000 0.00000 1.28127 27.9293 32.9296 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .717647 .517647 RG
newpath
127.111 .160988 m
127.111 12.0351 117.485 21.6610 105.611 21.6610  c
93.7370 21.6610 84.1111 12.0351 84.1111 .160988  c
84.1111 -11.7131 93.7370 -21.3390 105.611 -21.3390  c
117.485 -21.3390 127.111 -11.7131 127.111 .160988  c
h
f
0.00000 0.00000 0.00000 RG
newpath
128.111 .160988 m
128.111 12.5874 118.038 22.6610 105.611 22.6610  c
93.1847 22.6610 83.1111 12.5874 83.1111 .160988  c
83.1111 -12.2654 93.1847 -22.3390 105.611 -22.3390  c
118.038 -22.3390 128.111 -12.2654 128.111 .160988  c
h
127.111 .160988 m
127.111 12.0351 117.485 21.6610 105.611 21.6610  c
93.7370 21.6610 84.1111 12.0351 84.1111 .160988  c
84.1111 -11.7131 93.7370 -21.3390 105.611 -21.3390  c
117.485 -21.3390 127.111 -11.7131 127.111 .160988  c
h
f*
105.611 .160988 translate
1.00000 1.00000 scale
-13.2979 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
7.75781 0.00000 m
7.75781 -8.67188 l
8.91406 -8.67188 l
8.91406 -4.40625 l
12.4141 -8.67188 l
13.6484 -8.67188 l
10.2578 -4.53125 l
14.2578 0.00000 l
12.6953 0.00000 l
8.91406 -4.39062 l
8.91406 0.00000 l
7.75781 0.00000 l
h
15.5762 0.00000 m
15.5762 -8.67188 l
16.8105 -8.67188 l
16.8105 0.00000 l
15.5762 0.00000 l
h
25.5645 -.234375 m
24.5124 .0677083 23.5957 .218750 22.8145 .218750  c
21.4290 .218750 20.3691 -.174479 19.6348 -.960938  c
18.9004 -1.74740 18.5332 -2.87500 18.5332 -4.34375  c
18.5332 -5.78125 18.9056 -6.89844 19.6504 -7.69531  c
20.3952 -8.49219 21.4447 -8.89062 22.7988 -8.89062  c
23.6738 -8.89062 24.5905 -8.76042 25.5488 -8.50000  c
25.5488 -7.35938 l
24.3509 -7.76562 23.4342 -7.96875 22.7988 -7.96875  c
21.8613 -7.96875 21.1348 -7.65104 20.6191 -7.01562  c
20.1035 -6.38021 19.8457 -5.48438 19.8457 -4.32812  c
19.8457 -3.18229 20.1217 -2.29167 20.6738 -1.65625  c
21.2259 -1.02083 22.0020 -.703125 23.0020 -.703125  c
23.4186 -.703125 23.8613 -.776042 24.3301 -.921875  c
24.3301 -3.75000 l
25.5645 -3.75000 l
25.5645 -.234375 l
h
f
[ 1.28127 0.00000 0.00000 1.28127 27.9293 32.9296 ] defaultmatrix matrix concatmatrix setmatrix
.960784 .321569 .200000 RG
newpath
99.4445 77.8179 m
78.3587 98.9037 l
57.2729 77.8179 l
78.3587 56.7321 l
h
f
0.00000 0.00000 0.00000 RG
newpath
78.3587 55.3179 m
100.859 77.8179 l
78.3587 100.318 l
55.8587 77.8179 l
h
99.4445 77.8179 m
78.3587 98.9037 l
57.2729 77.8179 l
78.3587 56.7321 l
h
f*
78.3587 77.8179 translate
1.00000 1.00000 scale
-22.8574 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
4.00000 -8.67188 l
4.86458 -8.67188 5.55990 -8.57552 6.08594 -8.38281  c
6.61198 -8.19010 7.06771 -7.86458 7.45312 -7.40625  c
8.06771 -6.68750 8.37500 -5.73438 8.37500 -4.54688  c
8.37500 -3.09896 7.99479 -1.97917 7.23438 -1.18750  c
6.47396 -.395833 5.40104 0.00000 4.01562 0.00000  c
1.12500 0.00000 l
h
2.34375 -.921875 m
3.92188 -.921875 l
5.04688 -.921875 5.84375 -1.22396 6.31250 -1.82812  c
6.82292 -2.47396 7.07812 -3.33854 7.07812 -4.42188  c
7.07812 -5.44271 6.82812 -6.24479 6.32812 -6.82812  c
6.02604 -7.18229 5.66667 -7.42448 5.25000 -7.55469  c
4.83333 -7.68490 4.20312 -7.75000 3.35938 -7.75000  c
2.34375 -7.75000 l
2.34375 -.921875 l
h
11.9883 0.00000 m
11.9883 -3.62500 l
9.08203 -8.67188 l
10.4883 -8.67188 l
12.7383 -4.76562 l
15.1758 -8.67188 l
16.3164 -8.67188 l
13.2070 -3.64062 l
13.2070 0.00000 l
11.9883 0.00000 l
h
17.5898 0.00000 m
17.5898 -8.67188 l
18.7930 -8.67188 l
23.1523 -1.96875 l
23.1523 -8.67188 l
24.2148 -8.67188 l
24.2148 0.00000 l
23.0117 0.00000 l
18.6367 -6.70312 l
18.6367 0.00000 l
17.5898 0.00000 l
h
26.4551 0.00000 m
26.4551 -8.67188 l
27.6738 -8.67188 l
27.6738 -.921875 l
31.5801 -.921875 l
31.5801 0.00000 l
26.4551 0.00000 l
h
32.8535 0.00000 m
32.8535 -8.67188 l
34.0723 -8.67188 l
34.0723 -.921875 l
37.9785 -.921875 l
37.9785 0.00000 l
32.8535 0.00000 l
h
39.9395 0.00000 m
39.9395 -.875000 l
41.6738 -.875000 l
41.6738 -7.71875 l
39.9395 -7.28125 l
39.9395 -8.17188 l
42.8301 -8.89062 l
42.8301 -.875000 l
44.5645 -.875000 l
44.5645 0.00000 l
39.9395 0.00000 l
h
f
[ 1.28127 0.00000 0.00000 1.28127 27.9293 32.9296 ] defaultmatrix matrix concatmatrix setmatrix
.956863 .313725 .200000 RG
newpath
83.6559 216.251 m
62.5701 237.337 l
41.4843 216.251 l
62.5701 195.166 l
h
f
0.00000 0.00000 0.00000 RG
newpath
62.5701 193.751 m
85.0701 216.251 l
62.5701 238.751 l
40.0701 216.251 l
h
83.6559 216.251 m
62.5701 237.337 l
41.4843 216.251 l
62.5701 195.166 l
h
f*
62.5701 216.251 translate
1.00000 1.00000 scale
-27.4365 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
12.9121 .218750 m
11.7142 .218750 10.7480 -.197917 10.0137 -1.03125  c
9.27930 -1.86458 8.91211 -2.96875 8.91211 -4.34375  c
8.91211 -5.71875 9.27930 -6.82031 10.0137 -7.64844  c
10.7480 -8.47656 11.7350 -8.89062 12.9746 -8.89062  c
14.1934 -8.89062 15.1725 -8.47917 15.9121 -7.65625  c
16.6517 -6.83333 17.0215 -5.73438 17.0215 -4.35938  c
17.0215 -2.95312 16.6517 -1.83854 15.9121 -1.01562  c
15.1725 -.192708 14.1725 .218750 12.9121 .218750  c
h
12.9277 -.703125 m
13.8132 -.703125 14.4980 -1.02344 14.9824 -1.66406  c
15.4668 -2.30469 15.7090 -3.20312 15.7090 -4.35938  c
15.7090 -5.49479 15.4668 -6.38021 14.9824 -7.01562  c
14.4980 -7.65104 13.8288 -7.96875 12.9746 -7.96875  c
12.1100 -7.96875 11.4355 -7.64844 10.9512 -7.00781  c
10.4668 -6.36719 10.2246 -5.47917 10.2246 -4.34375  c
10.2246 -3.21875 10.4642 -2.33073 10.9434 -1.67969  c
11.4225 -1.02865 12.0840 -.703125 12.9277 -.703125  c
h
18.7500 0.00000 m
18.7500 -8.67188 l
20.4531 -8.67188 l
22.8594 -1.96875 l
25.3281 -8.67188 l
26.8438 -8.67188 l
26.8438 0.00000 l
25.7031 0.00000 l
25.7031 -7.06250 l
23.3125 -.578125 l
22.1250 -.578125 l
19.7969 -7.07812 l
19.7969 0.00000 l
18.7500 0.00000 l
h
29.0859 0.00000 m
29.0859 -8.67188 l
30.7891 -8.67188 l
33.1953 -1.96875 l
35.6641 -8.67188 l
37.1797 -8.67188 l
37.1797 0.00000 l
36.0391 0.00000 l
36.0391 -7.06250 l
33.6484 -.578125 l
32.4609 -.578125 l
30.1328 -7.07812 l
30.1328 0.00000 l
29.0859 0.00000 l
h
39.4219 0.00000 m
39.4219 -8.67188 l
42.2969 -8.67188 l
43.1615 -8.67188 43.8568 -8.57552 44.3828 -8.38281  c
44.9089 -8.19010 45.3646 -7.86458 45.7500 -7.40625  c
46.3646 -6.68750 46.6719 -5.73438 46.6719 -4.54688  c
46.6719 -3.09896 46.2917 -1.97917 45.5312 -1.18750  c
44.7708 -.395833 43.6979 0.00000 42.3125 0.00000  c
39.4219 0.00000 l
h
40.6406 -.921875 m
42.2188 -.921875 l
43.3438 -.921875 44.1406 -1.22396 44.6094 -1.82812  c
45.1198 -2.47396 45.3750 -3.33854 45.3750 -4.42188  c
45.3750 -5.44271 45.1250 -6.24479 44.6250 -6.82812  c
44.3229 -7.18229 43.9635 -7.42448 43.5469 -7.55469  c
43.1302 -7.68490 42.5000 -7.75000 41.6562 -7.75000  c
40.6406 -7.75000 l
40.6406 -.921875 l
h
50.0508 -4.71875 m
49.1966 -5.31250 48.7695 -5.96875 48.7695 -6.68750  c
48.7695 -7.34375 49.0117 -7.87500 49.4961 -8.28125  c
49.9805 -8.68750 50.6081 -8.89062 51.3789 -8.89062  c
52.0872 -8.89062 52.6654 -8.71875 53.1133 -8.37500  c
53.5612 -8.03125 53.7852 -7.57812 53.7852 -7.01562  c
53.7852 -6.18229 53.2435 -5.41667 52.1602 -4.71875  c
53.4727 -4.08333 54.1289 -3.26042 54.1289 -2.25000  c
54.1289 -1.52083 53.8529 -.927083 53.3008 -.468750  c
52.7487 -.0104167 52.0404 .218750 51.1758 .218750  c
50.3216 .218750 49.6315 .00260417 49.1055 -.429688  c
48.5794 -.861979 48.3164 -1.43229 48.3164 -2.14062  c
48.3164 -3.17188 48.8945 -4.03125 50.0508 -4.71875  c
h
51.5195 -5.09375 m
52.3216 -5.62500 52.7227 -6.21354 52.7227 -6.85938  c
52.7227 -7.21354 52.5898 -7.49479 52.3242 -7.70312  c
52.0586 -7.91146 51.7018 -8.01562 51.2539 -8.01562  c
50.8268 -8.01562 50.4805 -7.91146 50.2148 -7.70312  c
49.9492 -7.49479 49.8164 -7.22396 49.8164 -6.89062  c
49.8164 -6.56771 49.9388 -6.27865 50.1836 -6.02344  c
50.4284 -5.76823 50.8737 -5.45833 51.5195 -5.09375  c
h
50.6758 -4.25000 m
50.2070 -3.89583 49.8893 -3.58333 49.7227 -3.31250  c
49.5560 -3.04167 49.4727 -2.70833 49.4727 -2.31250  c
49.4727 -1.82292 49.6341 -1.42448 49.9570 -1.11719  c
50.2799 -.809896 50.7018 -.656250 51.2227 -.656250  c
51.7227 -.656250 52.1341 -.786458 52.4570 -1.04688  c
52.7799 -1.30729 52.9414 -1.64583 52.9414 -2.06250  c
52.9414 -2.39583 52.8424 -2.67969 52.6445 -2.91406  c
52.4466 -3.14844 52.0612 -3.43229 51.4883 -3.76562  c
50.6758 -4.25000 l
h
f
[ 1.28127 0.00000 0.00000 1.28127 27.9293 32.9296 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .780392 .580392 RG
newpath
135.500 152.000 m
135.500 163.874 125.874 173.500 114.000 173.500  c
102.126 173.500 92.5000 163.874 92.5000 152.000  c
92.5000 140.126 102.126 130.500 114.000 130.500  c
125.874 130.500 135.500 140.126 135.500 152.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
136.500 152.000 m
136.500 164.426 126.426 174.500 114.000 174.500  c
101.574 174.500 91.5000 164.426 91.5000 152.000  c
91.5000 139.574 101.574 129.500 114.000 129.500  c
126.426 129.500 136.500 139.574 136.500 152.000  c
h
135.500 152.000 m
135.500 163.874 125.874 173.500 114.000 173.500  c
102.126 173.500 92.5000 163.874 92.5000 152.000  c
92.5000 140.126 102.126 130.500 114.000 130.500  c
125.874 130.500 135.500 140.126 135.500 152.000  c
h
f*
114.000 152.000 translate
1.00000 1.00000 scale
-31.2275 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.32812 -8.67188 l
6.68750 -1.96875 l
6.68750 -8.67188 l
7.75000 -8.67188 l
7.75000 0.00000 l
6.54688 0.00000 l
2.17188 -6.70312 l
2.17188 0.00000 l
1.12500 0.00000 l
h
9.99023 0.00000 m
9.99023 -8.67188 l
12.8652 -8.67188 l
13.7298 -8.67188 14.4251 -8.57552 14.9512 -8.38281  c
15.4772 -8.19010 15.9329 -7.86458 16.3184 -7.40625  c
16.9329 -6.68750 17.2402 -5.73438 17.2402 -4.54688  c
17.2402 -3.09896 16.8600 -1.97917 16.0996 -1.18750  c
15.3392 -.395833 14.2663 0.00000 12.8809 0.00000  c
9.99023 0.00000 l
h
11.2090 -.921875 m
12.7871 -.921875 l
13.9121 -.921875 14.7090 -1.22396 15.1777 -1.82812  c
15.6882 -2.47396 15.9434 -3.33854 15.9434 -4.42188  c
15.9434 -5.44271 15.6934 -6.24479 15.1934 -6.82812  c
14.8913 -7.18229 14.5319 -7.42448 14.1152 -7.55469  c
13.6986 -7.68490 13.0684 -7.75000 12.2246 -7.75000  c
11.2090 -7.75000 l
11.2090 -.921875 l
h
18.9004 -8.67188 m
20.1348 -8.67188 l
20.1348 -3.20312 l
20.1348 -2.32812 20.2962 -1.69271 20.6191 -1.29688  c
20.9421 -.901042 21.4525 -.703125 22.1504 -.703125  c
22.8379 -.703125 23.3249 -.890625 23.6113 -1.26562  c
23.8978 -1.64062 24.0410 -2.27083 24.0410 -3.15625  c
24.0410 -8.67188 l
25.1191 -8.67188 l
25.1191 -3.17188 l
25.1191 -1.99479 24.8770 -1.13542 24.3926 -.593750  c
23.9082 -.0520833 23.1348 .218750 22.0723 .218750  c
20.9889 .218750 20.1895 -.0598958 19.6738 -.617188  c
19.1582 -1.17448 18.9004 -2.04167 18.9004 -3.21875  c
18.9004 -8.67188 l
h
27.2930 0.00000 m
27.2930 -8.67188 l
32.1367 -8.67188 l
32.1367 -7.75000 l
28.5117 -7.75000 l
28.5117 -4.84375 l
31.5586 -4.84375 l
31.5586 -3.93750 l
28.5117 -3.93750 l
28.5117 0.00000 l
27.2930 0.00000 l
h
38.1172 -3.31250 m
36.6328 -7.06250 l
35.1641 -3.31250 l
38.1172 -3.31250 l
h
39.4141 0.00000 m
38.4766 -2.40625 l
34.8047 -2.40625 l
33.8516 0.00000 l
32.6953 0.00000 l
36.1484 -8.67188 l
37.3672 -8.67188 l
40.7422 0.00000 l
39.4141 0.00000 l
h
45.3965 0.00000 m
45.3965 -2.45312 l
41.4902 -2.45312 l
41.4902 -3.32812 l
45.3965 -8.67188 l
46.4902 -8.67188 l
46.4902 -3.40625 l
47.6465 -3.40625 l
47.6465 -2.45312 l
46.4902 -2.45312 l
46.4902 0.00000 l
45.3965 0.00000 l
h
42.6309 -3.40625 m
45.4746 -3.40625 l
45.4746 -7.25000 l
42.6309 -3.40625 l
h
49.5938 0.00000 m
49.5938 -8.67188 l
50.8125 -8.67188 l
50.8125 -.921875 l
54.7188 -.921875 l
54.7188 0.00000 l
49.5938 0.00000 l
h
55.8672 0.00000 m
55.8672 -1.01562 l
56.2005 -1.79688 56.8776 -2.65104 57.8984 -3.57812  c
58.5703 -4.17188 l
59.4141 -4.94271 59.8359 -5.70833 59.8359 -6.46875  c
59.8359 -6.94792 59.6927 -7.32552 59.4062 -7.60156  c
59.1198 -7.87760 58.7214 -8.01562 58.2109 -8.01562  c
57.6068 -8.01562 56.8984 -7.78646 56.0859 -7.32812  c
56.0859 -8.34375 l
56.8568 -8.70833 57.6172 -8.89062 58.3672 -8.89062  c
59.1797 -8.89062 59.8333 -8.67188 60.3281 -8.23438  c
60.8229 -7.79688 61.0703 -7.21875 61.0703 -6.50000  c
61.0703 -5.97917 60.9453 -5.51562 60.6953 -5.10938  c
60.4453 -4.70312 59.9818 -4.21354 59.3047 -3.64062  c
58.8672 -3.26562 l
57.9401 -2.48438 57.4036 -1.73438 57.2578 -1.01562  c
61.0234 -1.01562 l
61.0234 0.00000 l
55.8672 0.00000 l
h
f
[ 1.28127 0.00000 0.00000 1.28127 27.9293 32.9296 ] defaultmatrix matrix concatmatrix setmatrix
.949020 .298039 .200000 RG
newpath
215.272 170.532 m
194.186 191.618 l
173.101 170.532 l
194.186 149.446 l
h
f
0.00000 0.00000 0.00000 RG
newpath
194.186 148.032 m
216.686 170.532 l
194.186 193.032 l
171.686 170.532 l
h
215.272 170.532 m
194.186 191.618 l
173.101 170.532 l
194.186 149.446 l
h
f*
194.186 170.532 translate
1.00000 1.00000 scale
-22.2949 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -.921875 l
6.25000 -.921875 l
6.25000 0.00000 l
1.12500 0.00000 l
h
7.44531 -8.67188 m
8.67969 -8.67188 l
8.67969 -3.20312 l
8.67969 -2.32812 8.84115 -1.69271 9.16406 -1.29688  c
9.48698 -.901042 9.99740 -.703125 10.6953 -.703125  c
11.3828 -.703125 11.8698 -.890625 12.1562 -1.26562  c
12.4427 -1.64062 12.5859 -2.27083 12.5859 -3.15625  c
12.5859 -8.67188 l
13.6641 -8.67188 l
13.6641 -3.17188 l
13.6641 -1.99479 13.4219 -1.13542 12.9375 -.593750  c
12.4531 -.0520833 11.6797 .218750 10.6172 .218750  c
9.53385 .218750 8.73438 -.0598958 8.21875 -.617188  c
7.70312 -1.17448 7.44531 -2.04167 7.44531 -3.21875  c
7.44531 -8.67188 l
h
19.5410 .218750 m
18.1973 .218750 17.1582 -.177083 16.4238 -.968750  c
15.6895 -1.76042 15.3223 -2.88021 15.3223 -4.32812  c
15.3223 -5.77604 15.6973 -6.89844 16.4473 -7.69531  c
17.1973 -8.49219 18.2493 -8.89062 19.6035 -8.89062  c
20.3848 -8.89062 21.2962 -8.76562 22.3379 -8.51562  c
22.3379 -7.35938 l
21.1504 -7.76562 20.2337 -7.96875 19.5879 -7.96875  c
18.6504 -7.96875 17.9238 -7.65104 17.4082 -7.01562  c
16.8926 -6.38021 16.6348 -5.47917 16.6348 -4.31250  c
16.6348 -3.20833 16.9082 -2.33854 17.4551 -1.70312  c
18.0020 -1.06771 18.7546 -.750000 19.7129 -.750000  c
20.5358 -.750000 21.4160 -1.00000 22.3535 -1.50000  c
22.3535 -.453125 l
21.4993 -.00520833 20.5618 .218750 19.5410 .218750  c
h
24.8281 0.00000 m
24.9323 -.677083 25.0911 -1.26042 25.3047 -1.75000  c
25.5182 -2.23958 25.8906 -2.91667 26.4219 -3.78125  c
28.7812 -7.59375 l
24.3125 -7.59375 l
24.3125 -8.67188 l
29.8906 -8.67188 l
29.8906 -7.59375 l
27.6615 -4.31250 26.4167 -1.78125 26.1562 0.00000  c
24.8281 0.00000 l
h
31.7285 0.00000 m
31.7285 -8.67188 l
32.9473 -8.67188 l
32.9473 -.921875 l
36.8535 -.921875 l
36.8535 0.00000 l
31.7285 0.00000 l
h
38.0020 0.00000 m
38.0020 -1.01562 l
38.3353 -1.79688 39.0124 -2.65104 40.0332 -3.57812  c
40.7051 -4.17188 l
41.5488 -4.94271 41.9707 -5.70833 41.9707 -6.46875  c
41.9707 -6.94792 41.8275 -7.32552 41.5410 -7.60156  c
41.2546 -7.87760 40.8561 -8.01562 40.3457 -8.01562  c
39.7415 -8.01562 39.0332 -7.78646 38.2207 -7.32812  c
38.2207 -8.34375 l
38.9915 -8.70833 39.7520 -8.89062 40.5020 -8.89062  c
41.3145 -8.89062 41.9681 -8.67188 42.4629 -8.23438  c
42.9577 -7.79688 43.2051 -7.21875 43.2051 -6.50000  c
43.2051 -5.97917 43.0801 -5.51562 42.8301 -5.10938  c
42.5801 -4.70312 42.1165 -4.21354 41.4395 -3.64062  c
41.0020 -3.26562 l
40.0749 -2.48438 39.5384 -1.73438 39.3926 -1.01562  c
43.1582 -1.01562 l
43.1582 0.00000 l
38.0020 0.00000 l
h
f
[ 1.28127 0.00000 0.00000 1.28127 27.9293 32.9296 ] defaultmatrix matrix concatmatrix setmatrix
.968627 .341176 .200000 RG
newpath
285.077 126.936 m
263.991 148.021 l
242.905 126.936 l
263.991 105.850 l
h
f
0.00000 0.00000 0.00000 RG
newpath
263.991 104.436 m
286.491 126.936 l
263.991 149.436 l
241.491 126.936 l
h
285.077 126.936 m
263.991 148.021 l
242.905 126.936 l
263.991 105.850 l
h
f*
263.991 126.936 translate
1.00000 1.00000 scale
-17.2119 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.82812 -8.67188 l
5.23438 -1.96875 l
7.70312 -8.67188 l
9.21875 -8.67188 l
9.21875 0.00000 l
8.07812 0.00000 l
8.07812 -7.06250 l
5.68750 -.578125 l
4.50000 -.578125 l
2.17188 -7.07812 l
2.17188 0.00000 l
1.12500 0.00000 l
h
10.4297 0.00000 m
13.3047 -4.35938 l
10.5703 -8.67188 l
12.0234 -8.67188 l
14.1172 -5.40625 l
16.3047 -8.67188 l
17.4609 -8.67188 l
14.6953 -4.48438 l
17.5391 0.00000 l
16.0859 0.00000 l
13.8828 -3.43750 l
11.6016 0.00000 l
10.4297 0.00000 l
h
18.9727 0.00000 m
18.9727 -8.67188 l
21.8477 -8.67188 l
22.7122 -8.67188 23.4076 -8.57552 23.9336 -8.38281  c
24.4596 -8.19010 24.9154 -7.86458 25.3008 -7.40625  c
25.9154 -6.68750 26.2227 -5.73438 26.2227 -4.54688  c
26.2227 -3.09896 25.8424 -1.97917 25.0820 -1.18750  c
24.3216 -.395833 23.2487 0.00000 21.8633 0.00000  c
18.9727 0.00000 l
h
20.1914 -.921875 m
21.7695 -.921875 l
22.8945 -.921875 23.6914 -1.22396 24.1602 -1.82812  c
24.6706 -2.47396 24.9258 -3.33854 24.9258 -4.42188  c
24.9258 -5.44271 24.6758 -6.24479 24.1758 -6.82812  c
23.8737 -7.18229 23.5143 -7.42448 23.0977 -7.55469  c
22.6810 -7.68490 22.0508 -7.75000 21.2070 -7.75000  c
20.1914 -7.75000 l
20.1914 -.921875 l
h
28.6484 0.00000 m
28.6484 -.875000 l
30.3828 -.875000 l
30.3828 -7.71875 l
28.6484 -7.28125 l
28.6484 -8.17188 l
31.5391 -8.89062 l
31.5391 -.875000 l
33.2734 -.875000 l
33.2734 0.00000 l
28.6484 0.00000 l
h
f
[ 1.28127 0.00000 0.00000 1.28127 27.9293 32.9296 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .831373 .631373 RG
newpath
22.2018 50.5654 m
22.2018 62.4395 12.5759 72.0654 .701790 72.0654  c
-11.1723 72.0654 -20.7982 62.4395 -20.7982 50.5654  c
-20.7982 38.6913 -11.1723 29.0654 .701790 29.0654  c
12.5759 29.0654 22.2018 38.6913 22.2018 50.5654  c
h
f
0.00000 0.00000 0.00000 RG
newpath
23.2018 50.5654 m
23.2018 62.9918 13.1282 73.0654 .701790 73.0654  c
-11.7246 73.0654 -21.7982 62.9918 -21.7982 50.5654  c
-21.7982 38.1390 -11.7246 28.0654 .701790 28.0654  c
13.1282 28.0654 23.2018 38.1390 23.2018 50.5654  c
h
22.2018 50.5654 m
22.2018 62.4395 12.5759 72.0654 .701790 72.0654  c
-11.1723 72.0654 -20.7982 62.4395 -20.7982 50.5654  c
-20.7982 38.6913 -11.1723 29.0654 .701790 29.0654  c
12.5759 29.0654 22.2018 38.6913 22.2018 50.5654  c
h
f*
.701790 50.5654 translate
1.00000 1.00000 scale
-20.6338 4.42090 translate
newpath
5.51562 -3.31250 m
4.03125 -7.06250 l
2.56250 -3.31250 l
5.51562 -3.31250 l
h
6.81250 0.00000 m
5.87500 -2.40625 l
2.20312 -2.40625 l
1.25000 0.00000 l
.0937500 0.00000 l
3.54688 -8.67188 l
4.76562 -8.67188 l
8.14062 0.00000 l
6.81250 0.00000 l
h
9.40430 0.00000 m
9.40430 -8.67188 l
10.6230 -8.67188 l
10.6230 -.921875 l
14.5293 -.921875 l
14.5293 0.00000 l
9.40430 0.00000 l
h
15.8027 0.00000 m
15.8027 -8.67188 l
18.6777 -8.67188 l
19.5423 -8.67188 20.2376 -8.57552 20.7637 -8.38281  c
21.2897 -8.19010 21.7454 -7.86458 22.1309 -7.40625  c
22.7454 -6.68750 23.0527 -5.73438 23.0527 -4.54688  c
23.0527 -3.09896 22.6725 -1.97917 21.9121 -1.18750  c
21.1517 -.395833 20.0788 0.00000 18.6934 0.00000  c
15.8027 0.00000 l
h
17.0215 -.921875 m
18.5996 -.921875 l
19.7246 -.921875 20.5215 -1.22396 20.9902 -1.82812  c
21.5007 -2.47396 21.7559 -3.33854 21.7559 -4.42188  c
21.7559 -5.44271 21.5059 -6.24479 21.0059 -6.82812  c
20.7038 -7.18229 20.3444 -7.42448 19.9277 -7.55469  c
19.5111 -7.68490 18.8809 -7.75000 18.0371 -7.75000  c
17.0215 -7.75000 l
17.0215 -.921875 l
h
28.2754 .218750 m
27.0775 .218750 26.1113 -.197917 25.3770 -1.03125  c
24.6426 -1.86458 24.2754 -2.96875 24.2754 -4.34375  c
24.2754 -5.71875 24.6426 -6.82031 25.3770 -7.64844  c
26.1113 -8.47656 27.0983 -8.89062 28.3379 -8.89062  c
29.5566 -8.89062 30.5358 -8.47917 31.2754 -7.65625  c
32.0150 -6.83333 32.3848 -5.73438 32.3848 -4.35938  c
32.3848 -2.95312 32.0150 -1.83854 31.2754 -1.01562  c
30.5358 -.192708 29.5358 .218750 28.2754 .218750  c
h
28.2910 -.703125 m
29.1764 -.703125 29.8613 -1.02344 30.3457 -1.66406  c
30.8301 -2.30469 31.0723 -3.20312 31.0723 -4.35938  c
31.0723 -5.49479 30.8301 -6.38021 30.3457 -7.01562  c
29.8613 -7.65104 29.1921 -7.96875 28.3379 -7.96875  c
27.4733 -7.96875 26.7988 -7.64844 26.3145 -7.00781  c
25.8301 -6.36719 25.5879 -5.47917 25.5879 -4.34375  c
25.5879 -3.21875 25.8275 -2.33073 26.3066 -1.67969  c
26.7858 -1.02865 27.4473 -.703125 28.2910 -.703125  c
h
38.5039 -3.31250 m
37.0195 -7.06250 l
35.5508 -3.31250 l
38.5039 -3.31250 l
h
39.8008 0.00000 m
38.8633 -2.40625 l
35.1914 -2.40625 l
34.2383 0.00000 l
33.0820 0.00000 l
36.5352 -8.67188 l
37.7539 -8.67188 l
41.1289 0.00000 l
39.8008 0.00000 l
h
f
[ 1.28127 0.00000 0.00000 1.28127 27.9293 32.9296 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
