%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:47:51 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.40382 0.00000 0.00000 1.40382 108.547 30.2136 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
42.4289 199.908 m
44.1733 152.466 l
S
newpath
45.0000 107.481 m
45.0000 100.519 l
S
newpath
106.844 162.718 m
64.8858 140.507 l
S
newpath
19.4856 115.250 m
25.5144 118.731 l
S
newpath
78.2300 187.537 m
56.2500 149.466 l
S
newpath
78.2300 20.4632 m
53.2356 63.7548 l
S
newpath
19.4856 92.7500 m
30.7356 86.2548 l
S
1.00000 .615686 .415686 RG
newpath
63.1021 222.393 m
63.1021 234.267 53.4763 243.893 41.6021 243.893  c
29.7280 243.893 20.1021 234.267 20.1021 222.393  c
20.1021 210.519 29.7280 200.893 41.6021 200.893  c
53.4763 200.893 63.1021 210.519 63.1021 222.393  c
h
f
0.00000 0.00000 0.00000 RG
newpath
64.1021 222.393 m
64.1021 234.819 54.0286 244.893 41.6021 244.893  c
29.1757 244.893 19.1021 234.819 19.1021 222.393  c
19.1021 209.966 29.1757 199.893 41.6021 199.893  c
54.0286 199.893 64.1021 209.966 64.1021 222.393  c
h
63.1021 222.393 m
63.1021 234.267 53.4763 243.893 41.6021 243.893  c
29.7280 243.893 20.1021 234.267 20.1021 222.393  c
20.1021 210.519 29.7280 200.893 41.6021 200.893  c
53.4763 200.893 63.1021 210.519 63.1021 222.393  c
h
f*
41.6021 222.393 translate
1.00000 1.00000 scale
-26.4053 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
13.1035 -3.31250 m
11.6191 -7.06250 l
10.1504 -3.31250 l
13.1035 -3.31250 l
h
14.4004 0.00000 m
13.4629 -2.40625 l
9.79102 -2.40625 l
8.83789 0.00000 l
7.68164 0.00000 l
11.1348 -8.67188 l
12.3535 -8.67188 l
15.7285 0.00000 l
14.4004 0.00000 l
h
18.6797 .218750 m
18.1068 .218750 17.3672 .0885417 16.4609 -.171875  c
16.4609 -1.39062 l
17.4297 -.932292 18.2318 -.703125 18.8672 -.703125  c
19.3464 -.703125 19.7344 -.830729 20.0312 -1.08594  c
20.3281 -1.34115 20.4766 -1.67708 20.4766 -2.09375  c
20.4766 -2.42708 20.3802 -2.71354 20.1875 -2.95312  c
19.9948 -3.19271 19.6380 -3.45833 19.1172 -3.75000  c
18.5234 -4.09375 l
17.7839 -4.52083 17.2630 -4.91927 16.9609 -5.28906  c
16.6589 -5.65885 16.5078 -6.09375 16.5078 -6.59375  c
16.5078 -7.26042 16.7500 -7.80990 17.2344 -8.24219  c
17.7188 -8.67448 18.3359 -8.89062 19.0859 -8.89062  c
19.7526 -8.89062 20.4557 -8.78125 21.1953 -8.56250  c
21.1953 -7.43750 l
20.2786 -7.79167 19.5964 -7.96875 19.1484 -7.96875  c
18.7214 -7.96875 18.3698 -7.85677 18.0938 -7.63281  c
17.8177 -7.40885 17.6797 -7.12500 17.6797 -6.78125  c
17.6797 -6.48958 17.7812 -6.23177 17.9844 -6.00781  c
18.1875 -5.78385 18.5599 -5.51562 19.1016 -5.20312  c
19.7109 -4.85938 l
20.4609 -4.43229 20.9844 -4.02865 21.2812 -3.64844  c
21.5781 -3.26823 21.7266 -2.81250 21.7266 -2.28125  c
21.7266 -1.53125 21.4505 -.927083 20.8984 -.468750  c
20.3464 -.0104167 19.6068 .218750 18.6797 .218750  c
h
29.9707 -.234375 m
28.9186 .0677083 28.0020 .218750 27.2207 .218750  c
25.8353 .218750 24.7754 -.174479 24.0410 -.960938  c
23.3066 -1.74740 22.9395 -2.87500 22.9395 -4.34375  c
22.9395 -5.78125 23.3118 -6.89844 24.0566 -7.69531  c
24.8014 -8.49219 25.8509 -8.89062 27.2051 -8.89062  c
28.0801 -8.89062 28.9967 -8.76042 29.9551 -8.50000  c
29.9551 -7.35938 l
28.7572 -7.76562 27.8405 -7.96875 27.2051 -7.96875  c
26.2676 -7.96875 25.5410 -7.65104 25.0254 -7.01562  c
24.5098 -6.38021 24.2520 -5.48438 24.2520 -4.32812  c
24.2520 -3.18229 24.5280 -2.29167 25.0801 -1.65625  c
25.6322 -1.02083 26.4082 -.703125 27.4082 -.703125  c
27.8249 -.703125 28.2676 -.776042 28.7363 -.921875  c
28.7363 -3.75000 l
29.9707 -3.75000 l
29.9707 -.234375 l
h
32.1270 0.00000 m
32.1270 -8.67188 l
34.7520 -8.67188 l
35.5853 -8.67188 36.2233 -8.48958 36.6660 -8.12500  c
37.1087 -7.76042 37.3301 -7.22396 37.3301 -6.51562  c
37.3301 -5.35938 36.7467 -4.54167 35.5801 -4.06250  c
38.4707 0.00000 l
36.9551 0.00000 l
34.4863 -3.67188 l
33.3457 -3.67188 l
33.3457 0.00000 l
32.1270 0.00000 l
h
33.3457 -4.59375 m
33.7363 -4.59375 l
35.2884 -4.59375 36.0645 -5.19792 36.0645 -6.40625  c
36.0645 -7.30208 35.4134 -7.75000 34.1113 -7.75000  c
33.3457 -7.75000 l
33.3457 -4.59375 l
h
39.7148 0.00000 m
39.7148 -8.67188 l
42.0742 -8.67188 l
43.1159 -8.67188 43.8659 -8.49479 44.3242 -8.14062  c
44.7826 -7.78646 45.0117 -7.20833 45.0117 -6.40625  c
45.0117 -5.47917 44.6992 -4.75521 44.0742 -4.23438  c
43.4492 -3.71354 42.5846 -3.45312 41.4805 -3.45312  c
40.9336 -3.45312 l
40.9336 0.00000 l
39.7148 0.00000 l
h
40.9336 -4.37500 m
41.4336 -4.37500 l
42.1628 -4.37500 42.7253 -4.54427 43.1211 -4.88281  c
43.5169 -5.22135 43.7148 -5.69792 43.7148 -6.31250  c
43.7148 -6.82292 43.5586 -7.19010 43.2461 -7.41406  c
42.9336 -7.63802 42.4128 -7.75000 41.6836 -7.75000  c
40.9336 -7.75000 l
40.9336 -4.37500 l
h
46.2227 0.00000 m
46.2227 -1.01562 l
46.5560 -1.79688 47.2331 -2.65104 48.2539 -3.57812  c
48.9258 -4.17188 l
49.7695 -4.94271 50.1914 -5.70833 50.1914 -6.46875  c
50.1914 -6.94792 50.0482 -7.32552 49.7617 -7.60156  c
49.4753 -7.87760 49.0768 -8.01562 48.5664 -8.01562  c
47.9622 -8.01562 47.2539 -7.78646 46.4414 -7.32812  c
46.4414 -8.34375 l
47.2122 -8.70833 47.9727 -8.89062 48.7227 -8.89062  c
49.5352 -8.89062 50.1888 -8.67188 50.6836 -8.23438  c
51.1784 -7.79688 51.4258 -7.21875 51.4258 -6.50000  c
51.4258 -5.97917 51.3008 -5.51562 51.0508 -5.10938  c
50.8008 -4.70312 50.3372 -4.21354 49.6602 -3.64062  c
49.2227 -3.26562 l
48.2956 -2.48438 47.7591 -1.73438 47.6133 -1.01562  c
51.3789 -1.01562 l
51.3789 0.00000 l
46.2227 0.00000 l
h
f
[ 1.40382 0.00000 0.00000 1.40382 108.547 30.2136 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .400000 .200000 RG
newpath
66.5000 129.981 m
66.5000 141.855 56.8741 151.481 45.0000 151.481  c
33.1259 151.481 23.5000 141.855 23.5000 129.981  c
23.5000 118.107 33.1259 108.481 45.0000 108.481  c
56.8741 108.481 66.5000 118.107 66.5000 129.981  c
h
f
0.00000 0.00000 0.00000 RG
newpath
67.5000 129.981 m
67.5000 142.407 57.4264 152.481 45.0000 152.481  c
32.5736 152.481 22.5000 142.407 22.5000 129.981  c
22.5000 117.554 32.5736 107.481 45.0000 107.481  c
57.4264 107.481 67.5000 117.554 67.5000 129.981  c
h
66.5000 129.981 m
66.5000 141.855 56.8741 151.481 45.0000 151.481  c
33.1259 151.481 23.5000 141.855 23.5000 129.981  c
23.5000 118.107 33.1259 108.481 45.0000 108.481  c
56.8741 108.481 66.5000 118.107 66.5000 129.981  c
h
f*
45.0000 129.981 translate
1.00000 1.00000 scale
-15.0820 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.28125 -8.67188 l
2.28125 -4.40625 l
5.78125 -8.67188 l
7.01562 -8.67188 l
3.62500 -4.53125 l
7.62500 0.00000 l
6.06250 0.00000 l
2.28125 -4.39062 l
2.28125 0.00000 l
1.12500 0.00000 l
h
8.95898 0.00000 m
8.95898 -8.67188 l
11.5840 -8.67188 l
12.4173 -8.67188 13.0553 -8.48958 13.4980 -8.12500  c
13.9408 -7.76042 14.1621 -7.22396 14.1621 -6.51562  c
14.1621 -5.35938 13.5788 -4.54167 12.4121 -4.06250  c
15.3027 0.00000 l
13.7871 0.00000 l
11.3184 -3.67188 l
10.1777 -3.67188 l
10.1777 0.00000 l
8.95898 0.00000 l
h
10.1777 -4.59375 m
10.5684 -4.59375 l
12.1204 -4.59375 12.8965 -5.19792 12.8965 -6.40625  c
12.8965 -7.30208 12.2454 -7.75000 10.9434 -7.75000  c
10.1777 -7.75000 l
10.1777 -4.59375 l
h
20.9375 -3.31250 m
19.4531 -7.06250 l
17.9844 -3.31250 l
20.9375 -3.31250 l
h
22.2344 0.00000 m
21.2969 -2.40625 l
17.6250 -2.40625 l
16.6719 0.00000 l
15.5156 0.00000 l
18.9688 -8.67188 l
20.1875 -8.67188 l
23.5625 0.00000 l
22.2344 0.00000 l
h
26.5137 .218750 m
25.9408 .218750 25.2012 .0885417 24.2949 -.171875  c
24.2949 -1.39062 l
25.2637 -.932292 26.0658 -.703125 26.7012 -.703125  c
27.1803 -.703125 27.5684 -.830729 27.8652 -1.08594  c
28.1621 -1.34115 28.3105 -1.67708 28.3105 -2.09375  c
28.3105 -2.42708 28.2142 -2.71354 28.0215 -2.95312  c
27.8288 -3.19271 27.4720 -3.45833 26.9512 -3.75000  c
26.3574 -4.09375 l
25.6178 -4.52083 25.0970 -4.91927 24.7949 -5.28906  c
24.4928 -5.65885 24.3418 -6.09375 24.3418 -6.59375  c
24.3418 -7.26042 24.5840 -7.80990 25.0684 -8.24219  c
25.5527 -8.67448 26.1699 -8.89062 26.9199 -8.89062  c
27.5866 -8.89062 28.2897 -8.78125 29.0293 -8.56250  c
29.0293 -7.43750 l
28.1126 -7.79167 27.4303 -7.96875 26.9824 -7.96875  c
26.5553 -7.96875 26.2038 -7.85677 25.9277 -7.63281  c
25.6517 -7.40885 25.5137 -7.12500 25.5137 -6.78125  c
25.5137 -6.48958 25.6152 -6.23177 25.8184 -6.00781  c
26.0215 -5.78385 26.3939 -5.51562 26.9355 -5.20312  c
27.5449 -4.85938 l
28.2949 -4.43229 28.8184 -4.02865 29.1152 -3.64844  c
29.4121 -3.26823 29.5605 -2.81250 29.5605 -2.28125  c
29.5605 -1.53125 29.2845 -.927083 28.7324 -.468750  c
28.1803 -.0104167 27.4408 .218750 26.5137 .218750  c
h
f
[ 1.40382 0.00000 0.00000 1.40382 108.547 30.2136 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .945098 .745098 RG
newpath
110.980 207.022 m
110.980 218.897 101.354 228.522 89.4800 228.522  c
77.6059 228.522 67.9800 218.897 67.9800 207.022  c
67.9800 195.148 77.6059 185.522 89.4800 185.522  c
101.354 185.522 110.980 195.148 110.980 207.022  c
h
f
0.00000 0.00000 0.00000 RG
newpath
111.980 207.022 m
111.980 219.449 101.906 229.522 89.4800 229.522  c
77.0536 229.522 66.9800 219.449 66.9800 207.022  c
66.9800 194.596 77.0536 184.522 89.4800 184.522  c
101.906 184.522 111.980 194.596 111.980 207.022  c
h
110.980 207.022 m
110.980 218.896 101.354 228.522 89.4800 228.522  c
77.6059 228.522 67.9800 218.896 67.9800 207.022  c
67.9800 195.148 77.6059 185.522 89.4800 185.522  c
101.354 185.522 110.980 195.148 110.980 207.022  c
h
f*
89.4800 207.022 translate
1.00000 1.00000 scale
-13.1016 4.42090 translate
newpath
5.51562 -3.31250 m
4.03125 -7.06250 l
2.56250 -3.31250 l
5.51562 -3.31250 l
h
6.81250 0.00000 m
5.87500 -2.40625 l
2.20312 -2.40625 l
1.25000 0.00000 l
.0937500 0.00000 l
3.54688 -8.67188 l
4.76562 -8.67188 l
8.14062 0.00000 l
6.81250 0.00000 l
h
9.27930 0.00000 m
9.27930 -1.01562 l
9.61263 -1.79688 10.2897 -2.65104 11.3105 -3.57812  c
11.9824 -4.17188 l
12.8262 -4.94271 13.2480 -5.70833 13.2480 -6.46875  c
13.2480 -6.94792 13.1048 -7.32552 12.8184 -7.60156  c
12.5319 -7.87760 12.1335 -8.01562 11.6230 -8.01562  c
11.0189 -8.01562 10.3105 -7.78646 9.49805 -7.32812  c
9.49805 -8.34375 l
10.2689 -8.70833 11.0293 -8.89062 11.7793 -8.89062  c
12.5918 -8.89062 13.2454 -8.67188 13.7402 -8.23438  c
14.2350 -7.79688 14.4824 -7.21875 14.4824 -6.50000  c
14.4824 -5.97917 14.3574 -5.51562 14.1074 -5.10938  c
13.8574 -4.70312 13.3939 -4.21354 12.7168 -3.64062  c
12.2793 -3.26562 l
11.3522 -2.48438 10.8158 -1.73438 10.6699 -1.01562  c
14.4355 -1.01562 l
14.4355 0.00000 l
9.27930 0.00000 l
h
16.9922 0.00000 m
16.9922 -8.67188 l
18.6953 -8.67188 l
21.1016 -1.96875 l
23.5703 -8.67188 l
25.0859 -8.67188 l
25.0859 0.00000 l
23.9453 0.00000 l
23.9453 -7.06250 l
21.5547 -.578125 l
20.3672 -.578125 l
18.0391 -7.07812 l
18.0391 0.00000 l
16.9922 0.00000 l
h
f
[ 1.40382 0.00000 0.00000 1.40382 108.547 30.2136 ] defaultmatrix matrix concatmatrix setmatrix
.898039 .192157 .200000 RG
newpath
66.0858 78.0192 m
45.0000 99.1050 l
23.9142 78.0192 l
45.0000 56.9335 l
h
f
0.00000 0.00000 0.00000 RG
newpath
45.0000 55.5192 m
67.5000 78.0192 l
45.0000 100.519 l
22.5000 78.0192 l
h
66.0858 78.0192 m
45.0000 99.1050 l
23.9142 78.0192 l
45.0000 56.9335 l
h
f*
45.0000 78.0192 translate
1.00000 1.00000 scale
-15.5859 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
7.58789 0.00000 m
7.58789 -8.67188 l
8.80664 -8.67188 l
8.80664 -5.01562 l
12.9316 -5.01562 l
12.9316 -8.67188 l
14.1660 -8.67188 l
14.1660 0.00000 l
12.9316 0.00000 l
12.9316 -4.09375 l
8.80664 -4.09375 l
8.80664 0.00000 l
7.58789 0.00000 l
h
20.1094 .218750 m
18.7656 .218750 17.7266 -.177083 16.9922 -.968750  c
16.2578 -1.76042 15.8906 -2.88021 15.8906 -4.32812  c
15.8906 -5.77604 16.2656 -6.89844 17.0156 -7.69531  c
17.7656 -8.49219 18.8177 -8.89062 20.1719 -8.89062  c
20.9531 -8.89062 21.8646 -8.76562 22.9062 -8.51562  c
22.9062 -7.35938 l
21.7188 -7.76562 20.8021 -7.96875 20.1562 -7.96875  c
19.2188 -7.96875 18.4922 -7.65104 17.9766 -7.01562  c
17.4609 -6.38021 17.2031 -5.47917 17.2031 -4.31250  c
17.2031 -3.20833 17.4766 -2.33854 18.0234 -1.70312  c
18.5703 -1.06771 19.3229 -.750000 20.2812 -.750000  c
21.1042 -.750000 21.9844 -1.00000 22.9219 -1.50000  c
22.9219 -.453125 l
22.0677 -.00520833 21.1302 .218750 20.1094 .218750  c
h
25.3965 0.00000 m
25.3965 -.875000 l
27.1309 -.875000 l
27.1309 -7.71875 l
25.3965 -7.28125 l
25.3965 -8.17188 l
28.2871 -8.89062 l
28.2871 -.875000 l
30.0215 -.875000 l
30.0215 0.00000 l
25.3965 0.00000 l
h
f
[ 1.40382 0.00000 0.00000 1.40382 108.547 30.2136 ] defaultmatrix matrix concatmatrix setmatrix
.960784 1.00000 .776471 RG
newpath
21.5000 104.000 m
21.5000 115.874 11.8741 125.500 0.00000 125.500  c
-11.8741 125.500 -21.5000 115.874 -21.5000 104.000  c
-21.5000 92.1259 -11.8741 82.5000 0.00000 82.5000  c
11.8741 82.5000 21.5000 92.1259 21.5000 104.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
22.5000 104.000 m
22.5000 116.426 12.4264 126.500 0.00000 126.500  c
-12.4264 126.500 -22.5000 116.426 -22.5000 104.000  c
-22.5000 91.5736 -12.4264 81.5000 0.00000 81.5000  c
12.4264 81.5000 22.5000 91.5736 22.5000 104.000  c
h
21.5000 104.000 m
21.5000 115.874 11.8741 125.500 0.00000 125.500  c
-11.8741 125.500 -21.5000 115.874 -21.5000 104.000  c
-21.5000 92.1259 -11.8741 82.5000 0.00000 82.5000  c
11.8741 82.5000 21.5000 92.1259 21.5000 104.000  c
h
f*
0.00000 104.000 translate
1.00000 1.00000 scale
-12.5479 4.42090 translate
newpath
1.10938 0.00000 m
1.10938 -8.67188 l
2.34375 -8.67188 l
2.34375 0.00000 l
1.10938 0.00000 l
h
4.58203 0.00000 m
4.58203 -8.67188 l
7.20703 -8.67188 l
8.04036 -8.67188 8.67839 -8.48958 9.12109 -8.12500  c
9.56380 -7.76042 9.78516 -7.22396 9.78516 -6.51562  c
9.78516 -5.35938 9.20182 -4.54167 8.03516 -4.06250  c
10.9258 0.00000 l
9.41016 0.00000 l
6.94141 -3.67188 l
5.80078 -3.67188 l
5.80078 0.00000 l
4.58203 0.00000 l
h
5.80078 -4.59375 m
6.19141 -4.59375 l
7.74349 -4.59375 8.51953 -5.19792 8.51953 -6.40625  c
8.51953 -7.30208 7.86849 -7.75000 6.56641 -7.75000  c
5.80078 -7.75000 l
5.80078 -4.59375 l
h
13.8574 .218750 m
13.2845 .218750 12.5449 .0885417 11.6387 -.171875  c
11.6387 -1.39062 l
12.6074 -.932292 13.4095 -.703125 14.0449 -.703125  c
14.5241 -.703125 14.9121 -.830729 15.2090 -1.08594  c
15.5059 -1.34115 15.6543 -1.67708 15.6543 -2.09375  c
15.6543 -2.42708 15.5579 -2.71354 15.3652 -2.95312  c
15.1725 -3.19271 14.8158 -3.45833 14.2949 -3.75000  c
13.7012 -4.09375 l
12.9616 -4.52083 12.4408 -4.91927 12.1387 -5.28906  c
11.8366 -5.65885 11.6855 -6.09375 11.6855 -6.59375  c
11.6855 -7.26042 11.9277 -7.80990 12.4121 -8.24219  c
12.8965 -8.67448 13.5137 -8.89062 14.2637 -8.89062  c
14.9303 -8.89062 15.6335 -8.78125 16.3730 -8.56250  c
16.3730 -7.43750 l
15.4564 -7.79167 14.7741 -7.96875 14.3262 -7.96875  c
13.8991 -7.96875 13.5475 -7.85677 13.2715 -7.63281  c
12.9954 -7.40885 12.8574 -7.12500 12.8574 -6.78125  c
12.8574 -6.48958 12.9590 -6.23177 13.1621 -6.00781  c
13.3652 -5.78385 13.7376 -5.51562 14.2793 -5.20312  c
14.8887 -4.85938 l
15.6387 -4.43229 16.1621 -4.02865 16.4590 -3.64844  c
16.7559 -3.26823 16.9043 -2.81250 16.9043 -2.28125  c
16.9043 -1.53125 16.6283 -.927083 16.0762 -.468750  c
15.5241 -.0104167 14.7845 .218750 13.8574 .218750  c
h
18.5078 0.00000 m
18.5078 -1.01562 l
18.8411 -1.79688 19.5182 -2.65104 20.5391 -3.57812  c
21.2109 -4.17188 l
22.0547 -4.94271 22.4766 -5.70833 22.4766 -6.46875  c
22.4766 -6.94792 22.3333 -7.32552 22.0469 -7.60156  c
21.7604 -7.87760 21.3620 -8.01562 20.8516 -8.01562  c
20.2474 -8.01562 19.5391 -7.78646 18.7266 -7.32812  c
18.7266 -8.34375 l
19.4974 -8.70833 20.2578 -8.89062 21.0078 -8.89062  c
21.8203 -8.89062 22.4740 -8.67188 22.9688 -8.23438  c
23.4635 -7.79688 23.7109 -7.21875 23.7109 -6.50000  c
23.7109 -5.97917 23.5859 -5.51562 23.3359 -5.10938  c
23.0859 -4.70312 22.6224 -4.21354 21.9453 -3.64062  c
21.5078 -3.26562 l
20.5807 -2.48438 20.0443 -1.73438 19.8984 -1.01562  c
23.6641 -1.01562 l
23.6641 0.00000 l
18.5078 0.00000 l
h
f
[ 1.40382 0.00000 0.00000 1.40382 108.547 30.2136 ] defaultmatrix matrix concatmatrix setmatrix
.854902 1.00000 .705882 RG
newpath
148.230 173.244 m
148.230 185.118 138.604 194.744 126.730 194.744  c
114.856 194.744 105.230 185.118 105.230 173.244  c
105.230 161.370 114.856 151.744 126.730 151.744  c
138.604 151.744 148.230 161.370 148.230 173.244  c
h
f
0.00000 0.00000 0.00000 RG
newpath
149.230 173.244 m
149.230 185.671 139.157 195.744 126.730 195.744  c
114.304 195.744 104.230 185.671 104.230 173.244  c
104.230 160.818 114.304 150.744 126.730 150.744  c
139.157 150.744 149.230 160.818 149.230 173.244  c
h
148.230 173.244 m
148.230 185.118 138.604 194.744 126.730 194.744  c
114.856 194.744 105.230 185.118 105.230 173.244  c
105.230 161.370 114.856 151.744 126.730 151.744  c
138.604 151.744 148.230 161.370 148.230 173.244  c
h
f*
126.730 173.244 translate
1.00000 1.00000 scale
-30.8994 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
13.1035 -3.31250 m
11.6191 -7.06250 l
10.1504 -3.31250 l
13.1035 -3.31250 l
h
14.4004 0.00000 m
13.4629 -2.40625 l
9.79102 -2.40625 l
8.83789 0.00000 l
7.68164 0.00000 l
11.1348 -8.67188 l
12.3535 -8.67188 l
15.7285 0.00000 l
14.4004 0.00000 l
h
16.9922 0.00000 m
16.9922 -8.67188 l
19.3516 -8.67188 l
20.3932 -8.67188 21.1432 -8.49479 21.6016 -8.14062  c
22.0599 -7.78646 22.2891 -7.20833 22.2891 -6.40625  c
22.2891 -5.47917 21.9766 -4.75521 21.3516 -4.23438  c
20.7266 -3.71354 19.8620 -3.45312 18.7578 -3.45312  c
18.2109 -3.45312 l
18.2109 0.00000 l
16.9922 0.00000 l
h
18.2109 -4.37500 m
18.7109 -4.37500 l
19.4401 -4.37500 20.0026 -4.54427 20.3984 -4.88281  c
20.7943 -5.22135 20.9922 -5.69792 20.9922 -6.31250  c
20.9922 -6.82292 20.8359 -7.19010 20.5234 -7.41406  c
20.2109 -7.63802 19.6901 -7.75000 18.9609 -7.75000  c
18.2109 -7.75000 l
18.2109 -4.37500 l
h
24.3125 0.00000 m
24.3125 -.875000 l
26.0469 -.875000 l
26.0469 -7.71875 l
24.3125 -7.28125 l
24.3125 -8.17188 l
27.2031 -8.89062 l
27.2031 -.875000 l
28.9375 -.875000 l
28.9375 0.00000 l
24.3125 0.00000 l
h
37.7285 -.234375 m
36.6764 .0677083 35.7598 .218750 34.9785 .218750  c
33.5931 .218750 32.5332 -.174479 31.7988 -.960938  c
31.0645 -1.74740 30.6973 -2.87500 30.6973 -4.34375  c
30.6973 -5.78125 31.0697 -6.89844 31.8145 -7.69531  c
32.5592 -8.49219 33.6087 -8.89062 34.9629 -8.89062  c
35.8379 -8.89062 36.7546 -8.76042 37.7129 -8.50000  c
37.7129 -7.35938 l
36.5150 -7.76562 35.5983 -7.96875 34.9629 -7.96875  c
34.0254 -7.96875 33.2988 -7.65104 32.7832 -7.01562  c
32.2676 -6.38021 32.0098 -5.48438 32.0098 -4.32812  c
32.0098 -3.18229 32.2858 -2.29167 32.8379 -1.65625  c
33.3900 -1.02083 34.1660 -.703125 35.1660 -.703125  c
35.5827 -.703125 36.0254 -.776042 36.4941 -.921875  c
36.4941 -3.75000 l
37.7285 -3.75000 l
37.7285 -.234375 l
h
39.8848 0.00000 m
39.8848 -8.67188 l
42.7598 -8.67188 l
43.6243 -8.67188 44.3197 -8.57552 44.8457 -8.38281  c
45.3717 -8.19010 45.8275 -7.86458 46.2129 -7.40625  c
46.8275 -6.68750 47.1348 -5.73438 47.1348 -4.54688  c
47.1348 -3.09896 46.7546 -1.97917 45.9941 -1.18750  c
45.2337 -.395833 44.1608 0.00000 42.7754 0.00000  c
39.8848 0.00000 l
h
41.1035 -.921875 m
42.6816 -.921875 l
43.8066 -.921875 44.6035 -1.22396 45.0723 -1.82812  c
45.5827 -2.47396 45.8379 -3.33854 45.8379 -4.42188  c
45.8379 -5.44271 45.5879 -6.24479 45.0879 -6.82812  c
44.7858 -7.18229 44.4264 -7.42448 44.0098 -7.55469  c
43.5931 -7.68490 42.9629 -7.75000 42.1191 -7.75000  c
41.1035 -7.75000 l
41.1035 -.921875 l
h
50.5605 .218750 m
49.9876 .218750 49.2480 .0885417 48.3418 -.171875  c
48.3418 -1.39062 l
49.3105 -.932292 50.1126 -.703125 50.7480 -.703125  c
51.2272 -.703125 51.6152 -.830729 51.9121 -1.08594  c
52.2090 -1.34115 52.3574 -1.67708 52.3574 -2.09375  c
52.3574 -2.42708 52.2611 -2.71354 52.0684 -2.95312  c
51.8757 -3.19271 51.5189 -3.45833 50.9980 -3.75000  c
50.4043 -4.09375 l
49.6647 -4.52083 49.1439 -4.91927 48.8418 -5.28906  c
48.5397 -5.65885 48.3887 -6.09375 48.3887 -6.59375  c
48.3887 -7.26042 48.6309 -7.80990 49.1152 -8.24219  c
49.5996 -8.67448 50.2168 -8.89062 50.9668 -8.89062  c
51.6335 -8.89062 52.3366 -8.78125 53.0762 -8.56250  c
53.0762 -7.43750 l
52.1595 -7.79167 51.4772 -7.96875 51.0293 -7.96875  c
50.6022 -7.96875 50.2507 -7.85677 49.9746 -7.63281  c
49.6986 -7.40885 49.5605 -7.12500 49.5605 -6.78125  c
49.5605 -6.48958 49.6621 -6.23177 49.8652 -6.00781  c
50.0684 -5.78385 50.4408 -5.51562 50.9824 -5.20312  c
51.5918 -4.85938 l
52.3418 -4.43229 52.8652 -4.02865 53.1621 -3.64844  c
53.4590 -3.26823 53.6074 -2.81250 53.6074 -2.28125  c
53.6074 -1.53125 53.3314 -.927083 52.7793 -.468750  c
52.2272 -.0104167 51.4876 .218750 50.5605 .218750  c
h
56.0234 0.00000 m
56.0234 -.875000 l
57.7578 -.875000 l
57.7578 -7.71875 l
56.0234 -7.28125 l
56.0234 -8.17188 l
58.9141 -8.89062 l
58.9141 -.875000 l
60.6484 -.875000 l
60.6484 0.00000 l
56.0234 0.00000 l
h
f
[ 1.40382 0.00000 0.00000 1.40382 108.547 30.2136 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .694118 .494118 RG
newpath
110.980 .977617 m
110.980 12.8517 101.354 22.4776 89.4800 22.4776  c
77.6059 22.4776 67.9800 12.8517 67.9800 .977617  c
67.9800 -10.8965 77.6059 -20.5224 89.4800 -20.5224  c
101.354 -20.5224 110.980 -10.8965 110.980 .977617  c
h
f
0.00000 0.00000 0.00000 RG
newpath
111.980 .977617 m
111.980 13.4040 101.906 23.4776 89.4800 23.4776  c
77.0536 23.4776 66.9800 13.4040 66.9800 .977617  c
66.9800 -11.4488 77.0536 -21.5224 89.4800 -21.5224  c
101.906 -21.5224 111.980 -11.4488 111.980 .977617  c
h
110.980 .977617 m
110.980 12.8517 101.354 22.4776 89.4800 22.4776  c
77.6059 22.4776 67.9800 12.8517 67.9800 .977617  c
67.9800 -10.8965 77.6059 -20.5224 89.4800 -20.5224  c
101.354 -20.5224 110.980 -10.8965 110.980 .977617  c
h
f*
89.4800 .977617 translate
1.00000 1.00000 scale
-19.0986 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
13.1035 -3.31250 m
11.6191 -7.06250 l
10.1504 -3.31250 l
13.1035 -3.31250 l
h
14.4004 0.00000 m
13.4629 -2.40625 l
9.79102 -2.40625 l
8.83789 0.00000 l
7.68164 0.00000 l
11.1348 -8.67188 l
12.3535 -8.67188 l
15.7285 0.00000 l
14.4004 0.00000 l
h
18.6797 .218750 m
18.1068 .218750 17.3672 .0885417 16.4609 -.171875  c
16.4609 -1.39062 l
17.4297 -.932292 18.2318 -.703125 18.8672 -.703125  c
19.3464 -.703125 19.7344 -.830729 20.0312 -1.08594  c
20.3281 -1.34115 20.4766 -1.67708 20.4766 -2.09375  c
20.4766 -2.42708 20.3802 -2.71354 20.1875 -2.95312  c
19.9948 -3.19271 19.6380 -3.45833 19.1172 -3.75000  c
18.5234 -4.09375 l
17.7839 -4.52083 17.2630 -4.91927 16.9609 -5.28906  c
16.6589 -5.65885 16.5078 -6.09375 16.5078 -6.59375  c
16.5078 -7.26042 16.7500 -7.80990 17.2344 -8.24219  c
17.7188 -8.67448 18.3359 -8.89062 19.0859 -8.89062  c
19.7526 -8.89062 20.4557 -8.78125 21.1953 -8.56250  c
21.1953 -7.43750 l
20.2786 -7.79167 19.5964 -7.96875 19.1484 -7.96875  c
18.7214 -7.96875 18.3698 -7.85677 18.0938 -7.63281  c
17.8177 -7.40885 17.6797 -7.12500 17.6797 -6.78125  c
17.6797 -6.48958 17.7812 -6.23177 17.9844 -6.00781  c
18.1875 -5.78385 18.5599 -5.51562 19.1016 -5.20312  c
19.7109 -4.85938 l
20.4609 -4.43229 20.9844 -4.02865 21.2812 -3.64844  c
21.5781 -3.26823 21.7266 -2.81250 21.7266 -2.28125  c
21.7266 -1.53125 21.4505 -.927083 20.8984 -.468750  c
20.3464 -.0104167 19.6068 .218750 18.6797 .218750  c
h
27.8457 -3.31250 m
26.3613 -7.06250 l
24.8926 -3.31250 l
27.8457 -3.31250 l
h
29.1426 0.00000 m
28.2051 -2.40625 l
24.5332 -2.40625 l
23.5801 0.00000 l
22.4238 0.00000 l
25.8770 -8.67188 l
27.0957 -8.67188 l
30.4707 0.00000 l
29.1426 0.00000 l
h
32.4219 0.00000 m
32.4219 -.875000 l
34.1562 -.875000 l
34.1562 -7.71875 l
32.4219 -7.28125 l
32.4219 -8.17188 l
35.3125 -8.89062 l
35.3125 -.875000 l
37.0469 -.875000 l
37.0469 0.00000 l
32.4219 0.00000 l
h
f
[ 1.40382 0.00000 0.00000 1.40382 108.547 30.2136 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
