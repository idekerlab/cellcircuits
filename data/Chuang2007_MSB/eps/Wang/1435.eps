%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:46:58 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.37776 0.00000 0.00000 1.37776 82.2449 30.3085 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
20.0204 59.7933 m
9.72169 73.9682 l
S
newpath
54.6443 48.5433 m
65.2289 51.9824 l
S
newpath
73.4025 77.1382 m
46.4707 114.207 l
S
newpath
148.852 13.7267 m
104.831 45.7102 l
S
newpath
86.6277 92.5647 m
86.6277 81.4353 l
S
newpath
8.04290 209.975 m
26.2926 153.808 l
S
newpath
54.6443 125.457 m
69.6456 120.583 l
S
newpath
20.0204 114.207 m
9.72169 100.032 l
S
.501961 1.00000 .466667 RG
newpath
54.7455 41.5904 m
54.7455 53.4645 45.1196 63.0904 33.2455 63.0904  c
21.3714 63.0904 11.7455 53.4645 11.7455 41.5904  c
11.7455 29.7163 21.3714 20.0904 33.2455 20.0904  c
45.1196 20.0904 54.7455 29.7163 54.7455 41.5904  c
h
f
0.00000 0.00000 0.00000 RG
newpath
55.7455 41.5904 m
55.7455 54.0168 45.6719 64.0904 33.2455 64.0904  c
20.8191 64.0904 10.7455 54.0168 10.7455 41.5904  c
10.7455 29.1640 20.8191 19.0904 33.2455 19.0904  c
45.6719 19.0904 55.7455 29.1640 55.7455 41.5904  c
h
54.7455 41.5904 m
54.7455 53.4645 45.1196 63.0904 33.2455 63.0904  c
21.3714 63.0904 11.7455 53.4645 11.7455 41.5904  c
11.7455 29.7163 21.3714 20.0904 33.2455 20.0904  c
45.1196 20.0904 54.7455 29.7163 54.7455 41.5904  c
h
f*
33.2455 41.5904 translate
1.00000 1.00000 scale
-14.3936 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
11.1152 .218750 m
10.5423 .218750 9.80273 .0885417 8.89648 -.171875  c
8.89648 -1.39062 l
9.86523 -.932292 10.6673 -.703125 11.3027 -.703125  c
11.7819 -.703125 12.1699 -.830729 12.4668 -1.08594  c
12.7637 -1.34115 12.9121 -1.67708 12.9121 -2.09375  c
12.9121 -2.42708 12.8158 -2.71354 12.6230 -2.95312  c
12.4303 -3.19271 12.0736 -3.45833 11.5527 -3.75000  c
10.9590 -4.09375 l
10.2194 -4.52083 9.69857 -4.91927 9.39648 -5.28906  c
9.09440 -5.65885 8.94336 -6.09375 8.94336 -6.59375  c
8.94336 -7.26042 9.18555 -7.80990 9.66992 -8.24219  c
10.1543 -8.67448 10.7715 -8.89062 11.5215 -8.89062  c
12.1882 -8.89062 12.8913 -8.78125 13.6309 -8.56250  c
13.6309 -7.43750 l
12.7142 -7.79167 12.0319 -7.96875 11.5840 -7.96875  c
11.1569 -7.96875 10.8053 -7.85677 10.5293 -7.63281  c
10.2533 -7.40885 10.1152 -7.12500 10.1152 -6.78125  c
10.1152 -6.48958 10.2168 -6.23177 10.4199 -6.00781  c
10.6230 -5.78385 10.9954 -5.51562 11.5371 -5.20312  c
12.1465 -4.85938 l
12.8965 -4.43229 13.4199 -4.02865 13.7168 -3.64844  c
14.0137 -3.26823 14.1621 -2.81250 14.1621 -2.28125  c
14.1621 -1.53125 13.8861 -.927083 13.3340 -.468750  c
12.7819 -.0104167 12.0423 .218750 11.1152 .218750  c
h
15.8906 0.00000 m
15.8906 -8.67188 l
20.7344 -8.67188 l
20.7344 -7.75000 l
17.1094 -7.75000 l
17.1094 -4.84375 l
20.1562 -4.84375 l
20.1562 -3.93750 l
17.1094 -3.93750 l
17.1094 0.00000 l
15.8906 0.00000 l
h
23.0117 0.00000 m
23.0117 -.875000 l
24.7461 -.875000 l
24.7461 -7.71875 l
23.0117 -7.28125 l
23.0117 -8.17188 l
25.9023 -8.89062 l
25.9023 -.875000 l
27.6367 -.875000 l
27.6367 0.00000 l
23.0117 0.00000 l
h
f
[ 1.37776 0.00000 0.00000 1.37776 82.2449 30.3085 ] defaultmatrix matrix concatmatrix setmatrix
.447059 1.00000 .431373 RG
newpath
108.128 58.9353 m
108.128 70.8094 98.5018 80.4353 86.6277 80.4353  c
74.7536 80.4353 65.1277 70.8094 65.1277 58.9353  c
65.1277 47.0612 74.7536 37.4353 86.6277 37.4353  c
98.5018 37.4353 108.128 47.0612 108.128 58.9353  c
h
f
0.00000 0.00000 0.00000 RG
newpath
109.128 58.9353 m
109.128 71.3617 99.0541 81.4353 86.6277 81.4353  c
74.2013 81.4353 64.1277 71.3617 64.1277 58.9353  c
64.1277 46.5089 74.2013 36.4353 86.6277 36.4353  c
99.0541 36.4353 109.128 46.5089 109.128 58.9353  c
h
108.128 58.9353 m
108.128 70.8094 98.5018 80.4353 86.6277 80.4353  c
74.7536 80.4353 65.1277 70.8094 65.1277 58.9353  c
65.1277 47.0612 74.7536 37.4353 86.6277 37.4353  c
98.5018 37.4353 108.128 47.0612 108.128 58.9353  c
h
f*
86.6277 58.9353 translate
1.00000 1.00000 scale
-14.9443 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
13.1035 -3.31250 m
11.6191 -7.06250 l
10.1504 -3.31250 l
13.1035 -3.31250 l
h
14.4004 0.00000 m
13.4629 -2.40625 l
9.79102 -2.40625 l
8.83789 0.00000 l
7.68164 0.00000 l
11.1348 -8.67188 l
12.3535 -8.67188 l
15.7285 0.00000 l
14.4004 0.00000 l
h
16.9922 0.00000 m
16.9922 -8.67188 l
21.8359 -8.67188 l
21.8359 -7.75000 l
18.2109 -7.75000 l
18.2109 -4.84375 l
21.2578 -4.84375 l
21.2578 -3.93750 l
18.2109 -3.93750 l
18.2109 0.00000 l
16.9922 0.00000 l
h
24.1133 0.00000 m
24.1133 -.875000 l
25.8477 -.875000 l
25.8477 -7.71875 l
24.1133 -7.28125 l
24.1133 -8.17188 l
27.0039 -8.89062 l
27.0039 -.875000 l
28.7383 -.875000 l
28.7383 0.00000 l
24.1133 0.00000 l
h
f
[ 1.37776 0.00000 0.00000 1.37776 82.2449 30.3085 ] defaultmatrix matrix concatmatrix setmatrix
.270588 .807843 .337255 RG
newpath
23.6108 226.957 m
2.52506 248.043 l
-18.5607 226.957 l
2.52506 205.872 l
h
f
0.00000 0.00000 0.00000 RG
newpath
2.52506 204.457 m
25.0251 226.957 l
2.52506 249.457 l
-19.9749 226.957 l
h
23.6108 226.957 m
2.52506 248.043 l
-18.5607 226.957 l
2.52506 205.872 l
h
f*
2.52506 226.957 translate
1.00000 1.00000 scale
-22.8926 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
9.65039 0.00000 m
9.65039 -7.75000 l
6.57227 -7.75000 l
6.57227 -8.67188 l
13.9473 -8.67188 l
13.9473 -7.75000 l
10.8691 -7.75000 l
10.8691 0.00000 l
9.65039 0.00000 l
h
19.5664 -3.31250 m
18.0820 -7.06250 l
16.6133 -3.31250 l
19.5664 -3.31250 l
h
20.8633 0.00000 m
19.9258 -2.40625 l
16.2539 -2.40625 l
15.3008 0.00000 l
14.1445 0.00000 l
17.5977 -8.67188 l
18.8164 -8.67188 l
22.1914 0.00000 l
20.8633 0.00000 l
h
25.5176 0.00000 m
25.5176 -7.75000 l
22.4395 -7.75000 l
22.4395 -8.67188 l
29.8145 -8.67188 l
29.8145 -7.75000 l
26.7363 -7.75000 l
26.7363 0.00000 l
25.5176 0.00000 l
h
31.3711 .0312500 m
31.3711 -1.00000 l
31.9544 -.770833 32.5013 -.656250 33.0117 -.656250  c
33.5846 -.656250 34.0352 -.822917 34.3633 -1.15625  c
34.6914 -1.48958 34.8555 -1.95312 34.8555 -2.54688  c
34.8555 -3.84896 33.9596 -4.50000 32.1680 -4.50000  c
31.9596 -4.50000 31.7461 -4.48438 31.5273 -4.45312  c
31.5273 -8.67188 l
35.9180 -8.67188 l
35.9180 -7.67188 l
32.5430 -7.67188 l
32.5430 -5.37500 l
33.6576 -5.37500 34.5273 -5.11979 35.1523 -4.60938  c
35.7773 -4.09896 36.0898 -3.39062 36.0898 -2.48438  c
36.0898 -1.64062 35.8034 -.979167 35.2305 -.500000  c
34.6576 -.0208333 33.8711 .218750 32.8711 .218750  c
32.4336 .218750 31.9336 .156250 31.3711 .0312500  c
h
43.0215 -3.31250 m
41.5371 -7.06250 l
40.0684 -3.31250 l
43.0215 -3.31250 l
h
44.3184 0.00000 m
43.3809 -2.40625 l
39.7090 -2.40625 l
38.7559 0.00000 l
37.5996 0.00000 l
41.0527 -8.67188 l
42.2715 -8.67188 l
45.6465 0.00000 l
44.3184 0.00000 l
h
f
[ 1.37776 0.00000 0.00000 1.37776 82.2449 30.3085 ] defaultmatrix matrix concatmatrix setmatrix
.501961 1.00000 .466667 RG
newpath
188.555 .501522 m
188.555 12.3756 178.929 22.0015 167.055 22.0015  c
155.181 22.0015 145.555 12.3756 145.555 .501522  c
145.555 -11.3726 155.181 -20.9985 167.055 -20.9985  c
178.929 -20.9985 188.555 -11.3726 188.555 .501522  c
h
f
0.00000 0.00000 0.00000 RG
newpath
189.555 .501522 m
189.555 12.9279 179.481 23.0015 167.055 23.0015  c
154.629 23.0015 144.555 12.9279 144.555 .501522  c
144.555 -11.9249 154.629 -21.9985 167.055 -21.9985  c
179.481 -21.9985 189.555 -11.9249 189.555 .501522  c
h
188.555 .501522 m
188.555 12.3756 178.929 22.0015 167.055 22.0015  c
155.181 22.0015 145.555 12.3756 145.555 .501522  c
145.555 -11.3726 155.181 -20.9985 167.055 -20.9985  c
178.929 -20.9985 188.555 -11.3726 188.555 .501522  c
h
f*
167.055 .501522 translate
1.00000 1.00000 scale
-15.7207 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.37500 -8.67188 l
4.23958 -8.67188 4.90365 -8.50781 5.36719 -8.17969  c
5.83073 -7.85156 6.06250 -7.38021 6.06250 -6.76562  c
6.06250 -5.71354 5.46875 -4.96354 4.28125 -4.51562  c
5.69792 -4.08854 6.40625 -3.30729 6.40625 -2.17188  c
6.40625 -1.46354 6.17188 -.924479 5.70312 -.554688  c
5.23438 -.184896 4.55729 0.00000 3.67188 0.00000  c
1.12500 0.00000 l
h
2.34375 -.921875 m
2.59375 -.921875 l
3.48958 -.921875 4.07292 -.979167 4.34375 -1.09375  c
4.85417 -1.30208 5.10938 -1.69792 5.10938 -2.28125  c
5.10938 -2.80208 4.87760 -3.23177 4.41406 -3.57031  c
3.95052 -3.90885 3.37500 -4.07812 2.68750 -4.07812  c
2.34375 -4.07812 l
2.34375 -.921875 l
h
2.34375 -4.85938 m
2.73438 -4.85938 l
3.39062 -4.85938 3.89844 -5.00000 4.25781 -5.28125  c
4.61719 -5.56250 4.79688 -5.95833 4.79688 -6.46875  c
4.79688 -7.32292 4.13542 -7.75000 2.81250 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.85938 l
h
12.4180 -3.31250 m
10.9336 -7.06250 l
9.46484 -3.31250 l
12.4180 -3.31250 l
h
13.7148 0.00000 m
12.7773 -2.40625 l
9.10547 -2.40625 l
8.15234 0.00000 l
6.99609 0.00000 l
10.4492 -8.67188 l
11.6680 -8.67188 l
15.0430 0.00000 l
13.7148 0.00000 l
h
22.8223 -.234375 m
21.7702 .0677083 20.8535 .218750 20.0723 .218750  c
18.6868 .218750 17.6270 -.174479 16.8926 -.960938  c
16.1582 -1.74740 15.7910 -2.87500 15.7910 -4.34375  c
15.7910 -5.78125 16.1634 -6.89844 16.9082 -7.69531  c
17.6530 -8.49219 18.7025 -8.89062 20.0566 -8.89062  c
20.9316 -8.89062 21.8483 -8.76042 22.8066 -8.50000  c
22.8066 -7.35938 l
21.6087 -7.76562 20.6921 -7.96875 20.0566 -7.96875  c
19.1191 -7.96875 18.3926 -7.65104 17.8770 -7.01562  c
17.3613 -6.38021 17.1035 -5.48438 17.1035 -4.32812  c
17.1035 -3.18229 17.3796 -2.29167 17.9316 -1.65625  c
18.4837 -1.02083 19.2598 -.703125 20.2598 -.703125  c
20.6764 -.703125 21.1191 -.776042 21.5879 -.921875  c
21.5879 -3.75000 l
22.8223 -3.75000 l
22.8223 -.234375 l
h
25.6660 0.00000 m
25.6660 -.875000 l
27.4004 -.875000 l
27.4004 -7.71875 l
25.6660 -7.28125 l
25.6660 -8.17188 l
28.5566 -8.89062 l
28.5566 -.875000 l
30.2910 -.875000 l
30.2910 0.00000 l
25.6660 0.00000 l
h
f
[ 1.37776 0.00000 0.00000 1.37776 82.2449 30.3085 ] defaultmatrix matrix concatmatrix setmatrix
.286275 .831373 .345098 RG
newpath
107.714 115.065 m
86.6277 136.150 l
65.5419 115.065 l
86.6277 93.9789 l
h
f
0.00000 0.00000 0.00000 RG
newpath
86.6277 92.5647 m
109.128 115.065 l
86.6277 137.565 l
64.1277 115.065 l
h
107.714 115.065 m
86.6277 136.150 l
65.5419 115.065 l
86.6277 93.9789 l
h
f*
86.6277 115.065 translate
1.00000 1.00000 scale
-23.0068 4.42090 translate
newpath
7.64062 -.234375 m
6.58854 .0677083 5.67188 .218750 4.89062 .218750  c
3.50521 .218750 2.44531 -.174479 1.71094 -.960938  c
.976562 -1.74740 .609375 -2.87500 .609375 -4.34375  c
.609375 -5.78125 .981771 -6.89844 1.72656 -7.69531  c
2.47135 -8.49219 3.52083 -8.89062 4.87500 -8.89062  c
5.75000 -8.89062 6.66667 -8.76042 7.62500 -8.50000  c
7.62500 -7.35938 l
6.42708 -7.76562 5.51042 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.48438 1.92188 -4.32812  c
1.92188 -3.18229 2.19792 -2.29167 2.75000 -1.65625  c
3.30208 -1.02083 4.07812 -.703125 5.07812 -.703125  c
5.49479 -.703125 5.93750 -.776042 6.40625 -.921875  c
6.40625 -3.75000 l
7.64062 -3.75000 l
7.64062 -.234375 l
h
9.79688 0.00000 m
9.79688 -8.67188 l
11.0000 -8.67188 l
15.3594 -1.96875 l
15.3594 -8.67188 l
16.4219 -8.67188 l
16.4219 0.00000 l
15.2188 0.00000 l
10.8438 -6.70312 l
10.8438 0.00000 l
9.79688 0.00000 l
h
18.6621 0.00000 m
18.6621 -8.67188 l
20.9121 -8.67188 l
21.7767 -8.67188 22.4408 -8.50781 22.9043 -8.17969  c
23.3678 -7.85156 23.5996 -7.38021 23.5996 -6.76562  c
23.5996 -5.71354 23.0059 -4.96354 21.8184 -4.51562  c
23.2350 -4.08854 23.9434 -3.30729 23.9434 -2.17188  c
23.9434 -1.46354 23.7090 -.924479 23.2402 -.554688  c
22.7715 -.184896 22.0944 0.00000 21.2090 0.00000  c
18.6621 0.00000 l
h
19.8809 -.921875 m
20.1309 -.921875 l
21.0267 -.921875 21.6100 -.979167 21.8809 -1.09375  c
22.3913 -1.30208 22.6465 -1.69792 22.6465 -2.28125  c
22.6465 -2.80208 22.4147 -3.23177 21.9512 -3.57031  c
21.4876 -3.90885 20.9121 -4.07812 20.2246 -4.07812  c
19.8809 -4.07812 l
19.8809 -.921875 l
h
19.8809 -4.85938 m
20.2715 -4.85938 l
20.9277 -4.85938 21.4355 -5.00000 21.7949 -5.28125  c
22.1543 -5.56250 22.3340 -5.95833 22.3340 -6.46875  c
22.3340 -7.32292 21.6725 -7.75000 20.3496 -7.75000  c
19.8809 -7.75000 l
19.8809 -4.85938 l
h
25.4395 0.00000 m
25.4395 -1.01562 l
25.7728 -1.79688 26.4499 -2.65104 27.4707 -3.57812  c
28.1426 -4.17188 l
28.9863 -4.94271 29.4082 -5.70833 29.4082 -6.46875  c
29.4082 -6.94792 29.2650 -7.32552 28.9785 -7.60156  c
28.6921 -7.87760 28.2936 -8.01562 27.7832 -8.01562  c
27.1790 -8.01562 26.4707 -7.78646 25.6582 -7.32812  c
25.6582 -8.34375 l
26.4290 -8.70833 27.1895 -8.89062 27.9395 -8.89062  c
28.7520 -8.89062 29.4056 -8.67188 29.9004 -8.23438  c
30.3952 -7.79688 30.6426 -7.21875 30.6426 -6.50000  c
30.6426 -5.97917 30.5176 -5.51562 30.2676 -5.10938  c
30.0176 -4.70312 29.5540 -4.21354 28.8770 -3.64062  c
28.4395 -3.26562 l
27.5124 -2.48438 26.9759 -1.73438 26.8301 -1.01562  c
30.5957 -1.01562 l
30.5957 0.00000 l
25.4395 0.00000 l
h
33.1523 0.00000 m
33.1523 -8.67188 l
34.3711 -8.67188 l
34.3711 -.921875 l
38.2773 -.921875 l
38.2773 0.00000 l
33.1523 0.00000 l
h
40.2383 0.00000 m
40.2383 -.875000 l
41.9727 -.875000 l
41.9727 -7.71875 l
40.2383 -7.28125 l
40.2383 -8.17188 l
43.1289 -8.89062 l
43.1289 -.875000 l
44.8633 -.875000 l
44.8633 0.00000 l
40.2383 0.00000 l
h
f
[ 1.37776 0.00000 0.00000 1.37776 82.2449 30.3085 ] defaultmatrix matrix concatmatrix setmatrix
.698039 1.00000 .600000 RG
newpath
54.7455 132.410 m
54.7455 144.284 45.1196 153.910 33.2455 153.910  c
21.3714 153.910 11.7455 144.284 11.7455 132.410  c
11.7455 120.535 21.3714 110.910 33.2455 110.910  c
45.1196 110.910 54.7455 120.535 54.7455 132.410  c
h
f
0.00000 0.00000 0.00000 RG
newpath
55.7455 132.410 m
55.7455 144.836 45.6719 154.910 33.2455 154.910  c
20.8191 154.910 10.7455 144.836 10.7455 132.410  c
10.7455 119.983 20.8191 109.910 33.2455 109.910  c
45.6719 109.910 55.7455 119.983 55.7455 132.410  c
h
54.7455 132.410 m
54.7455 144.284 45.1196 153.910 33.2455 153.910  c
21.3714 153.910 11.7455 144.284 11.7455 132.410  c
11.7455 120.535 21.3714 110.910 33.2455 110.910  c
45.1196 110.910 54.7455 120.535 54.7455 132.410  c
h
f*
33.2455 132.410 translate
1.00000 1.00000 scale
-19.3799 4.42090 translate
newpath
7.64062 -.234375 m
6.58854 .0677083 5.67188 .218750 4.89062 .218750  c
3.50521 .218750 2.44531 -.174479 1.71094 -.960938  c
.976562 -1.74740 .609375 -2.87500 .609375 -4.34375  c
.609375 -5.78125 .981771 -6.89844 1.72656 -7.69531  c
2.47135 -8.49219 3.52083 -8.89062 4.87500 -8.89062  c
5.75000 -8.89062 6.66667 -8.76042 7.62500 -8.50000  c
7.62500 -7.35938 l
6.42708 -7.76562 5.51042 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.48438 1.92188 -4.32812  c
1.92188 -3.18229 2.19792 -2.29167 2.75000 -1.65625  c
3.30208 -1.02083 4.07812 -.703125 5.07812 -.703125  c
5.49479 -.703125 5.93750 -.776042 6.40625 -.921875  c
6.40625 -3.75000 l
7.64062 -3.75000 l
7.64062 -.234375 l
h
9.79688 0.00000 m
9.79688 -8.67188 l
12.4219 -8.67188 l
13.2552 -8.67188 13.8932 -8.48958 14.3359 -8.12500  c
14.7786 -7.76042 15.0000 -7.22396 15.0000 -6.51562  c
15.0000 -5.35938 14.4167 -4.54167 13.2500 -4.06250  c
16.1406 0.00000 l
14.6250 0.00000 l
12.1562 -3.67188 l
11.0156 -3.67188 l
11.0156 0.00000 l
9.79688 0.00000 l
h
11.0156 -4.59375 m
11.4062 -4.59375 l
12.9583 -4.59375 13.7344 -5.19792 13.7344 -6.40625  c
13.7344 -7.30208 13.0833 -7.75000 11.7812 -7.75000  c
11.0156 -7.75000 l
11.0156 -4.59375 l
h
21.7754 -3.31250 m
20.2910 -7.06250 l
18.8223 -3.31250 l
21.7754 -3.31250 l
h
23.0723 0.00000 m
22.1348 -2.40625 l
18.4629 -2.40625 l
17.5098 0.00000 l
16.3535 0.00000 l
19.8066 -8.67188 l
21.0254 -8.67188 l
24.4004 0.00000 l
23.0723 0.00000 l
h
25.6641 0.00000 m
25.6641 -8.67188 l
28.0234 -8.67188 l
29.0651 -8.67188 29.8151 -8.49479 30.2734 -8.14062  c
30.7318 -7.78646 30.9609 -7.20833 30.9609 -6.40625  c
30.9609 -5.47917 30.6484 -4.75521 30.0234 -4.23438  c
29.3984 -3.71354 28.5339 -3.45312 27.4297 -3.45312  c
26.8828 -3.45312 l
26.8828 0.00000 l
25.6641 0.00000 l
h
26.8828 -4.37500 m
27.3828 -4.37500 l
28.1120 -4.37500 28.6745 -4.54427 29.0703 -4.88281  c
29.4661 -5.22135 29.6641 -5.69792 29.6641 -6.31250  c
29.6641 -6.82292 29.5078 -7.19010 29.1953 -7.41406  c
28.8828 -7.63802 28.3620 -7.75000 27.6328 -7.75000  c
26.8828 -7.75000 l
26.8828 -4.37500 l
h
32.1719 0.00000 m
32.1719 -1.01562 l
32.5052 -1.79688 33.1823 -2.65104 34.2031 -3.57812  c
34.8750 -4.17188 l
35.7188 -4.94271 36.1406 -5.70833 36.1406 -6.46875  c
36.1406 -6.94792 35.9974 -7.32552 35.7109 -7.60156  c
35.4245 -7.87760 35.0260 -8.01562 34.5156 -8.01562  c
33.9115 -8.01562 33.2031 -7.78646 32.3906 -7.32812  c
32.3906 -8.34375 l
33.1615 -8.70833 33.9219 -8.89062 34.6719 -8.89062  c
35.4844 -8.89062 36.1380 -8.67188 36.6328 -8.23438  c
37.1276 -7.79688 37.3750 -7.21875 37.3750 -6.50000  c
37.3750 -5.97917 37.2500 -5.51562 37.0000 -5.10938  c
36.7500 -4.70312 36.2865 -4.21354 35.6094 -3.64062  c
35.1719 -3.26562 l
34.2448 -2.48438 33.7083 -1.73438 33.5625 -1.01562  c
37.3281 -1.01562 l
37.3281 0.00000 l
32.1719 0.00000 l
h
f
[ 1.37776 0.00000 0.00000 1.37776 82.2449 30.3085 ] defaultmatrix matrix concatmatrix setmatrix
.345098 .913725 .372549 RG
newpath
21.3393 87.0000 m
.253517 108.086 l
-20.8323 87.0000 l
.253517 65.9142 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.253517 64.5000 m
22.7535 87.0000 l
.253517 109.500 l
-22.2465 87.0000 l
h
21.3393 87.0000 m
.253517 108.086 l
-20.8323 87.0000 l
.253517 65.9142 l
h
f*
.253517 87.0000 translate
1.00000 1.00000 scale
-9.43945 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.28125 -8.67188 l
2.28125 -4.40625 l
5.78125 -8.67188 l
7.01562 -8.67188 l
3.62500 -4.53125 l
7.62500 0.00000 l
6.06250 0.00000 l
2.28125 -4.39062 l
2.28125 0.00000 l
1.12500 0.00000 l
h
8.94336 0.00000 m
8.94336 -8.67188 l
10.1777 -8.67188 l
10.1777 0.00000 l
8.94336 0.00000 l
h
14.4785 0.00000 m
14.4785 -7.75000 l
11.4004 -7.75000 l
11.4004 -8.67188 l
18.7754 -8.67188 l
18.7754 -7.75000 l
15.6973 -7.75000 l
15.6973 0.00000 l
14.4785 0.00000 l
h
f
[ 1.37776 0.00000 0.00000 1.37776 82.2449 30.3085 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
