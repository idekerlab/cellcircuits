%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:46:15 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.15416 0.00000 0.00000 1.15416 75.9501 25.9547 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
22.6290 49.0917 m
59.5242 54.5724 l
S
newpath
172.429 83.2285 m
197.387 119.026 l
S
newpath
143.597 67.0613 m
104.036 61.1845 l
S
newpath
90.6078 187.108 m
154.579 83.8636 l
S
newpath
76.3641 217.864 m
61.5497 262.192 l
S
newpath
197.926 13.9044 m
171.794 56.0791 l
S
.815686 1.00000 .678431 RG
newpath
21.8732 45.7856 m
21.8732 57.6597 12.2474 67.2856 .373243 67.2856  c
-11.5009 67.2856 -21.1268 57.6597 -21.1268 45.7856  c
-21.1268 33.9115 -11.5009 24.2856 .373243 24.2856  c
12.2474 24.2856 21.8732 33.9115 21.8732 45.7856  c
h
f
0.00000 0.00000 0.00000 RG
newpath
22.8732 45.7856 m
22.8732 58.2120 12.7997 68.2856 .373243 68.2856  c
-12.0532 68.2856 -22.1268 58.2120 -22.1268 45.7856  c
-22.1268 33.3592 -12.0532 23.2856 .373243 23.2856  c
12.7997 23.2856 22.8732 33.3592 22.8732 45.7856  c
h
21.8732 45.7856 m
21.8732 57.6597 12.2474 67.2856 .373243 67.2856  c
-11.5009 67.2856 -21.1268 57.6597 -21.1268 45.7856  c
-21.1268 33.9115 -11.5009 24.2856 .373243 24.2856  c
12.2474 24.2856 21.8732 33.9115 21.8732 45.7856  c
h
f*
.373243 45.7856 translate
1.00000 1.00000 scale
-27.0908 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.28125 -8.67188 l
2.28125 -4.40625 l
5.78125 -8.67188 l
7.01562 -8.67188 l
3.62500 -4.53125 l
7.62500 0.00000 l
6.06250 0.00000 l
2.28125 -4.39062 l
2.28125 0.00000 l
1.12500 0.00000 l
h
8.95898 0.00000 m
8.95898 -8.67188 l
10.1777 -8.67188 l
10.1777 -5.01562 l
14.3027 -5.01562 l
14.3027 -8.67188 l
15.5371 -8.67188 l
15.5371 0.00000 l
14.3027 0.00000 l
14.3027 -4.09375 l
10.1777 -4.09375 l
10.1777 0.00000 l
8.95898 0.00000 l
h
17.7773 0.00000 m
17.7773 -8.67188 l
20.6523 -8.67188 l
21.5169 -8.67188 22.2122 -8.57552 22.7383 -8.38281  c
23.2643 -8.19010 23.7201 -7.86458 24.1055 -7.40625  c
24.7201 -6.68750 25.0273 -5.73438 25.0273 -4.54688  c
25.0273 -3.09896 24.6471 -1.97917 23.8867 -1.18750  c
23.1263 -.395833 22.0534 0.00000 20.6680 0.00000  c
17.7773 0.00000 l
h
18.9961 -.921875 m
20.5742 -.921875 l
21.6992 -.921875 22.4961 -1.22396 22.9648 -1.82812  c
23.4753 -2.47396 23.7305 -3.33854 23.7305 -4.42188  c
23.7305 -5.44271 23.4805 -6.24479 22.9805 -6.82812  c
22.6784 -7.18229 22.3190 -7.42448 21.9023 -7.55469  c
21.4857 -7.68490 20.8555 -7.75000 20.0117 -7.75000  c
18.9961 -7.75000 l
18.9961 -.921875 l
h
26.7656 0.00000 m
26.7656 -8.67188 l
29.3906 -8.67188 l
30.2240 -8.67188 30.8620 -8.48958 31.3047 -8.12500  c
31.7474 -7.76042 31.9688 -7.22396 31.9688 -6.51562  c
31.9688 -5.35938 31.3854 -4.54167 30.2188 -4.06250  c
33.1094 0.00000 l
31.5938 0.00000 l
29.1250 -3.67188 l
27.9844 -3.67188 l
27.9844 0.00000 l
26.7656 0.00000 l
h
27.9844 -4.59375 m
28.3750 -4.59375 l
29.9271 -4.59375 30.7031 -5.19792 30.7031 -6.40625  c
30.7031 -7.30208 30.0521 -7.75000 28.7500 -7.75000  c
27.9844 -7.75000 l
27.9844 -4.59375 l
h
34.3535 0.00000 m
34.3535 -8.67188 l
36.6035 -8.67188 l
37.4681 -8.67188 38.1322 -8.50781 38.5957 -8.17969  c
39.0592 -7.85156 39.2910 -7.38021 39.2910 -6.76562  c
39.2910 -5.71354 38.6973 -4.96354 37.5098 -4.51562  c
38.9264 -4.08854 39.6348 -3.30729 39.6348 -2.17188  c
39.6348 -1.46354 39.4004 -.924479 38.9316 -.554688  c
38.4629 -.184896 37.7858 0.00000 36.9004 0.00000  c
34.3535 0.00000 l
h
35.5723 -.921875 m
35.8223 -.921875 l
36.7181 -.921875 37.3014 -.979167 37.5723 -1.09375  c
38.0827 -1.30208 38.3379 -1.69792 38.3379 -2.28125  c
38.3379 -2.80208 38.1061 -3.23177 37.6426 -3.57031  c
37.1790 -3.90885 36.6035 -4.07812 35.9160 -4.07812  c
35.5723 -4.07812 l
35.5723 -.921875 l
h
35.5723 -4.85938 m
35.9629 -4.85938 l
36.6191 -4.85938 37.1270 -5.00000 37.4863 -5.28125  c
37.8457 -5.56250 38.0254 -5.95833 38.0254 -6.46875  c
38.0254 -7.32292 37.3639 -7.75000 36.0410 -7.75000  c
35.5723 -7.75000 l
35.5723 -4.85938 l
h
42.9434 .218750 m
42.3704 .218750 41.6309 .0885417 40.7246 -.171875  c
40.7246 -1.39062 l
41.6934 -.932292 42.4954 -.703125 43.1309 -.703125  c
43.6100 -.703125 43.9980 -.830729 44.2949 -1.08594  c
44.5918 -1.34115 44.7402 -1.67708 44.7402 -2.09375  c
44.7402 -2.42708 44.6439 -2.71354 44.4512 -2.95312  c
44.2585 -3.19271 43.9017 -3.45833 43.3809 -3.75000  c
42.7871 -4.09375 l
42.0475 -4.52083 41.5267 -4.91927 41.2246 -5.28906  c
40.9225 -5.65885 40.7715 -6.09375 40.7715 -6.59375  c
40.7715 -7.26042 41.0137 -7.80990 41.4980 -8.24219  c
41.9824 -8.67448 42.5996 -8.89062 43.3496 -8.89062  c
44.0163 -8.89062 44.7194 -8.78125 45.4590 -8.56250  c
45.4590 -7.43750 l
44.5423 -7.79167 43.8600 -7.96875 43.4121 -7.96875  c
42.9850 -7.96875 42.6335 -7.85677 42.3574 -7.63281  c
42.0814 -7.40885 41.9434 -7.12500 41.9434 -6.78125  c
41.9434 -6.48958 42.0449 -6.23177 42.2480 -6.00781  c
42.4512 -5.78385 42.8236 -5.51562 43.3652 -5.20312  c
43.9746 -4.85938 l
44.7246 -4.43229 45.2480 -4.02865 45.5449 -3.64844  c
45.8418 -3.26823 45.9902 -2.81250 45.9902 -2.28125  c
45.9902 -1.53125 45.7142 -.927083 45.1621 -.468750  c
44.6100 -.0104167 43.8704 .218750 42.9434 .218750  c
h
47.8125 -.0625000 m
47.8125 -1.14062 l
48.6458 -.817708 49.2969 -.656250 49.7656 -.656250  c
50.3177 -.656250 50.7682 -.817708 51.1172 -1.14062  c
51.4661 -1.46354 51.6406 -1.88021 51.6406 -2.39062  c
51.6406 -3.60938 50.7865 -4.21875 49.0781 -4.21875  c
48.6094 -4.21875 l
48.6094 -5.00000 l
49.0156 -5.00000 l
50.6198 -5.00000 51.4219 -5.56250 51.4219 -6.68750  c
51.4219 -7.57292 50.8958 -8.01562 49.8438 -8.01562  c
49.2604 -8.01562 48.6250 -7.85417 47.9375 -7.53125  c
47.9375 -8.54688 l
48.6146 -8.77604 49.2760 -8.89062 49.9219 -8.89062  c
51.6927 -8.89062 52.5781 -8.21875 52.5781 -6.87500  c
52.5781 -5.85417 51.9740 -5.13021 50.7656 -4.70312  c
52.1719 -4.38021 52.8750 -3.61458 52.8750 -2.40625  c
52.8750 -1.58333 52.6042 -.940104 52.0625 -.476562  c
51.5208 -.0130208 50.7812 .218750 49.8438 .218750  c
49.3021 .218750 48.6250 .125000 47.8125 -.0625000  c
h
f
[ 1.15416 0.00000 0.00000 1.15416 75.9501 25.9547 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .423529 .223529 RG
newpath
231.755 137.483 m
231.755 149.357 222.129 158.983 210.255 158.983  c
198.381 158.983 188.755 149.357 188.755 137.483  c
188.755 125.609 198.381 115.983 210.255 115.983  c
222.129 115.983 231.755 125.609 231.755 137.483  c
h
f
0.00000 0.00000 0.00000 RG
newpath
232.755 137.483 m
232.755 149.909 222.682 159.983 210.255 159.983  c
197.829 159.983 187.755 149.909 187.755 137.483  c
187.755 125.057 197.829 114.983 210.255 114.983  c
222.682 114.983 232.755 125.057 232.755 137.483  c
h
231.755 137.483 m
231.755 149.357 222.129 158.983 210.255 158.983  c
198.381 158.983 188.755 149.357 188.755 137.483  c
188.755 125.609 198.381 115.983 210.255 115.983  c
222.129 115.983 231.755 125.609 231.755 137.483  c
h
f*
210.255 137.483 translate
1.00000 1.00000 scale
-27.2725 4.42090 translate
newpath
7.64062 -.234375 m
6.58854 .0677083 5.67188 .218750 4.89062 .218750  c
3.50521 .218750 2.44531 -.174479 1.71094 -.960938  c
.976562 -1.74740 .609375 -2.87500 .609375 -4.34375  c
.609375 -5.78125 .981771 -6.89844 1.72656 -7.69531  c
2.47135 -8.49219 3.52083 -8.89062 4.87500 -8.89062  c
5.75000 -8.89062 6.66667 -8.76042 7.62500 -8.50000  c
7.62500 -7.35938 l
6.42708 -7.76562 5.51042 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.48438 1.92188 -4.32812  c
1.92188 -3.18229 2.19792 -2.29167 2.75000 -1.65625  c
3.30208 -1.02083 4.07812 -.703125 5.07812 -.703125  c
5.49479 -.703125 5.93750 -.776042 6.40625 -.921875  c
6.40625 -3.75000 l
7.64062 -3.75000 l
7.64062 -.234375 l
h
13.2812 .218750 m
12.0833 .218750 11.1172 -.197917 10.3828 -1.03125  c
9.64844 -1.86458 9.28125 -2.96875 9.28125 -4.34375  c
9.28125 -5.71875 9.64844 -6.82031 10.3828 -7.64844  c
11.1172 -8.47656 12.1042 -8.89062 13.3438 -8.89062  c
14.5625 -8.89062 15.5417 -8.47917 16.2812 -7.65625  c
17.0208 -6.83333 17.3906 -5.73438 17.3906 -4.35938  c
17.3906 -2.95312 17.0208 -1.83854 16.2812 -1.01562  c
15.5417 -.192708 14.5417 .218750 13.2812 .218750  c
h
13.2969 -.703125 m
14.1823 -.703125 14.8672 -1.02344 15.3516 -1.66406  c
15.8359 -2.30469 16.0781 -3.20312 16.0781 -4.35938  c
16.0781 -5.49479 15.8359 -6.38021 15.3516 -7.01562  c
14.8672 -7.65104 14.1979 -7.96875 13.3438 -7.96875  c
12.4792 -7.96875 11.8047 -7.64844 11.3203 -7.00781  c
10.8359 -6.36719 10.5938 -5.47917 10.5938 -4.34375  c
10.5938 -3.21875 10.8333 -2.33073 11.3125 -1.67969  c
11.7917 -1.02865 12.4531 -.703125 13.2969 -.703125  c
h
19.1191 0.00000 m
19.1191 -8.67188 l
21.7441 -8.67188 l
22.5775 -8.67188 23.2155 -8.48958 23.6582 -8.12500  c
24.1009 -7.76042 24.3223 -7.22396 24.3223 -6.51562  c
24.3223 -5.35938 23.7389 -4.54167 22.5723 -4.06250  c
25.4629 0.00000 l
23.9473 0.00000 l
21.4785 -3.67188 l
20.3379 -3.67188 l
20.3379 0.00000 l
19.1191 0.00000 l
h
20.3379 -4.59375 m
20.7285 -4.59375 l
22.2806 -4.59375 23.0566 -5.19792 23.0566 -6.40625  c
23.0566 -7.30208 22.4056 -7.75000 21.1035 -7.75000  c
20.3379 -7.75000 l
20.3379 -4.59375 l
h
31.0977 -3.31250 m
29.6133 -7.06250 l
28.1445 -3.31250 l
31.0977 -3.31250 l
h
32.3945 0.00000 m
31.4570 -2.40625 l
27.7852 -2.40625 l
26.8320 0.00000 l
25.6758 0.00000 l
29.1289 -8.67188 l
30.3477 -8.67188 l
33.7227 0.00000 l
32.3945 0.00000 l
h
36.6738 .218750 m
36.1009 .218750 35.3613 .0885417 34.4551 -.171875  c
34.4551 -1.39062 l
35.4238 -.932292 36.2259 -.703125 36.8613 -.703125  c
37.3405 -.703125 37.7285 -.830729 38.0254 -1.08594  c
38.3223 -1.34115 38.4707 -1.67708 38.4707 -2.09375  c
38.4707 -2.42708 38.3743 -2.71354 38.1816 -2.95312  c
37.9889 -3.19271 37.6322 -3.45833 37.1113 -3.75000  c
36.5176 -4.09375 l
35.7780 -4.52083 35.2572 -4.91927 34.9551 -5.28906  c
34.6530 -5.65885 34.5020 -6.09375 34.5020 -6.59375  c
34.5020 -7.26042 34.7441 -7.80990 35.2285 -8.24219  c
35.7129 -8.67448 36.3301 -8.89062 37.0801 -8.89062  c
37.7467 -8.89062 38.4499 -8.78125 39.1895 -8.56250  c
39.1895 -7.43750 l
38.2728 -7.79167 37.5905 -7.96875 37.1426 -7.96875  c
36.7155 -7.96875 36.3639 -7.85677 36.0879 -7.63281  c
35.8118 -7.40885 35.6738 -7.12500 35.6738 -6.78125  c
35.6738 -6.48958 35.7754 -6.23177 35.9785 -6.00781  c
36.1816 -5.78385 36.5540 -5.51562 37.0957 -5.20312  c
37.7051 -4.85938 l
38.4551 -4.43229 38.9785 -4.02865 39.2754 -3.64844  c
39.5723 -3.26823 39.7207 -2.81250 39.7207 -2.28125  c
39.7207 -1.53125 39.4447 -.927083 38.8926 -.468750  c
38.3405 -.0104167 37.6009 .218750 36.6738 .218750  c
h
41.4492 0.00000 m
41.4492 -8.67188 l
43.8086 -8.67188 l
44.8503 -8.67188 45.6003 -8.49479 46.0586 -8.14062  c
46.5169 -7.78646 46.7461 -7.20833 46.7461 -6.40625  c
46.7461 -5.47917 46.4336 -4.75521 45.8086 -4.23438  c
45.1836 -3.71354 44.3190 -3.45312 43.2148 -3.45312  c
42.6680 -3.45312 l
42.6680 0.00000 l
41.4492 0.00000 l
h
42.6680 -4.37500 m
43.1680 -4.37500 l
43.8971 -4.37500 44.4596 -4.54427 44.8555 -4.88281  c
45.2513 -5.22135 45.4492 -5.69792 45.4492 -6.31250  c
45.4492 -6.82292 45.2930 -7.19010 44.9805 -7.41406  c
44.6680 -7.63802 44.1471 -7.75000 43.4180 -7.75000  c
42.6680 -7.75000 l
42.6680 -4.37500 l
h
47.9570 0.00000 m
47.9570 -1.01562 l
48.2904 -1.79688 48.9674 -2.65104 49.9883 -3.57812  c
50.6602 -4.17188 l
51.5039 -4.94271 51.9258 -5.70833 51.9258 -6.46875  c
51.9258 -6.94792 51.7826 -7.32552 51.4961 -7.60156  c
51.2096 -7.87760 50.8112 -8.01562 50.3008 -8.01562  c
49.6966 -8.01562 48.9883 -7.78646 48.1758 -7.32812  c
48.1758 -8.34375 l
48.9466 -8.70833 49.7070 -8.89062 50.4570 -8.89062  c
51.2695 -8.89062 51.9232 -8.67188 52.4180 -8.23438  c
52.9128 -7.79688 53.1602 -7.21875 53.1602 -6.50000  c
53.1602 -5.97917 53.0352 -5.51562 52.7852 -5.10938  c
52.5352 -4.70312 52.0716 -4.21354 51.3945 -3.64062  c
50.9570 -3.26562 l
50.0299 -2.48438 49.4935 -1.73438 49.3477 -1.01562  c
53.1133 -1.01562 l
53.1133 0.00000 l
47.9570 0.00000 l
h
f
[ 1.15416 0.00000 0.00000 1.15416 75.9501 25.9547 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
103.280 57.8785 m
103.280 69.7526 93.6541 79.3785 81.7800 79.3785  c
69.9058 79.3785 60.2800 69.7526 60.2800 57.8785  c
60.2800 46.0043 69.9058 36.3785 81.7800 36.3785  c
93.6541 36.3785 103.280 46.0043 103.280 57.8785  c
h
f
0.00000 0.00000 0.00000 RG
newpath
104.280 57.8785 m
104.280 70.3049 94.2064 80.3785 81.7800 80.3785  c
69.3535 80.3785 59.2800 70.3049 59.2800 57.8785  c
59.2800 45.4521 69.3535 35.3785 81.7800 35.3785  c
94.2064 35.3785 104.280 45.4521 104.280 57.8785  c
h
103.280 57.8785 m
103.280 69.7526 93.6541 79.3785 81.7800 79.3785  c
69.9058 79.3785 60.2800 69.7526 60.2800 57.8785  c
60.2800 46.0043 69.9058 36.3785 81.7800 36.3785  c
93.6541 36.3785 103.280 46.0043 103.280 57.8785  c
h
f*
81.7800 57.8785 translate
1.00000 1.00000 scale
-24.5361 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
13.1309 .218750 m
11.7871 .218750 10.7480 -.177083 10.0137 -.968750  c
9.27930 -1.76042 8.91211 -2.88021 8.91211 -4.32812  c
8.91211 -5.77604 9.28711 -6.89844 10.0371 -7.69531  c
10.7871 -8.49219 11.8392 -8.89062 13.1934 -8.89062  c
13.9746 -8.89062 14.8861 -8.76562 15.9277 -8.51562  c
15.9277 -7.35938 l
14.7402 -7.76562 13.8236 -7.96875 13.1777 -7.96875  c
12.2402 -7.96875 11.5137 -7.65104 10.9980 -7.01562  c
10.4824 -6.38021 10.2246 -5.47917 10.2246 -4.31250  c
10.2246 -3.20833 10.4980 -2.33854 11.0449 -1.70312  c
11.5918 -1.06771 12.3444 -.750000 13.3027 -.750000  c
14.1257 -.750000 15.0059 -1.00000 15.9434 -1.50000  c
15.9434 -.453125 l
15.0892 -.00520833 14.1517 .218750 13.1309 .218750  c
h
17.7305 0.00000 m
17.7305 -8.67188 l
20.6055 -8.67188 l
21.4701 -8.67188 22.1654 -8.57552 22.6914 -8.38281  c
23.2174 -8.19010 23.6732 -7.86458 24.0586 -7.40625  c
24.6732 -6.68750 24.9805 -5.73438 24.9805 -4.54688  c
24.9805 -3.09896 24.6003 -1.97917 23.8398 -1.18750  c
23.0794 -.395833 22.0065 0.00000 20.6211 0.00000  c
17.7305 0.00000 l
h
18.9492 -.921875 m
20.5273 -.921875 l
21.6523 -.921875 22.4492 -1.22396 22.9180 -1.82812  c
23.4284 -2.47396 23.6836 -3.33854 23.6836 -4.42188  c
23.6836 -5.44271 23.4336 -6.24479 22.9336 -6.82812  c
22.6315 -7.18229 22.2721 -7.42448 21.8555 -7.55469  c
21.4388 -7.68490 20.8086 -7.75000 19.9648 -7.75000  c
18.9492 -7.75000 l
18.9492 -.921875 l
h
30.4219 .218750 m
29.0781 .218750 28.0391 -.177083 27.3047 -.968750  c
26.5703 -1.76042 26.2031 -2.88021 26.2031 -4.32812  c
26.2031 -5.77604 26.5781 -6.89844 27.3281 -7.69531  c
28.0781 -8.49219 29.1302 -8.89062 30.4844 -8.89062  c
31.2656 -8.89062 32.1771 -8.76562 33.2188 -8.51562  c
33.2188 -7.35938 l
32.0312 -7.76562 31.1146 -7.96875 30.4688 -7.96875  c
29.5312 -7.96875 28.8047 -7.65104 28.2891 -7.01562  c
27.7734 -6.38021 27.5156 -5.47917 27.5156 -4.31250  c
27.5156 -3.20833 27.7891 -2.33854 28.3359 -1.70312  c
28.8828 -1.06771 29.6354 -.750000 30.5938 -.750000  c
31.4167 -.750000 32.2969 -1.00000 33.2344 -1.50000  c
33.2344 -.453125 l
32.3802 -.00520833 31.4427 .218750 30.4219 .218750  c
h
35.1152 -.0625000 m
35.1152 -1.14062 l
35.9486 -.817708 36.5996 -.656250 37.0684 -.656250  c
37.6204 -.656250 38.0710 -.817708 38.4199 -1.14062  c
38.7689 -1.46354 38.9434 -1.88021 38.9434 -2.39062  c
38.9434 -3.60938 38.0892 -4.21875 36.3809 -4.21875  c
35.9121 -4.21875 l
35.9121 -5.00000 l
36.3184 -5.00000 l
37.9225 -5.00000 38.7246 -5.56250 38.7246 -6.68750  c
38.7246 -7.57292 38.1986 -8.01562 37.1465 -8.01562  c
36.5632 -8.01562 35.9277 -7.85417 35.2402 -7.53125  c
35.2402 -8.54688 l
35.9173 -8.77604 36.5788 -8.89062 37.2246 -8.89062  c
38.9954 -8.89062 39.8809 -8.21875 39.8809 -6.87500  c
39.8809 -5.85417 39.2767 -5.13021 38.0684 -4.70312  c
39.4746 -4.38021 40.1777 -3.61458 40.1777 -2.40625  c
40.1777 -1.58333 39.9069 -.940104 39.3652 -.476562  c
38.8236 -.0130208 38.0840 .218750 37.1465 .218750  c
36.6048 .218750 35.9277 .125000 35.1152 -.0625000  c
h
42.7031 -.0625000 m
42.7031 -1.14062 l
43.5365 -.817708 44.1875 -.656250 44.6562 -.656250  c
45.2083 -.656250 45.6589 -.817708 46.0078 -1.14062  c
46.3568 -1.46354 46.5312 -1.88021 46.5312 -2.39062  c
46.5312 -3.60938 45.6771 -4.21875 43.9688 -4.21875  c
43.5000 -4.21875 l
43.5000 -5.00000 l
43.9062 -5.00000 l
45.5104 -5.00000 46.3125 -5.56250 46.3125 -6.68750  c
46.3125 -7.57292 45.7865 -8.01562 44.7344 -8.01562  c
44.1510 -8.01562 43.5156 -7.85417 42.8281 -7.53125  c
42.8281 -8.54688 l
43.5052 -8.77604 44.1667 -8.89062 44.8125 -8.89062  c
46.5833 -8.89062 47.4688 -8.21875 47.4688 -6.87500  c
47.4688 -5.85417 46.8646 -5.13021 45.6562 -4.70312  c
47.0625 -4.38021 47.7656 -3.61458 47.7656 -2.40625  c
47.7656 -1.58333 47.4948 -.940104 46.9531 -.476562  c
46.4115 -.0130208 45.6719 .218750 44.7344 .218750  c
44.1927 .218750 43.5156 .125000 42.7031 -.0625000  c
h
f
[ 1.15416 0.00000 0.00000 1.15416 75.9501 25.9547 ] defaultmatrix matrix concatmatrix setmatrix
.992157 .380392 .200000 RG
newpath
103.086 201.000 m
82.0000 222.086 l
60.9142 201.000 l
82.0000 179.914 l
h
f
0.00000 0.00000 0.00000 RG
newpath
82.0000 178.500 m
104.500 201.000 l
82.0000 223.500 l
59.5000 201.000 l
h
103.086 201.000 m
82.0000 222.086 l
60.9142 201.000 l
82.0000 179.914 l
h
f*
82.0000 201.000 translate
1.00000 1.00000 scale
-16.3828 4.42090 translate
newpath
1.04688 -8.67188 m
2.28125 -8.67188 l
2.28125 -3.20312 l
2.28125 -2.32812 2.44271 -1.69271 2.76562 -1.29688  c
3.08854 -.901042 3.59896 -.703125 4.29688 -.703125  c
4.98438 -.703125 5.47135 -.890625 5.75781 -1.26562  c
6.04427 -1.64062 6.18750 -2.27083 6.18750 -3.15625  c
6.18750 -8.67188 l
7.26562 -8.67188 l
7.26562 -3.17188 l
7.26562 -1.99479 7.02344 -1.13542 6.53906 -.593750  c
6.05469 -.0520833 5.28125 .218750 4.21875 .218750  c
3.13542 .218750 2.33594 -.0598958 1.82031 -.617188  c
1.30469 -1.17448 1.04688 -2.04167 1.04688 -3.21875  c
1.04688 -8.67188 l
h
9.43945 0.00000 m
9.43945 -8.67188 l
11.6895 -8.67188 l
12.5540 -8.67188 13.2181 -8.50781 13.6816 -8.17969  c
14.1452 -7.85156 14.3770 -7.38021 14.3770 -6.76562  c
14.3770 -5.71354 13.7832 -4.96354 12.5957 -4.51562  c
14.0124 -4.08854 14.7207 -3.30729 14.7207 -2.17188  c
14.7207 -1.46354 14.4863 -.924479 14.0176 -.554688  c
13.5488 -.184896 12.8717 0.00000 11.9863 0.00000  c
9.43945 0.00000 l
h
10.6582 -.921875 m
10.9082 -.921875 l
11.8040 -.921875 12.3874 -.979167 12.6582 -1.09375  c
13.1686 -1.30208 13.4238 -1.69792 13.4238 -2.28125  c
13.4238 -2.80208 13.1921 -3.23177 12.7285 -3.57031  c
12.2650 -3.90885 11.6895 -4.07812 11.0020 -4.07812  c
10.6582 -4.07812 l
10.6582 -.921875 l
h
10.6582 -4.85938 m
11.0488 -4.85938 l
11.7051 -4.85938 12.2129 -5.00000 12.5723 -5.28125  c
12.9316 -5.56250 13.1113 -5.95833 13.1113 -6.46875  c
13.1113 -7.32292 12.4499 -7.75000 11.1270 -7.75000  c
10.6582 -7.75000 l
10.6582 -4.85938 l
h
16.3418 0.00000 m
16.3418 -8.67188 l
21.1855 -8.67188 l
21.1855 -7.75000 l
17.5605 -7.75000 l
17.5605 -4.96875 l
20.5918 -4.96875 l
20.5918 -4.06250 l
17.5605 -4.06250 l
17.5605 -.921875 l
21.4355 -.921875 l
21.4355 0.00000 l
16.3418 0.00000 l
h
22.7207 0.00000 m
22.7207 -1.01562 l
23.0540 -1.79688 23.7311 -2.65104 24.7520 -3.57812  c
25.4238 -4.17188 l
26.2676 -4.94271 26.6895 -5.70833 26.6895 -6.46875  c
26.6895 -6.94792 26.5462 -7.32552 26.2598 -7.60156  c
25.9733 -7.87760 25.5749 -8.01562 25.0645 -8.01562  c
24.4603 -8.01562 23.7520 -7.78646 22.9395 -7.32812  c
22.9395 -8.34375 l
23.7103 -8.70833 24.4707 -8.89062 25.2207 -8.89062  c
26.0332 -8.89062 26.6868 -8.67188 27.1816 -8.23438  c
27.6764 -7.79688 27.9238 -7.21875 27.9238 -6.50000  c
27.9238 -5.97917 27.7988 -5.51562 27.5488 -5.10938  c
27.2988 -4.70312 26.8353 -4.21354 26.1582 -3.64062  c
25.7207 -3.26562 l
24.7936 -2.48438 24.2572 -1.73438 24.1113 -1.01562  c
27.8770 -1.01562 l
27.8770 0.00000 l
22.7207 0.00000 l
h
30.4180 0.00000 m
30.4180 -8.67188 l
31.6523 -8.67188 l
31.6523 0.00000 l
30.4180 0.00000 l
h
f
[ 1.15416 0.00000 0.00000 1.15416 75.9501 25.9547 ] defaultmatrix matrix concatmatrix setmatrix
.949020 .298039 .200000 RG
newpath
184.272 69.9713 m
163.187 91.0571 l
142.101 69.9713 l
163.187 48.8856 l
h
f
0.00000 0.00000 0.00000 RG
newpath
163.187 47.4713 m
185.687 69.9713 l
163.187 92.4713 l
140.687 69.9713 l
h
184.272 69.9713 m
163.187 91.0571 l
142.101 69.9713 l
163.187 48.8856 l
h
f*
163.187 69.9713 translate
1.00000 1.00000 scale
-23.4668 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
13.1035 -3.31250 m
11.6191 -7.06250 l
10.1504 -3.31250 l
13.1035 -3.31250 l
h
14.4004 0.00000 m
13.4629 -2.40625 l
9.79102 -2.40625 l
8.83789 0.00000 l
7.68164 0.00000 l
11.1348 -8.67188 l
12.3535 -8.67188 l
15.7285 0.00000 l
14.4004 0.00000 l
h
16.9922 0.00000 m
16.9922 -8.67188 l
19.8672 -8.67188 l
20.7318 -8.67188 21.4271 -8.57552 21.9531 -8.38281  c
22.4792 -8.19010 22.9349 -7.86458 23.3203 -7.40625  c
23.9349 -6.68750 24.2422 -5.73438 24.2422 -4.54688  c
24.2422 -3.09896 23.8620 -1.97917 23.1016 -1.18750  c
22.3411 -.395833 21.2682 0.00000 19.8828 0.00000  c
16.9922 0.00000 l
h
18.2109 -.921875 m
19.7891 -.921875 l
20.9141 -.921875 21.7109 -1.22396 22.1797 -1.82812  c
22.6901 -2.47396 22.9453 -3.33854 22.9453 -4.42188  c
22.9453 -5.44271 22.6953 -6.24479 22.1953 -6.82812  c
21.8932 -7.18229 21.5339 -7.42448 21.1172 -7.55469  c
20.7005 -7.68490 20.0703 -7.75000 19.2266 -7.75000  c
18.2109 -7.75000 l
18.2109 -.921875 l
h
26.3086 .0312500 m
26.3086 -1.00000 l
26.8919 -.770833 27.4388 -.656250 27.9492 -.656250  c
28.5221 -.656250 28.9727 -.822917 29.3008 -1.15625  c
29.6289 -1.48958 29.7930 -1.95312 29.7930 -2.54688  c
29.7930 -3.84896 28.8971 -4.50000 27.1055 -4.50000  c
26.8971 -4.50000 26.6836 -4.48438 26.4648 -4.45312  c
26.4648 -8.67188 l
30.8555 -8.67188 l
30.8555 -7.67188 l
27.4805 -7.67188 l
27.4805 -5.37500 l
28.5951 -5.37500 29.4648 -5.11979 30.0898 -4.60938  c
30.7148 -4.09896 31.0273 -3.39062 31.0273 -2.48438  c
31.0273 -1.64062 30.7409 -.979167 30.1680 -.500000  c
29.5951 -.0208333 28.8086 .218750 27.8086 .218750  c
27.3711 .218750 26.8711 .156250 26.3086 .0312500  c
h
36.9590 0.00000 m
36.9590 -2.45312 l
33.0527 -2.45312 l
33.0527 -3.32812 l
36.9590 -8.67188 l
38.0527 -8.67188 l
38.0527 -3.40625 l
39.2090 -3.40625 l
39.2090 -2.45312 l
38.0527 -2.45312 l
38.0527 0.00000 l
36.9590 0.00000 l
h
34.1934 -3.40625 m
37.0371 -3.40625 l
37.0371 -7.25000 l
34.1934 -3.40625 l
h
41.1562 0.00000 m
41.1562 -8.67188 l
43.4062 -8.67188 l
44.2708 -8.67188 44.9349 -8.50781 45.3984 -8.17969  c
45.8620 -7.85156 46.0938 -7.38021 46.0938 -6.76562  c
46.0938 -5.71354 45.5000 -4.96354 44.3125 -4.51562  c
45.7292 -4.08854 46.4375 -3.30729 46.4375 -2.17188  c
46.4375 -1.46354 46.2031 -.924479 45.7344 -.554688  c
45.2656 -.184896 44.5885 0.00000 43.7031 0.00000  c
41.1562 0.00000 l
h
42.3750 -.921875 m
42.6250 -.921875 l
43.5208 -.921875 44.1042 -.979167 44.3750 -1.09375  c
44.8854 -1.30208 45.1406 -1.69792 45.1406 -2.28125  c
45.1406 -2.80208 44.9089 -3.23177 44.4453 -3.57031  c
43.9818 -3.90885 43.4062 -4.07812 42.7188 -4.07812  c
42.3750 -4.07812 l
42.3750 -.921875 l
h
42.3750 -4.85938 m
42.7656 -4.85938 l
43.4219 -4.85938 43.9297 -5.00000 44.2891 -5.28125  c
44.6484 -5.56250 44.8281 -5.95833 44.8281 -6.46875  c
44.8281 -7.32292 44.1667 -7.75000 42.8438 -7.75000  c
42.3750 -7.75000 l
42.3750 -4.85938 l
h
f
[ 1.15416 0.00000 0.00000 1.15416 75.9501 25.9547 ] defaultmatrix matrix concatmatrix setmatrix
.925490 .254902 .200000 RG
newpath
227.620 .0121346 m
206.534 21.0979 l
185.448 .0121346 l
206.534 -21.0737 l
h
f
0.00000 0.00000 0.00000 RG
newpath
206.534 -22.4879 m
229.034 .0121346 l
206.534 22.5121 l
184.034 .0121346 l
h
227.620 .0121346 m
206.534 21.0979 l
185.448 .0121346 l
206.534 -21.0737 l
h
f*
206.534 .0121346 translate
1.00000 1.00000 scale
-19.7373 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
4.00000 -8.67188 l
4.86458 -8.67188 5.55990 -8.57552 6.08594 -8.38281  c
6.61198 -8.19010 7.06771 -7.86458 7.45312 -7.40625  c
8.06771 -6.68750 8.37500 -5.73438 8.37500 -4.54688  c
8.37500 -3.09896 7.99479 -1.97917 7.23438 -1.18750  c
6.47396 -.395833 5.40104 0.00000 4.01562 0.00000  c
1.12500 0.00000 l
h
2.34375 -.921875 m
3.92188 -.921875 l
5.04688 -.921875 5.84375 -1.22396 6.31250 -1.82812  c
6.82292 -2.47396 7.07812 -3.33854 7.07812 -4.42188  c
7.07812 -5.44271 6.82812 -6.24479 6.32812 -6.82812  c
6.02604 -7.18229 5.66667 -7.42448 5.25000 -7.55469  c
4.83333 -7.68490 4.20312 -7.75000 3.35938 -7.75000  c
2.34375 -7.75000 l
2.34375 -.921875 l
h
11.9883 0.00000 m
11.9883 -3.62500 l
9.08203 -8.67188 l
10.4883 -8.67188 l
12.7383 -4.76562 l
15.1758 -8.67188 l
16.3164 -8.67188 l
13.2070 -3.64062 l
13.2070 0.00000 l
11.9883 0.00000 l
h
17.5898 0.00000 m
17.5898 -8.67188 l
20.2148 -8.67188 l
21.0482 -8.67188 21.6862 -8.48958 22.1289 -8.12500  c
22.5716 -7.76042 22.7930 -7.22396 22.7930 -6.51562  c
22.7930 -5.35938 22.2096 -4.54167 21.0430 -4.06250  c
23.9336 0.00000 l
22.4180 0.00000 l
19.9492 -3.67188 l
18.8086 -3.67188 l
18.8086 0.00000 l
17.5898 0.00000 l
h
18.8086 -4.59375 m
19.1992 -4.59375 l
20.7513 -4.59375 21.5273 -5.19792 21.5273 -6.40625  c
21.5273 -7.30208 20.8763 -7.75000 19.5742 -7.75000  c
18.8086 -7.75000 l
18.8086 -4.59375 l
h
25.1777 0.00000 m
25.1777 -8.67188 l
26.3340 -8.67188 l
26.3340 -4.40625 l
29.8340 -8.67188 l
31.0684 -8.67188 l
27.6777 -4.53125 l
31.6777 0.00000 l
30.1152 0.00000 l
26.3340 -4.39062 l
26.3340 0.00000 l
25.1777 0.00000 l
h
32.8867 0.00000 m
32.8867 -1.01562 l
33.2201 -1.79688 33.8971 -2.65104 34.9180 -3.57812  c
35.5898 -4.17188 l
36.4336 -4.94271 36.8555 -5.70833 36.8555 -6.46875  c
36.8555 -6.94792 36.7122 -7.32552 36.4258 -7.60156  c
36.1393 -7.87760 35.7409 -8.01562 35.2305 -8.01562  c
34.6263 -8.01562 33.9180 -7.78646 33.1055 -7.32812  c
33.1055 -8.34375 l
33.8763 -8.70833 34.6367 -8.89062 35.3867 -8.89062  c
36.1992 -8.89062 36.8529 -8.67188 37.3477 -8.23438  c
37.8424 -7.79688 38.0898 -7.21875 38.0898 -6.50000  c
38.0898 -5.97917 37.9648 -5.51562 37.7148 -5.10938  c
37.4648 -4.70312 37.0013 -4.21354 36.3242 -3.64062  c
35.8867 -3.26562 l
34.9596 -2.48438 34.4232 -1.73438 34.2773 -1.01562  c
38.0430 -1.01562 l
38.0430 0.00000 l
32.8867 0.00000 l
h
f
[ 1.15416 0.00000 0.00000 1.15416 75.9501 25.9547 ] defaultmatrix matrix concatmatrix setmatrix
.992157 .384314 .200000 RG
newpath
76.9996 279.056 m
55.9138 300.142 l
34.8280 279.056 l
55.9138 257.971 l
h
f
0.00000 0.00000 0.00000 RG
newpath
55.9138 256.556 m
78.4138 279.056 l
55.9138 301.556 l
33.4138 279.056 l
h
76.9996 279.056 m
55.9138 300.142 l
34.8280 279.056 l
55.9138 257.971 l
h
f*
55.9138 279.056 translate
1.00000 1.00000 scale
-18.8379 4.42090 translate
newpath
3.18750 0.00000 m
3.18750 -7.75000 l
.109375 -7.75000 l
.109375 -8.67188 l
7.48438 -8.67188 l
7.48438 -7.75000 l
4.40625 -7.75000 l
4.40625 0.00000 l
3.18750 0.00000 l
h
10.7754 0.00000 m
10.7754 -7.75000 l
7.69727 -7.75000 l
7.69727 -8.67188 l
15.0723 -8.67188 l
15.0723 -7.75000 l
11.9941 -7.75000 l
11.9941 0.00000 l
10.7754 0.00000 l
h
16.3008 0.00000 m
16.3008 -8.67188 l
18.9258 -8.67188 l
19.7591 -8.67188 20.3971 -8.48958 20.8398 -8.12500  c
21.2826 -7.76042 21.5039 -7.22396 21.5039 -6.51562  c
21.5039 -5.35938 20.9206 -4.54167 19.7539 -4.06250  c
22.6445 0.00000 l
21.1289 0.00000 l
18.6602 -3.67188 l
17.5195 -3.67188 l
17.5195 0.00000 l
16.3008 0.00000 l
h
17.5195 -4.59375 m
17.9102 -4.59375 l
19.4622 -4.59375 20.2383 -5.19792 20.2383 -6.40625  c
20.2383 -7.30208 19.5872 -7.75000 18.2852 -7.75000  c
17.5195 -7.75000 l
17.5195 -4.59375 l
h
28.2793 -3.31250 m
26.7949 -7.06250 l
25.3262 -3.31250 l
28.2793 -3.31250 l
h
29.5762 0.00000 m
28.6387 -2.40625 l
24.9668 -2.40625 l
24.0137 0.00000 l
22.8574 0.00000 l
26.3105 -8.67188 l
27.5293 -8.67188 l
30.9043 0.00000 l
29.5762 0.00000 l
h
32.1680 0.00000 m
32.1680 -8.67188 l
34.5273 -8.67188 l
35.5690 -8.67188 36.3190 -8.49479 36.7773 -8.14062  c
37.2357 -7.78646 37.4648 -7.20833 37.4648 -6.40625  c
37.4648 -5.47917 37.1523 -4.75521 36.5273 -4.23438  c
35.9023 -3.71354 35.0378 -3.45312 33.9336 -3.45312  c
33.3867 -3.45312 l
33.3867 0.00000 l
32.1680 0.00000 l
h
33.3867 -4.37500 m
33.8867 -4.37500 l
34.6159 -4.37500 35.1784 -4.54427 35.5742 -4.88281  c
35.9701 -5.22135 36.1680 -5.69792 36.1680 -6.31250  c
36.1680 -6.82292 36.0117 -7.19010 35.6992 -7.41406  c
35.3867 -7.63802 34.8659 -7.75000 34.1367 -7.75000  c
33.3867 -7.75000 l
33.3867 -4.37500 l
h
f
[ 1.15416 0.00000 0.00000 1.15416 75.9501 25.9547 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
