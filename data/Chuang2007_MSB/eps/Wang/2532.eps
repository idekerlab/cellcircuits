%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:46:07 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ .945136 0.00000 0.00000 .945136 129.201 20.6718 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
114.377 57.5499 m
127.226 17.6478 l
S
newpath
20.8605 163.200 m
61.7258 159.277 l
S
newpath
25.2546 334.319 m
38.1035 294.417 l
S
newpath
76.7743 174.325 m
51.8965 251.583 l
S
newpath
127.261 196.681 m
94.2555 167.805 l
S
newpath
100.584 100.384 m
87.7352 140.286 l
S
.317647 .878431 .360784 RG
newpath
153.792 .628231 m
132.706 21.7140 l
111.621 .628231 l
132.706 -20.4576 l
h
f
0.00000 0.00000 0.00000 RG
newpath
132.706 -21.8718 m
155.206 .628231 l
132.706 23.1282 l
110.206 .628231 l
h
153.792 .628231 m
132.706 21.7140 l
111.621 .628231 l
132.706 -20.4576 l
h
f*
132.706 .628231 translate
1.00000 1.00000 scale
-18.0264 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
10.1172 0.00000 m
6.85156 -8.67188 l
8.07031 -8.67188 l
10.7578 -1.57812 l
13.3516 -8.67188 l
14.4297 -8.67188 l
11.2734 0.00000 l
10.1172 0.00000 l
h
15.6035 0.00000 m
15.6035 -8.67188 l
18.2285 -8.67188 l
19.0618 -8.67188 19.6999 -8.48958 20.1426 -8.12500  c
20.5853 -7.76042 20.8066 -7.22396 20.8066 -6.51562  c
20.8066 -5.35938 20.2233 -4.54167 19.0566 -4.06250  c
21.9473 0.00000 l
20.4316 0.00000 l
17.9629 -3.67188 l
16.8223 -3.67188 l
16.8223 0.00000 l
15.6035 0.00000 l
h
16.8223 -4.59375 m
17.2129 -4.59375 l
18.7650 -4.59375 19.5410 -5.19792 19.5410 -6.40625  c
19.5410 -7.30208 18.8900 -7.75000 17.5879 -7.75000  c
16.8223 -7.75000 l
16.8223 -4.59375 l
h
23.1914 0.00000 m
23.1914 -8.67188 l
24.4102 -8.67188 l
24.4102 -.921875 l
28.3164 -.921875 l
28.3164 0.00000 l
23.1914 0.00000 l
h
29.4648 0.00000 m
29.4648 -1.01562 l
29.7982 -1.79688 30.4753 -2.65104 31.4961 -3.57812  c
32.1680 -4.17188 l
33.0117 -4.94271 33.4336 -5.70833 33.4336 -6.46875  c
33.4336 -6.94792 33.2904 -7.32552 33.0039 -7.60156  c
32.7174 -7.87760 32.3190 -8.01562 31.8086 -8.01562  c
31.2044 -8.01562 30.4961 -7.78646 29.6836 -7.32812  c
29.6836 -8.34375 l
30.4544 -8.70833 31.2148 -8.89062 31.9648 -8.89062  c
32.7773 -8.89062 33.4310 -8.67188 33.9258 -8.23438  c
34.4206 -7.79688 34.6680 -7.21875 34.6680 -6.50000  c
34.6680 -5.97917 34.5430 -5.51562 34.2930 -5.10938  c
34.0430 -4.70312 33.5794 -4.21354 32.9023 -3.64062  c
32.4648 -3.26562 l
31.5378 -2.48438 31.0013 -1.73438 30.8555 -1.01562  c
34.6211 -1.01562 l
34.6211 0.00000 l
29.4648 0.00000 l
h
f
[ .945136 0.00000 0.00000 .945136 129.201 20.6718 ] defaultmatrix matrix concatmatrix setmatrix
.368627 .952941 .384314 RG
newpath
21.4173 165.171 m
.331501 186.257 l
-20.7543 165.171 l
.331501 144.085 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.331501 142.671 m
22.8315 165.171 l
.331501 187.671 l
-22.1685 165.171 l
h
21.4173 165.171 m
.331501 186.257 l
-20.7543 165.171 l
.331501 144.085 l
h
f*
.331501 165.171 translate
1.00000 1.00000 scale
-19.6846 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
13.1309 .218750 m
11.7871 .218750 10.7480 -.177083 10.0137 -.968750  c
9.27930 -1.76042 8.91211 -2.88021 8.91211 -4.32812  c
8.91211 -5.77604 9.28711 -6.89844 10.0371 -7.69531  c
10.7871 -8.49219 11.8392 -8.89062 13.1934 -8.89062  c
13.9746 -8.89062 14.8861 -8.76562 15.9277 -8.51562  c
15.9277 -7.35938 l
14.7402 -7.76562 13.8236 -7.96875 13.1777 -7.96875  c
12.2402 -7.96875 11.5137 -7.65104 10.9980 -7.01562  c
10.4824 -6.38021 10.2246 -5.47917 10.2246 -4.31250  c
10.2246 -3.20833 10.4980 -2.33854 11.0449 -1.70312  c
11.5918 -1.06771 12.3444 -.750000 13.3027 -.750000  c
14.1257 -.750000 15.0059 -1.00000 15.9434 -1.50000  c
15.9434 -.453125 l
15.0892 -.00520833 14.1517 .218750 13.1309 .218750  c
h
17.7305 0.00000 m
17.7305 -8.67188 l
20.3555 -8.67188 l
21.1888 -8.67188 21.8268 -8.48958 22.2695 -8.12500  c
22.7122 -7.76042 22.9336 -7.22396 22.9336 -6.51562  c
22.9336 -5.35938 22.3503 -4.54167 21.1836 -4.06250  c
24.0742 0.00000 l
22.5586 0.00000 l
20.0898 -3.67188 l
18.9492 -3.67188 l
18.9492 0.00000 l
17.7305 0.00000 l
h
18.9492 -4.59375 m
19.3398 -4.59375 l
20.8919 -4.59375 21.6680 -5.19792 21.6680 -6.40625  c
21.6680 -7.30208 21.0169 -7.75000 19.7148 -7.75000  c
18.9492 -7.75000 l
18.9492 -4.59375 l
h
26.0059 0.00000 m
26.0059 -.875000 l
27.7402 -.875000 l
27.7402 -7.71875 l
26.0059 -7.28125 l
26.0059 -8.17188 l
28.8965 -8.89062 l
28.8965 -.875000 l
30.6309 -.875000 l
30.6309 0.00000 l
26.0059 0.00000 l
h
35.5469 .218750 m
34.6510 .218750 33.9271 -.203125 33.3750 -1.04688  c
32.8229 -1.89062 32.5469 -2.98958 32.5469 -4.34375  c
32.5469 -5.70833 32.8255 -6.80729 33.3828 -7.64062  c
33.9401 -8.47396 34.6719 -8.89062 35.5781 -8.89062  c
36.4844 -8.89062 37.2161 -8.47396 37.7734 -7.64062  c
38.3307 -6.80729 38.6094 -5.71354 38.6094 -4.35938  c
38.6094 -2.97396 38.3307 -1.86458 37.7734 -1.03125  c
37.2161 -.197917 36.4740 .218750 35.5469 .218750  c
h
35.5625 -.656250 m
36.7812 -.656250 37.3906 -1.89583 37.3906 -4.37500  c
37.3906 -6.80208 36.7865 -8.01562 35.5781 -8.01562  c
34.3802 -8.01562 33.7812 -6.79167 33.7812 -4.34375  c
33.7812 -1.88542 34.3750 -.656250 35.5625 -.656250  c
h
f
[ .945136 0.00000 0.00000 .945136 129.201 20.6718 ] defaultmatrix matrix concatmatrix setmatrix
.454902 1.00000 .439216 RG
newpath
66.5000 273.000 m
66.5000 284.874 56.8741 294.500 45.0000 294.500  c
33.1259 294.500 23.5000 284.874 23.5000 273.000  c
23.5000 261.126 33.1259 251.500 45.0000 251.500  c
56.8741 251.500 66.5000 261.126 66.5000 273.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
67.5000 273.000 m
67.5000 285.426 57.4264 295.500 45.0000 295.500  c
32.5736 295.500 22.5000 285.426 22.5000 273.000  c
22.5000 260.574 32.5736 250.500 45.0000 250.500  c
57.4264 250.500 67.5000 260.574 67.5000 273.000  c
h
66.5000 273.000 m
66.5000 284.874 56.8741 294.500 45.0000 294.500  c
33.1259 294.500 23.5000 284.874 23.5000 273.000  c
23.5000 261.126 33.1259 251.500 45.0000 251.500  c
56.8741 251.500 66.5000 261.126 66.5000 273.000  c
h
f*
45.0000 273.000 translate
1.00000 1.00000 scale
-22.8457 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
8.39648 0.00000 m
11.2715 -4.35938 l
8.53711 -8.67188 l
9.99023 -8.67188 l
12.0840 -5.40625 l
14.2715 -8.67188 l
15.4277 -8.67188 l
12.6621 -4.48438 l
15.5059 0.00000 l
14.0527 0.00000 l
11.8496 -3.43750 l
9.56836 0.00000 l
8.39648 0.00000 l
h
20.6426 .218750 m
19.2988 .218750 18.2598 -.177083 17.5254 -.968750  c
16.7910 -1.76042 16.4238 -2.88021 16.4238 -4.32812  c
16.4238 -5.77604 16.7988 -6.89844 17.5488 -7.69531  c
18.2988 -8.49219 19.3509 -8.89062 20.7051 -8.89062  c
21.4863 -8.89062 22.3978 -8.76562 23.4395 -8.51562  c
23.4395 -7.35938 l
22.2520 -7.76562 21.3353 -7.96875 20.6895 -7.96875  c
19.7520 -7.96875 19.0254 -7.65104 18.5098 -7.01562  c
17.9941 -6.38021 17.7363 -5.47917 17.7363 -4.31250  c
17.7363 -3.20833 18.0098 -2.33854 18.5566 -1.70312  c
19.1035 -1.06771 19.8561 -.750000 20.8145 -.750000  c
21.6374 -.750000 22.5176 -1.00000 23.4551 -1.50000  c
23.4551 -.453125 l
22.6009 -.00520833 21.6634 .218750 20.6426 .218750  c
h
25.2422 0.00000 m
25.2422 -8.67188 l
26.4609 -8.67188 l
26.4609 -.921875 l
30.3672 -.921875 l
30.3672 0.00000 l
25.2422 0.00000 l
h
32.3281 0.00000 m
32.3281 -.875000 l
34.0625 -.875000 l
34.0625 -7.71875 l
32.3281 -7.28125 l
32.3281 -8.17188 l
35.2188 -8.89062 l
35.2188 -.875000 l
36.9531 -.875000 l
36.9531 0.00000 l
32.3281 0.00000 l
h
39.1035 0.00000 m
39.1035 -1.01562 l
39.4368 -1.79688 40.1139 -2.65104 41.1348 -3.57812  c
41.8066 -4.17188 l
42.6504 -4.94271 43.0723 -5.70833 43.0723 -6.46875  c
43.0723 -6.94792 42.9290 -7.32552 42.6426 -7.60156  c
42.3561 -7.87760 41.9577 -8.01562 41.4473 -8.01562  c
40.8431 -8.01562 40.1348 -7.78646 39.3223 -7.32812  c
39.3223 -8.34375 l
40.0931 -8.70833 40.8535 -8.89062 41.6035 -8.89062  c
42.4160 -8.89062 43.0697 -8.67188 43.5645 -8.23438  c
44.0592 -7.79688 44.3066 -7.21875 44.3066 -6.50000  c
44.3066 -5.97917 44.1816 -5.51562 43.9316 -5.10938  c
43.6816 -4.70312 43.2181 -4.21354 42.5410 -3.64062  c
42.1035 -3.26562 l
41.1764 -2.48438 40.6400 -1.73438 40.4941 -1.01562  c
44.2598 -1.01562 l
44.2598 0.00000 l
39.1035 0.00000 l
h
f
[ .945136 0.00000 0.00000 .945136 129.201 20.6718 ] defaultmatrix matrix concatmatrix setmatrix
.419608 1.00000 .411765 RG
newpath
165.695 211.497 m
165.695 223.371 156.069 232.997 144.195 232.997  c
132.321 232.997 122.695 223.371 122.695 211.497  c
122.695 199.623 132.321 189.997 144.195 189.997  c
156.069 189.997 165.695 199.623 165.695 211.497  c
h
f
0.00000 0.00000 0.00000 RG
newpath
166.695 211.497 m
166.695 223.923 156.622 233.997 144.195 233.997  c
131.769 233.997 121.695 223.923 121.695 211.497  c
121.695 199.070 131.769 188.997 144.195 188.997  c
156.622 188.997 166.695 199.070 166.695 211.497  c
h
165.695 211.497 m
165.695 223.371 156.069 232.997 144.195 232.997  c
132.321 232.997 122.695 223.371 122.695 211.497  c
122.695 199.623 132.321 189.997 144.195 189.997  c
156.069 189.997 165.695 199.623 165.695 211.497  c
h
f*
144.195 211.497 translate
1.00000 1.00000 scale
-12.5156 4.42090 translate
newpath
1.10938 0.00000 m
1.10938 -8.67188 l
2.34375 -8.67188 l
2.34375 0.00000 l
1.10938 0.00000 l
h
4.58203 0.00000 m
4.58203 -8.67188 l
5.80078 -8.67188 l
5.80078 -.921875 l
9.70703 -.921875 l
9.70703 0.00000 l
4.58203 0.00000 l
h
11.6680 0.00000 m
11.6680 -.875000 l
13.4023 -.875000 l
13.4023 -7.71875 l
11.6680 -7.28125 l
11.6680 -8.17188 l
14.5586 -8.89062 l
14.5586 -.875000 l
16.2930 -.875000 l
16.2930 0.00000 l
11.6680 0.00000 l
h
18.8965 .0312500 m
18.8965 -1.00000 l
19.4798 -.770833 20.0267 -.656250 20.5371 -.656250  c
21.1100 -.656250 21.5605 -.822917 21.8887 -1.15625  c
22.2168 -1.48958 22.3809 -1.95312 22.3809 -2.54688  c
22.3809 -3.84896 21.4850 -4.50000 19.6934 -4.50000  c
19.4850 -4.50000 19.2715 -4.48438 19.0527 -4.45312  c
19.0527 -8.67188 l
23.4434 -8.67188 l
23.4434 -7.67188 l
20.0684 -7.67188 l
20.0684 -5.37500 l
21.1829 -5.37500 22.0527 -5.11979 22.6777 -4.60938  c
23.3027 -4.09896 23.6152 -3.39062 23.6152 -2.48438  c
23.6152 -1.64062 23.3288 -.979167 22.7559 -.500000  c
22.1829 -.0208333 21.3965 .218750 20.3965 .218750  c
19.9590 .218750 19.4590 .156250 18.8965 .0312500  c
h
f
[ .945136 0.00000 0.00000 .945136 129.201 20.6718 ] defaultmatrix matrix concatmatrix setmatrix
.227451 .745098 .313725 RG
newpath
103.341 157.306 m
82.2548 178.391 l
61.1690 157.306 l
82.2548 136.220 l
h
f
0.00000 0.00000 0.00000 RG
newpath
82.2548 134.806 m
104.755 157.306 l
82.2548 179.806 l
59.7548 157.306 l
h
103.341 157.306 m
82.2548 178.391 l
61.1690 157.306 l
82.2548 136.220 l
h
f*
82.2548 157.306 translate
1.00000 1.00000 scale
-15.2959 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
13.1309 .218750 m
11.7871 .218750 10.7480 -.177083 10.0137 -.968750  c
9.27930 -1.76042 8.91211 -2.88021 8.91211 -4.32812  c
8.91211 -5.77604 9.28711 -6.89844 10.0371 -7.69531  c
10.7871 -8.49219 11.8392 -8.89062 13.1934 -8.89062  c
13.9746 -8.89062 14.8861 -8.76562 15.9277 -8.51562  c
15.9277 -7.35938 l
14.7402 -7.76562 13.8236 -7.96875 13.1777 -7.96875  c
12.2402 -7.96875 11.5137 -7.65104 10.9980 -7.01562  c
10.4824 -6.38021 10.2246 -5.47917 10.2246 -4.31250  c
10.2246 -3.20833 10.4980 -2.33854 11.0449 -1.70312  c
11.5918 -1.06771 12.3444 -.750000 13.3027 -.750000  c
14.1257 -.750000 15.0059 -1.00000 15.9434 -1.50000  c
15.9434 -.453125 l
15.0892 -.00520833 14.1517 .218750 13.1309 .218750  c
h
17.7305 0.00000 m
17.7305 -8.67188 l
18.9492 -8.67188 l
18.9492 -.921875 l
22.8555 -.921875 l
22.8555 0.00000 l
17.7305 0.00000 l
h
24.0039 0.00000 m
24.0039 -1.01562 l
24.3372 -1.79688 25.0143 -2.65104 26.0352 -3.57812  c
26.7070 -4.17188 l
27.5508 -4.94271 27.9727 -5.70833 27.9727 -6.46875  c
27.9727 -6.94792 27.8294 -7.32552 27.5430 -7.60156  c
27.2565 -7.87760 26.8581 -8.01562 26.3477 -8.01562  c
25.7435 -8.01562 25.0352 -7.78646 24.2227 -7.32812  c
24.2227 -8.34375 l
24.9935 -8.70833 25.7539 -8.89062 26.5039 -8.89062  c
27.3164 -8.89062 27.9701 -8.67188 28.4648 -8.23438  c
28.9596 -7.79688 29.2070 -7.21875 29.2070 -6.50000  c
29.2070 -5.97917 29.0820 -5.51562 28.8320 -5.10938  c
28.5820 -4.70312 28.1185 -4.21354 27.4414 -3.64062  c
27.0039 -3.26562 l
26.0768 -2.48438 25.5404 -1.73438 25.3945 -1.01562  c
29.1602 -1.01562 l
29.1602 0.00000 l
24.0039 0.00000 l
h
f
[ .945136 0.00000 0.00000 .945136 129.201 20.6718 ] defaultmatrix matrix concatmatrix setmatrix
.313725 .866667 .356863 RG
newpath
40.8599 351.339 m
19.7742 372.424 l
-1.31163 351.339 l
19.7742 330.253 l
h
f
0.00000 0.00000 0.00000 RG
newpath
19.7742 328.839 m
42.2742 351.339 l
19.7742 373.839 l
-2.72584 351.339 l
h
40.8599 351.339 m
19.7742 372.424 l
-1.31163 351.339 l
19.7742 330.253 l
h
f*
19.7742 351.339 translate
1.00000 1.00000 scale
-15.9668 4.42090 translate
newpath
1.10938 0.00000 m
1.10938 -8.67188 l
2.34375 -8.67188 l
2.34375 0.00000 l
1.10938 0.00000 l
h
4.58203 0.00000 m
4.58203 -8.67188 l
5.80078 -8.67188 l
5.80078 -.921875 l
9.70703 -.921875 l
9.70703 0.00000 l
4.58203 0.00000 l
h
12.6211 -4.71875 m
11.7669 -5.31250 11.3398 -5.96875 11.3398 -6.68750  c
11.3398 -7.34375 11.5820 -7.87500 12.0664 -8.28125  c
12.5508 -8.68750 13.1784 -8.89062 13.9492 -8.89062  c
14.6576 -8.89062 15.2357 -8.71875 15.6836 -8.37500  c
16.1315 -8.03125 16.3555 -7.57812 16.3555 -7.01562  c
16.3555 -6.18229 15.8138 -5.41667 14.7305 -4.71875  c
16.0430 -4.08333 16.6992 -3.26042 16.6992 -2.25000  c
16.6992 -1.52083 16.4232 -.927083 15.8711 -.468750  c
15.3190 -.0104167 14.6107 .218750 13.7461 .218750  c
12.8919 .218750 12.2018 .00260417 11.6758 -.429688  c
11.1497 -.861979 10.8867 -1.43229 10.8867 -2.14062  c
10.8867 -3.17188 11.4648 -4.03125 12.6211 -4.71875  c
h
14.0898 -5.09375 m
14.8919 -5.62500 15.2930 -6.21354 15.2930 -6.85938  c
15.2930 -7.21354 15.1602 -7.49479 14.8945 -7.70312  c
14.6289 -7.91146 14.2721 -8.01562 13.8242 -8.01562  c
13.3971 -8.01562 13.0508 -7.91146 12.7852 -7.70312  c
12.5195 -7.49479 12.3867 -7.22396 12.3867 -6.89062  c
12.3867 -6.56771 12.5091 -6.27865 12.7539 -6.02344  c
12.9987 -5.76823 13.4440 -5.45833 14.0898 -5.09375  c
h
13.2461 -4.25000 m
12.7773 -3.89583 12.4596 -3.58333 12.2930 -3.31250  c
12.1263 -3.04167 12.0430 -2.70833 12.0430 -2.31250  c
12.0430 -1.82292 12.2044 -1.42448 12.5273 -1.11719  c
12.8503 -.809896 13.2721 -.656250 13.7930 -.656250  c
14.2930 -.656250 14.7044 -.786458 15.0273 -1.04688  c
15.3503 -1.30729 15.5117 -1.64583 15.5117 -2.06250  c
15.5117 -2.39583 15.4128 -2.67969 15.2148 -2.91406  c
15.0169 -3.14844 14.6315 -3.43229 14.0586 -3.76562  c
13.2461 -4.25000 l
h
18.5684 0.00000 m
18.5684 -8.67188 l
21.1934 -8.67188 l
22.0267 -8.67188 22.6647 -8.48958 23.1074 -8.12500  c
23.5501 -7.76042 23.7715 -7.22396 23.7715 -6.51562  c
23.7715 -5.35938 23.1882 -4.54167 22.0215 -4.06250  c
24.9121 0.00000 l
23.3965 0.00000 l
20.9277 -3.67188 l
19.7871 -3.67188 l
19.7871 0.00000 l
18.5684 0.00000 l
h
19.7871 -4.59375 m
20.1777 -4.59375 l
21.7298 -4.59375 22.5059 -5.19792 22.5059 -6.40625  c
22.5059 -7.30208 21.8548 -7.75000 20.5527 -7.75000  c
19.7871 -7.75000 l
19.7871 -4.59375 l
h
26.1562 0.00000 m
26.1562 -8.67188 l
28.4062 -8.67188 l
29.2708 -8.67188 29.9349 -8.50781 30.3984 -8.17969  c
30.8620 -7.85156 31.0938 -7.38021 31.0938 -6.76562  c
31.0938 -5.71354 30.5000 -4.96354 29.3125 -4.51562  c
30.7292 -4.08854 31.4375 -3.30729 31.4375 -2.17188  c
31.4375 -1.46354 31.2031 -.924479 30.7344 -.554688  c
30.2656 -.184896 29.5885 0.00000 28.7031 0.00000  c
26.1562 0.00000 l
h
27.3750 -.921875 m
27.6250 -.921875 l
28.5208 -.921875 29.1042 -.979167 29.3750 -1.09375  c
29.8854 -1.30208 30.1406 -1.69792 30.1406 -2.28125  c
30.1406 -2.80208 29.9089 -3.23177 29.4453 -3.57031  c
28.9818 -3.90885 28.4062 -4.07812 27.7188 -4.07812  c
27.3750 -4.07812 l
27.3750 -.921875 l
h
27.3750 -4.85938 m
27.7656 -4.85938 l
28.4219 -4.85938 28.9297 -5.00000 29.2891 -5.28125  c
29.6484 -5.56250 29.8281 -5.95833 29.8281 -6.46875  c
29.8281 -7.32292 29.1667 -7.75000 27.8438 -7.75000  c
27.3750 -7.75000 l
27.3750 -4.85938 l
h
f
[ .945136 0.00000 0.00000 .945136 129.201 20.6718 ] defaultmatrix matrix concatmatrix setmatrix
.517647 1.00000 .478431 RG
newpath
128.981 78.9669 m
128.981 90.8410 119.355 100.467 107.481 100.467  c
95.6065 100.467 85.9806 90.8410 85.9806 78.9669  c
85.9806 67.0928 95.6065 57.4669 107.481 57.4669  c
119.355 57.4669 128.981 67.0928 128.981 78.9669  c
h
f
0.00000 0.00000 0.00000 RG
newpath
129.981 78.9669 m
129.981 91.3933 119.907 101.467 107.481 101.467  c
95.0542 101.467 84.9806 91.3933 84.9806 78.9669  c
84.9806 66.5405 95.0542 56.4669 107.481 56.4669  c
119.907 56.4669 129.981 66.5405 129.981 78.9669  c
h
128.981 78.9669 m
128.981 90.8410 119.355 100.467 107.481 100.467  c
95.6065 100.467 85.9806 90.8410 85.9806 78.9669  c
85.9806 67.0928 95.6065 57.4669 107.481 57.4669  c
119.355 57.4669 128.981 67.0928 128.981 78.9669  c
h
f*
107.481 78.9669 translate
1.00000 1.00000 scale
-16.5791 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
4.00000 -8.67188 l
4.86458 -8.67188 5.55990 -8.57552 6.08594 -8.38281  c
6.61198 -8.19010 7.06771 -7.86458 7.45312 -7.40625  c
8.06771 -6.68750 8.37500 -5.73438 8.37500 -4.54688  c
8.37500 -3.09896 7.99479 -1.97917 7.23438 -1.18750  c
6.47396 -.395833 5.40104 0.00000 4.01562 0.00000  c
1.12500 0.00000 l
h
2.34375 -.921875 m
3.92188 -.921875 l
5.04688 -.921875 5.84375 -1.22396 6.31250 -1.82812  c
6.82292 -2.47396 7.07812 -3.33854 7.07812 -4.42188  c
7.07812 -5.44271 6.82812 -6.24479 6.32812 -6.82812  c
6.02604 -7.18229 5.66667 -7.42448 5.25000 -7.55469  c
4.83333 -7.68490 4.20312 -7.75000 3.35938 -7.75000  c
2.34375 -7.75000 l
2.34375 -.921875 l
h
14.5039 -3.31250 m
13.0195 -7.06250 l
11.5508 -3.31250 l
14.5039 -3.31250 l
h
15.8008 0.00000 m
14.8633 -2.40625 l
11.1914 -2.40625 l
10.2383 0.00000 l
9.08203 0.00000 l
12.5352 -8.67188 l
13.7539 -8.67188 l
17.1289 0.00000 l
15.8008 0.00000 l
h
18.3926 0.00000 m
18.3926 -8.67188 l
21.0176 -8.67188 l
21.8509 -8.67188 22.4889 -8.48958 22.9316 -8.12500  c
23.3743 -7.76042 23.5957 -7.22396 23.5957 -6.51562  c
23.5957 -5.35938 23.0124 -4.54167 21.8457 -4.06250  c
24.7363 0.00000 l
23.2207 0.00000 l
20.7520 -3.67188 l
19.6113 -3.67188 l
19.6113 0.00000 l
18.3926 0.00000 l
h
19.6113 -4.59375 m
20.0020 -4.59375 l
21.5540 -4.59375 22.3301 -5.19792 22.3301 -6.40625  c
22.3301 -7.30208 21.6790 -7.75000 20.3770 -7.75000  c
19.6113 -7.75000 l
19.6113 -4.59375 l
h
29.6836 .218750 m
28.3398 .218750 27.3008 -.177083 26.5664 -.968750  c
25.8320 -1.76042 25.4648 -2.88021 25.4648 -4.32812  c
25.4648 -5.77604 25.8398 -6.89844 26.5898 -7.69531  c
27.3398 -8.49219 28.3919 -8.89062 29.7461 -8.89062  c
30.5273 -8.89062 31.4388 -8.76562 32.4805 -8.51562  c
32.4805 -7.35938 l
31.2930 -7.76562 30.3763 -7.96875 29.7305 -7.96875  c
28.7930 -7.96875 28.0664 -7.65104 27.5508 -7.01562  c
27.0352 -6.38021 26.7773 -5.47917 26.7773 -4.31250  c
26.7773 -3.20833 27.0508 -2.33854 27.5977 -1.70312  c
28.1445 -1.06771 28.8971 -.750000 29.8555 -.750000  c
30.6784 -.750000 31.5586 -1.00000 32.4961 -1.50000  c
32.4961 -.453125 l
31.6419 -.00520833 30.7044 .218750 29.6836 .218750  c
h
f
[ .945136 0.00000 0.00000 .945136 129.201 20.6718 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
