%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:47:46 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.28979 0.00000 0.00000 1.28979 81.4292 27.7462 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
86.6277 111.565 m
86.6277 100.435 l
S
newpath
50.2277 145.892 m
65.2289 141.018 l
S
newpath
107.496 69.5226 m
158.862 48.8145 l
S
newpath
50.2277 66.1082 m
65.2289 70.9824 l
S
newpath
136.645 18.2348 m
101.077 60.6883 l
S
newpath
42.7137 138.378 m
73.4025 96.1382 l
S
newpath
33.2455 128.910 m
33.2455 83.0904 l
S
newpath
27.7277 168.392 m
8.04290 228.975 l
S
newpath
13.4787 124.203 m
23.7774 138.378 l
S
newpath
13.4787 87.7971 m
23.7774 73.6222 l
S
.435294 1.00000 .423529 RG
newpath
108.128 134.065 m
108.128 145.939 98.5018 155.565 86.6277 155.565  c
74.7536 155.565 65.1277 145.939 65.1277 134.065  c
65.1277 122.191 74.7536 112.565 86.6277 112.565  c
98.5018 112.565 108.128 122.191 108.128 134.065  c
h
f
0.00000 0.00000 0.00000 RG
newpath
109.128 134.065 m
109.128 146.491 99.0541 156.565 86.6277 156.565  c
74.2013 156.565 64.1277 146.491 64.1277 134.065  c
64.1277 121.638 74.2013 111.565 86.6277 111.565  c
99.0541 111.565 109.128 121.638 109.128 134.065  c
h
108.128 134.065 m
108.128 145.939 98.5018 155.565 86.6277 155.565  c
74.7536 155.565 65.1277 145.939 65.1277 134.065  c
65.1277 122.191 74.7536 112.565 86.6277 112.565  c
98.5018 112.565 108.128 122.191 108.128 134.065  c
h
f*
86.6277 134.065 translate
1.00000 1.00000 scale
-14.0039 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.84375 l
5.39062 -4.84375 l
5.39062 -3.93750 l
2.34375 -3.93750 l
2.34375 0.00000 l
1.12500 0.00000 l
h
7.55859 0.00000 m
7.55859 -8.67188 l
8.77734 -8.67188 l
8.77734 -.921875 l
12.6836 -.921875 l
12.6836 0.00000 l
7.55859 0.00000 l
h
16.0195 0.00000 m
16.0195 -7.75000 l
12.9414 -7.75000 l
12.9414 -8.67188 l
20.3164 -8.67188 l
20.3164 -7.75000 l
17.2383 -7.75000 l
17.2383 0.00000 l
16.0195 0.00000 l
h
24.9355 0.00000 m
24.9355 -2.45312 l
21.0293 -2.45312 l
21.0293 -3.32812 l
24.9355 -8.67188 l
26.0293 -8.67188 l
26.0293 -3.40625 l
27.1855 -3.40625 l
27.1855 -2.45312 l
26.0293 -2.45312 l
26.0293 0.00000 l
24.9355 0.00000 l
h
22.1699 -3.40625 m
25.0137 -3.40625 l
25.0137 -7.25000 l
22.1699 -3.40625 l
h
f
[ 1.28979 0.00000 0.00000 1.28979 81.4292 27.7462 ] defaultmatrix matrix concatmatrix setmatrix
.450980 1.00000 .431373 RG
newpath
108.128 77.9353 m
108.128 89.8094 98.5018 99.4353 86.6277 99.4353  c
74.7536 99.4353 65.1277 89.8094 65.1277 77.9353  c
65.1277 66.0612 74.7536 56.4353 86.6277 56.4353  c
98.5018 56.4353 108.128 66.0612 108.128 77.9353  c
h
f
0.00000 0.00000 0.00000 RG
newpath
109.128 77.9353 m
109.128 90.3617 99.0541 100.435 86.6277 100.435  c
74.2013 100.435 64.1277 90.3617 64.1277 77.9353  c
64.1277 65.5089 74.2013 55.4353 86.6277 55.4353  c
99.0541 55.4353 109.128 65.5089 109.128 77.9353  c
h
108.128 77.9353 m
108.128 89.8094 98.5018 99.4353 86.6277 99.4353  c
74.7536 99.4353 65.1277 89.8094 65.1277 77.9353  c
65.1277 66.0612 74.7536 56.4353 86.6277 56.4353  c
98.5018 56.4353 108.128 66.0612 108.128 77.9353  c
h
f*
86.6277 77.9353 translate
1.00000 1.00000 scale
-15.3750 4.42090 translate
newpath
7.64062 -.234375 m
6.58854 .0677083 5.67188 .218750 4.89062 .218750  c
3.50521 .218750 2.44531 -.174479 1.71094 -.960938  c
.976562 -1.74740 .609375 -2.87500 .609375 -4.34375  c
.609375 -5.78125 .981771 -6.89844 1.72656 -7.69531  c
2.47135 -8.49219 3.52083 -8.89062 4.87500 -8.89062  c
5.75000 -8.89062 6.66667 -8.76042 7.62500 -8.50000  c
7.62500 -7.35938 l
6.42708 -7.76562 5.51042 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.48438 1.92188 -4.32812  c
1.92188 -3.18229 2.19792 -2.29167 2.75000 -1.65625  c
3.30208 -1.02083 4.07812 -.703125 5.07812 -.703125  c
5.49479 -.703125 5.93750 -.776042 6.40625 -.921875  c
6.40625 -3.75000 l
7.64062 -3.75000 l
7.64062 -.234375 l
h
9.79688 0.00000 m
9.79688 -8.67188 l
12.4219 -8.67188 l
13.2552 -8.67188 13.8932 -8.48958 14.3359 -8.12500  c
14.7786 -7.76042 15.0000 -7.22396 15.0000 -6.51562  c
15.0000 -5.35938 14.4167 -4.54167 13.2500 -4.06250  c
16.1406 0.00000 l
14.6250 0.00000 l
12.1562 -3.67188 l
11.0156 -3.67188 l
11.0156 0.00000 l
9.79688 0.00000 l
h
11.0156 -4.59375 m
11.4062 -4.59375 l
12.9583 -4.59375 13.7344 -5.19792 13.7344 -6.40625  c
13.7344 -7.30208 13.0833 -7.75000 11.7812 -7.75000  c
11.0156 -7.75000 l
11.0156 -4.59375 l
h
17.3848 0.00000 m
17.3848 -8.67188 l
19.6348 -8.67188 l
20.4993 -8.67188 21.1634 -8.50781 21.6270 -8.17969  c
22.0905 -7.85156 22.3223 -7.38021 22.3223 -6.76562  c
22.3223 -5.71354 21.7285 -4.96354 20.5410 -4.51562  c
21.9577 -4.08854 22.6660 -3.30729 22.6660 -2.17188  c
22.6660 -1.46354 22.4316 -.924479 21.9629 -.554688  c
21.4941 -.184896 20.8171 0.00000 19.9316 0.00000  c
17.3848 0.00000 l
h
18.6035 -.921875 m
18.8535 -.921875 l
19.7493 -.921875 20.3327 -.979167 20.6035 -1.09375  c
21.1139 -1.30208 21.3691 -1.69792 21.3691 -2.28125  c
21.3691 -2.80208 21.1374 -3.23177 20.6738 -3.57031  c
20.2103 -3.90885 19.6348 -4.07812 18.9473 -4.07812  c
18.6035 -4.07812 l
18.6035 -.921875 l
h
18.6035 -4.85938 m
18.9941 -4.85938 l
19.6504 -4.85938 20.1582 -5.00000 20.5176 -5.28125  c
20.8770 -5.56250 21.0566 -5.95833 21.0566 -6.46875  c
21.0566 -7.32292 20.3952 -7.75000 19.0723 -7.75000  c
18.6035 -7.75000 l
18.6035 -4.85938 l
h
24.1621 0.00000 m
24.1621 -1.01562 l
24.4954 -1.79688 25.1725 -2.65104 26.1934 -3.57812  c
26.8652 -4.17188 l
27.7090 -4.94271 28.1309 -5.70833 28.1309 -6.46875  c
28.1309 -6.94792 27.9876 -7.32552 27.7012 -7.60156  c
27.4147 -7.87760 27.0163 -8.01562 26.5059 -8.01562  c
25.9017 -8.01562 25.1934 -7.78646 24.3809 -7.32812  c
24.3809 -8.34375 l
25.1517 -8.70833 25.9121 -8.89062 26.6621 -8.89062  c
27.4746 -8.89062 28.1283 -8.67188 28.6230 -8.23438  c
29.1178 -7.79688 29.3652 -7.21875 29.3652 -6.50000  c
29.3652 -5.97917 29.2402 -5.51562 28.9902 -5.10938  c
28.7402 -4.70312 28.2767 -4.21354 27.5996 -3.64062  c
27.1621 -3.26562 l
26.2350 -2.48438 25.6986 -1.73438 25.5527 -1.01562  c
29.3184 -1.01562 l
29.3184 0.00000 l
24.1621 0.00000 l
h
f
[ 1.28979 0.00000 0.00000 1.28979 81.4292 27.7462 ] defaultmatrix matrix concatmatrix setmatrix
.988235 1.00000 .792157 RG
newpath
172.595 .987791 m
172.595 12.8619 162.969 22.4878 151.095 22.4878  c
139.220 22.4878 129.595 12.8619 129.595 .987791  c
129.595 -10.8863 139.220 -20.5122 151.095 -20.5122  c
162.969 -20.5122 172.595 -10.8863 172.595 .987791  c
h
f
0.00000 0.00000 0.00000 RG
newpath
173.595 .987791 m
173.595 13.4142 163.521 23.4878 151.095 23.4878  c
138.668 23.4878 128.595 13.4142 128.595 .987791  c
128.595 -11.4386 138.668 -21.5122 151.095 -21.5122  c
163.521 -21.5122 173.595 -11.4386 173.595 .987791  c
h
172.595 .987791 m
172.595 12.8619 162.969 22.4878 151.095 22.4878  c
139.221 22.4878 129.595 12.8619 129.595 .987791  c
129.595 -10.8863 139.221 -20.5122 151.095 -20.5122  c
162.969 -20.5122 172.595 -10.8863 172.595 .987791  c
h
f*
151.095 .987791 translate
1.00000 1.00000 scale
-16.2334 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
9.42773 0.00000 m
9.42773 -8.67188 l
12.3027 -8.67188 l
13.1673 -8.67188 13.8626 -8.57552 14.3887 -8.38281  c
14.9147 -8.19010 15.3704 -7.86458 15.7559 -7.40625  c
16.3704 -6.68750 16.6777 -5.73438 16.6777 -4.54688  c
16.6777 -3.09896 16.2975 -1.97917 15.5371 -1.18750  c
14.7767 -.395833 13.7038 0.00000 12.3184 0.00000  c
9.42773 0.00000 l
h
10.6465 -.921875 m
12.2246 -.921875 l
13.3496 -.921875 14.1465 -1.22396 14.6152 -1.82812  c
15.1257 -2.47396 15.3809 -3.33854 15.3809 -4.42188  c
15.3809 -5.44271 15.1309 -6.24479 14.6309 -6.82812  c
14.3288 -7.18229 13.9694 -7.42448 13.5527 -7.55469  c
13.1361 -7.68490 12.5059 -7.75000 11.6621 -7.75000  c
10.6465 -7.75000 l
10.6465 -.921875 l
h
18.2910 0.00000 m
18.2910 -1.01562 l
18.6243 -1.79688 19.3014 -2.65104 20.3223 -3.57812  c
20.9941 -4.17188 l
21.8379 -4.94271 22.2598 -5.70833 22.2598 -6.46875  c
22.2598 -6.94792 22.1165 -7.32552 21.8301 -7.60156  c
21.5436 -7.87760 21.1452 -8.01562 20.6348 -8.01562  c
20.0306 -8.01562 19.3223 -7.78646 18.5098 -7.32812  c
18.5098 -8.34375 l
19.2806 -8.70833 20.0410 -8.89062 20.7910 -8.89062  c
21.6035 -8.89062 22.2572 -8.67188 22.7520 -8.23438  c
23.2467 -7.79688 23.4941 -7.21875 23.4941 -6.50000  c
23.4941 -5.97917 23.3691 -5.51562 23.1191 -5.10938  c
22.8691 -4.70312 22.4056 -4.21354 21.7285 -3.64062  c
21.2910 -3.26562 l
20.3639 -2.48438 19.8275 -1.73438 19.6816 -1.01562  c
23.4473 -1.01562 l
23.4473 0.00000 l
18.2910 0.00000 l
h
25.8789 0.00000 m
25.8789 -1.01562 l
26.2122 -1.79688 26.8893 -2.65104 27.9102 -3.57812  c
28.5820 -4.17188 l
29.4258 -4.94271 29.8477 -5.70833 29.8477 -6.46875  c
29.8477 -6.94792 29.7044 -7.32552 29.4180 -7.60156  c
29.1315 -7.87760 28.7331 -8.01562 28.2227 -8.01562  c
27.6185 -8.01562 26.9102 -7.78646 26.0977 -7.32812  c
26.0977 -8.34375 l
26.8685 -8.70833 27.6289 -8.89062 28.3789 -8.89062  c
29.1914 -8.89062 29.8451 -8.67188 30.3398 -8.23438  c
30.8346 -7.79688 31.0820 -7.21875 31.0820 -6.50000  c
31.0820 -5.97917 30.9570 -5.51562 30.7070 -5.10938  c
30.4570 -4.70312 29.9935 -4.21354 29.3164 -3.64062  c
28.8789 -3.26562 l
27.9518 -2.48438 27.4154 -1.73438 27.2695 -1.01562  c
31.0352 -1.01562 l
31.0352 0.00000 l
25.8789 0.00000 l
h
f
[ 1.28979 0.00000 0.00000 1.28979 81.4292 27.7462 ] defaultmatrix matrix concatmatrix setmatrix
.360784 .941176 .380392 RG
newpath
54.3313 151.410 m
33.2455 172.495 l
12.1597 151.410 l
33.2455 130.324 l
h
f
0.00000 0.00000 0.00000 RG
newpath
33.2455 128.910 m
55.7455 151.410 l
33.2455 173.910 l
10.7455 151.410 l
h
54.3313 151.410 m
33.2455 172.495 l
12.1597 151.410 l
33.2455 130.324 l
h
f*
33.2455 151.410 translate
1.00000 1.00000 scale
-18.1875 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
11.1152 .218750 m
10.5423 .218750 9.80273 .0885417 8.89648 -.171875  c
8.89648 -1.39062 l
9.86523 -.932292 10.6673 -.703125 11.3027 -.703125  c
11.7819 -.703125 12.1699 -.830729 12.4668 -1.08594  c
12.7637 -1.34115 12.9121 -1.67708 12.9121 -2.09375  c
12.9121 -2.42708 12.8158 -2.71354 12.6230 -2.95312  c
12.4303 -3.19271 12.0736 -3.45833 11.5527 -3.75000  c
10.9590 -4.09375 l
10.2194 -4.52083 9.69857 -4.91927 9.39648 -5.28906  c
9.09440 -5.65885 8.94336 -6.09375 8.94336 -6.59375  c
8.94336 -7.26042 9.18555 -7.80990 9.66992 -8.24219  c
10.1543 -8.67448 10.7715 -8.89062 11.5215 -8.89062  c
12.1882 -8.89062 12.8913 -8.78125 13.6309 -8.56250  c
13.6309 -7.43750 l
12.7142 -7.79167 12.0319 -7.96875 11.5840 -7.96875  c
11.1569 -7.96875 10.8053 -7.85677 10.5293 -7.63281  c
10.2533 -7.40885 10.1152 -7.12500 10.1152 -6.78125  c
10.1152 -6.48958 10.2168 -6.23177 10.4199 -6.00781  c
10.6230 -5.78385 10.9954 -5.51562 11.5371 -5.20312  c
12.1465 -4.85938 l
12.8965 -4.43229 13.4199 -4.02865 13.7168 -3.64844  c
14.0137 -3.26823 14.1621 -2.81250 14.1621 -2.28125  c
14.1621 -1.53125 13.8861 -.927083 13.3340 -.468750  c
12.7819 -.0104167 12.0423 .218750 11.1152 .218750  c
h
15.8906 0.00000 m
15.8906 -8.67188 l
20.7344 -8.67188 l
20.7344 -7.75000 l
17.1094 -7.75000 l
17.1094 -4.84375 l
20.1562 -4.84375 l
20.1562 -3.93750 l
17.1094 -3.93750 l
17.1094 0.00000 l
15.8906 0.00000 l
h
23.0117 0.00000 m
23.0117 -.875000 l
24.7461 -.875000 l
24.7461 -7.71875 l
23.0117 -7.28125 l
23.0117 -8.17188 l
25.9023 -8.89062 l
25.9023 -.875000 l
27.6367 -.875000 l
27.6367 0.00000 l
23.0117 0.00000 l
h
29.9121 0.00000 m
29.9121 -8.67188 l
32.5371 -8.67188 l
33.3704 -8.67188 34.0085 -8.48958 34.4512 -8.12500  c
34.8939 -7.76042 35.1152 -7.22396 35.1152 -6.51562  c
35.1152 -5.35938 34.5319 -4.54167 33.3652 -4.06250  c
36.2559 0.00000 l
34.7402 0.00000 l
32.2715 -3.67188 l
31.1309 -3.67188 l
31.1309 0.00000 l
29.9121 0.00000 l
h
31.1309 -4.59375 m
31.5215 -4.59375 l
33.0736 -4.59375 33.8496 -5.19792 33.8496 -6.40625  c
33.8496 -7.30208 33.1986 -7.75000 31.8965 -7.75000  c
31.1309 -7.75000 l
31.1309 -4.59375 l
h
f
[ 1.28979 0.00000 0.00000 1.28979 81.4292 27.7462 ] defaultmatrix matrix concatmatrix setmatrix
.458824 1.00000 .439216 RG
newpath
201.231 40.4017 m
201.231 52.2759 191.605 61.9017 179.731 61.9017  c
167.856 61.9017 158.231 52.2759 158.231 40.4017  c
158.231 28.5276 167.856 18.9017 179.731 18.9017  c
191.605 18.9017 201.231 28.5276 201.231 40.4017  c
h
f
0.00000 0.00000 0.00000 RG
newpath
202.231 40.4017 m
202.231 52.8282 192.157 62.9017 179.731 62.9017  c
167.304 62.9017 157.231 52.8282 157.231 40.4017  c
157.231 27.9753 167.304 17.9017 179.731 17.9017  c
192.157 17.9017 202.231 27.9753 202.231 40.4017  c
h
201.231 40.4017 m
201.231 52.2759 191.605 61.9017 179.731 61.9017  c
167.856 61.9017 158.231 52.2759 158.231 40.4017  c
158.231 28.5276 167.856 18.9017 179.731 18.9017  c
191.605 18.9017 201.231 28.5276 201.231 40.4017  c
h
f*
179.731 40.4017 translate
1.00000 1.00000 scale
-10.3242 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.96875 l
5.37500 -4.96875 l
5.37500 -4.06250 l
2.34375 -4.06250 l
2.34375 -.921875 l
6.21875 -.921875 l
6.21875 0.00000 l
1.12500 0.00000 l
h
7.62891 0.00000 m
7.62891 -8.67188 l
9.98828 -8.67188 l
11.0299 -8.67188 11.7799 -8.49479 12.2383 -8.14062  c
12.6966 -7.78646 12.9258 -7.20833 12.9258 -6.40625  c
12.9258 -5.47917 12.6133 -4.75521 11.9883 -4.23438  c
11.3633 -3.71354 10.4987 -3.45312 9.39453 -3.45312  c
8.84766 -3.45312 l
8.84766 0.00000 l
7.62891 0.00000 l
h
8.84766 -4.37500 m
9.34766 -4.37500 l
10.0768 -4.37500 10.6393 -4.54427 11.0352 -4.88281  c
11.4310 -5.22135 11.6289 -5.69792 11.6289 -6.31250  c
11.6289 -6.82292 11.4727 -7.19010 11.1602 -7.41406  c
10.8477 -7.63802 10.3268 -7.75000 9.59766 -7.75000  c
8.84766 -7.75000 l
8.84766 -4.37500 l
h
13.2305 0.00000 m
16.1055 -4.35938 l
13.3711 -8.67188 l
14.8242 -8.67188 l
16.9180 -5.40625 l
19.1055 -8.67188 l
20.2617 -8.67188 l
17.4961 -4.48438 l
20.3398 0.00000 l
18.8867 0.00000 l
16.6836 -3.43750 l
14.4023 0.00000 l
13.2305 0.00000 l
h
f
[ 1.28979 0.00000 0.00000 1.28979 81.4292 27.7462 ] defaultmatrix matrix concatmatrix setmatrix
.501961 1.00000 .466667 RG
newpath
21.7535 106.000 m
21.7535 117.874 12.1276 127.500 .253517 127.500  c
-11.6206 127.500 -21.2465 117.874 -21.2465 106.000  c
-21.2465 94.1259 -11.6206 84.5000 .253517 84.5000  c
12.1276 84.5000 21.7535 94.1259 21.7535 106.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
22.7535 106.000 m
22.7535 118.426 12.6799 128.500 .253517 128.500  c
-12.1729 128.500 -22.2465 118.426 -22.2465 106.000  c
-22.2465 93.5736 -12.1729 83.5000 .253517 83.5000  c
12.6799 83.5000 22.7535 93.5736 22.7535 106.000  c
h
21.7535 106.000 m
21.7535 117.874 12.1276 127.500 .253517 127.500  c
-11.6206 127.500 -21.2465 117.874 -21.2465 106.000  c
-21.2465 94.1259 -11.6206 84.5000 .253517 84.5000  c
12.1276 84.5000 21.7535 94.1259 21.7535 106.000  c
h
f*
.253517 106.000 translate
1.00000 1.00000 scale
-14.3936 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
11.1152 .218750 m
10.5423 .218750 9.80273 .0885417 8.89648 -.171875  c
8.89648 -1.39062 l
9.86523 -.932292 10.6673 -.703125 11.3027 -.703125  c
11.7819 -.703125 12.1699 -.830729 12.4668 -1.08594  c
12.7637 -1.34115 12.9121 -1.67708 12.9121 -2.09375  c
12.9121 -2.42708 12.8158 -2.71354 12.6230 -2.95312  c
12.4303 -3.19271 12.0736 -3.45833 11.5527 -3.75000  c
10.9590 -4.09375 l
10.2194 -4.52083 9.69857 -4.91927 9.39648 -5.28906  c
9.09440 -5.65885 8.94336 -6.09375 8.94336 -6.59375  c
8.94336 -7.26042 9.18555 -7.80990 9.66992 -8.24219  c
10.1543 -8.67448 10.7715 -8.89062 11.5215 -8.89062  c
12.1882 -8.89062 12.8913 -8.78125 13.6309 -8.56250  c
13.6309 -7.43750 l
12.7142 -7.79167 12.0319 -7.96875 11.5840 -7.96875  c
11.1569 -7.96875 10.8053 -7.85677 10.5293 -7.63281  c
10.2533 -7.40885 10.1152 -7.12500 10.1152 -6.78125  c
10.1152 -6.48958 10.2168 -6.23177 10.4199 -6.00781  c
10.6230 -5.78385 10.9954 -5.51562 11.5371 -5.20312  c
12.1465 -4.85938 l
12.8965 -4.43229 13.4199 -4.02865 13.7168 -3.64844  c
14.0137 -3.26823 14.1621 -2.81250 14.1621 -2.28125  c
14.1621 -1.53125 13.8861 -.927083 13.3340 -.468750  c
12.7819 -.0104167 12.0423 .218750 11.1152 .218750  c
h
15.8906 0.00000 m
15.8906 -8.67188 l
20.7344 -8.67188 l
20.7344 -7.75000 l
17.1094 -7.75000 l
17.1094 -4.84375 l
20.1562 -4.84375 l
20.1562 -3.93750 l
17.1094 -3.93750 l
17.1094 0.00000 l
15.8906 0.00000 l
h
23.0117 0.00000 m
23.0117 -.875000 l
24.7461 -.875000 l
24.7461 -7.71875 l
23.0117 -7.28125 l
23.0117 -8.17188 l
25.9023 -8.89062 l
25.9023 -.875000 l
27.6367 -.875000 l
27.6367 0.00000 l
23.0117 0.00000 l
h
f
[ 1.28979 0.00000 0.00000 1.28979 81.4292 27.7462 ] defaultmatrix matrix concatmatrix setmatrix
.309804 .866667 .356863 RG
newpath
23.6108 245.957 m
2.52506 267.043 l
-18.5607 245.957 l
2.52506 224.872 l
h
f
0.00000 0.00000 0.00000 RG
newpath
2.52506 223.457 m
25.0251 245.957 l
2.52506 268.457 l
-19.9749 245.957 l
h
23.6108 245.957 m
2.52506 267.043 l
-18.5607 245.957 l
2.52506 224.872 l
h
f*
2.52506 245.957 translate
1.00000 1.00000 scale
-18.8145 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
7.75781 0.00000 m
7.75781 -8.67188 l
10.6328 -8.67188 l
11.4974 -8.67188 12.1927 -8.57552 12.7188 -8.38281  c
13.2448 -8.19010 13.7005 -7.86458 14.0859 -7.40625  c
14.7005 -6.68750 15.0078 -5.73438 15.0078 -4.54688  c
15.0078 -3.09896 14.6276 -1.97917 13.8672 -1.18750  c
13.1068 -.395833 12.0339 0.00000 10.6484 0.00000  c
7.75781 0.00000 l
h
8.97656 -.921875 m
10.5547 -.921875 l
11.6797 -.921875 12.4766 -1.22396 12.9453 -1.82812  c
13.4557 -2.47396 13.7109 -3.33854 13.7109 -4.42188  c
13.7109 -5.44271 13.4609 -6.24479 12.9609 -6.82812  c
12.6589 -7.18229 12.2995 -7.42448 11.8828 -7.55469  c
11.4661 -7.68490 10.8359 -7.75000 9.99219 -7.75000  c
8.97656 -7.75000 l
8.97656 -.921875 l
h
23.2617 -.234375 m
22.2096 .0677083 21.2930 .218750 20.5117 .218750  c
19.1263 .218750 18.0664 -.174479 17.3320 -.960938  c
16.5977 -1.74740 16.2305 -2.87500 16.2305 -4.34375  c
16.2305 -5.78125 16.6029 -6.89844 17.3477 -7.69531  c
18.0924 -8.49219 19.1419 -8.89062 20.4961 -8.89062  c
21.3711 -8.89062 22.2878 -8.76042 23.2461 -8.50000  c
23.2461 -7.35938 l
22.0482 -7.76562 21.1315 -7.96875 20.4961 -7.96875  c
19.5586 -7.96875 18.8320 -7.65104 18.3164 -7.01562  c
17.8008 -6.38021 17.5430 -5.48438 17.5430 -4.32812  c
17.5430 -3.18229 17.8190 -2.29167 18.3711 -1.65625  c
18.9232 -1.02083 19.6992 -.703125 20.6992 -.703125  c
21.1159 -.703125 21.5586 -.776042 22.0273 -.921875  c
22.0273 -3.75000 l
23.2617 -3.75000 l
23.2617 -.234375 l
h
25.4180 0.00000 m
25.4180 -8.67188 l
30.2617 -8.67188 l
30.2617 -7.75000 l
26.6367 -7.75000 l
26.6367 -4.84375 l
29.6836 -4.84375 l
29.6836 -3.93750 l
26.6367 -3.93750 l
26.6367 0.00000 l
25.4180 0.00000 l
h
31.8516 0.00000 m
31.8516 -8.67188 l
34.1016 -8.67188 l
34.9661 -8.67188 35.6302 -8.50781 36.0938 -8.17969  c
36.5573 -7.85156 36.7891 -7.38021 36.7891 -6.76562  c
36.7891 -5.71354 36.1953 -4.96354 35.0078 -4.51562  c
36.4245 -4.08854 37.1328 -3.30729 37.1328 -2.17188  c
37.1328 -1.46354 36.8984 -.924479 36.4297 -.554688  c
35.9609 -.184896 35.2839 0.00000 34.3984 0.00000  c
31.8516 0.00000 l
h
33.0703 -.921875 m
33.3203 -.921875 l
34.2161 -.921875 34.7995 -.979167 35.0703 -1.09375  c
35.5807 -1.30208 35.8359 -1.69792 35.8359 -2.28125  c
35.8359 -2.80208 35.6042 -3.23177 35.1406 -3.57031  c
34.6771 -3.90885 34.1016 -4.07812 33.4141 -4.07812  c
33.0703 -4.07812 l
33.0703 -.921875 l
h
33.0703 -4.85938 m
33.4609 -4.85938 l
34.1172 -4.85938 34.6250 -5.00000 34.9844 -5.28125  c
35.3438 -5.56250 35.5234 -5.95833 35.5234 -6.46875  c
35.5234 -7.32292 34.8620 -7.75000 33.5391 -7.75000  c
33.0703 -7.75000 l
33.0703 -4.85938 l
h
f
[ 1.28979 0.00000 0.00000 1.28979 81.4292 27.7462 ] defaultmatrix matrix concatmatrix setmatrix
.345098 .913725 .372549 RG
newpath
54.3313 60.5904 m
33.2455 81.6762 l
12.1597 60.5904 l
33.2455 39.5046 l
h
f
0.00000 0.00000 0.00000 RG
newpath
33.2455 38.0904 m
55.7455 60.5904 l
33.2455 83.0904 l
10.7455 60.5904 l
h
54.3313 60.5904 m
33.2455 81.6762 l
12.1597 60.5904 l
33.2455 39.5046 l
h
f*
33.2455 60.5904 translate
1.00000 1.00000 scale
-9.43945 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.28125 -8.67188 l
2.28125 -4.40625 l
5.78125 -8.67188 l
7.01562 -8.67188 l
3.62500 -4.53125 l
7.62500 0.00000 l
6.06250 0.00000 l
2.28125 -4.39062 l
2.28125 0.00000 l
1.12500 0.00000 l
h
8.94336 0.00000 m
8.94336 -8.67188 l
10.1777 -8.67188 l
10.1777 0.00000 l
8.94336 0.00000 l
h
14.4785 0.00000 m
14.4785 -7.75000 l
11.4004 -7.75000 l
11.4004 -8.67188 l
18.7754 -8.67188 l
18.7754 -7.75000 l
15.6973 -7.75000 l
15.6973 0.00000 l
14.4785 0.00000 l
h
f
[ 1.28979 0.00000 0.00000 1.28979 81.4292 27.7462 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
