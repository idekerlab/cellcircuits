%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:47:14 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.52481 0.00000 0.00000 1.52481 97.9073 33.2351 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
122.394 14.9682 m
100.730 52.4920 l
S
newpath
56.2500 129.534 m
78.2300 91.4632 l
S
newpath
45.0000 178.481 m
45.0000 171.519 l
S
newpath
14.2644 183.236 m
30.7356 192.745 l
S
newpath
14.2644 166.764 m
25.5144 160.269 l
S
1.00000 1.00000 1.00000 RG
newpath
110.980 71.9776 m
110.980 83.8517 101.354 93.4776 89.4800 93.4776  c
77.6059 93.4776 67.9800 83.8517 67.9800 71.9776  c
67.9800 60.1035 77.6059 50.4776 89.4800 50.4776  c
101.354 50.4776 110.980 60.1035 110.980 71.9776  c
h
f
0.00000 0.00000 0.00000 RG
newpath
111.980 71.9776 m
111.980 84.4040 101.906 94.4776 89.4800 94.4776  c
77.0536 94.4776 66.9800 84.4040 66.9800 71.9776  c
66.9800 59.5512 77.0536 49.4776 89.4800 49.4776  c
101.906 49.4776 111.980 59.5512 111.980 71.9776  c
h
110.980 71.9776 m
110.980 83.8517 101.354 93.4776 89.4800 93.4776  c
77.6059 93.4776 67.9800 83.8517 67.9800 71.9776  c
67.9800 60.1035 77.6059 50.4776 89.4800 50.4776  c
101.354 50.4776 110.980 60.1035 110.980 71.9776  c
h
f*
89.4800 71.9776 translate
1.00000 1.00000 scale
-27.6738 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
10.1152 0.00000 m
10.1152 -.875000 l
11.8496 -.875000 l
11.8496 -7.71875 l
10.1152 -7.28125 l
10.1152 -8.17188 l
13.0059 -8.89062 l
13.0059 -.875000 l
14.7402 -.875000 l
14.7402 0.00000 l
10.1152 0.00000 l
h
19.5312 .140625 m
18.6250 .140625 17.9010 -.161458 17.3594 -.765625  c
16.8177 -1.36979 16.5469 -2.17708 16.5469 -3.18750  c
16.5469 -4.20833 16.8177 -5.01562 17.3594 -5.60938  c
17.9010 -6.20312 18.6406 -6.50000 19.5781 -6.50000  c
20.5156 -6.50000 21.2552 -6.20312 21.7969 -5.60938  c
22.3385 -5.01562 22.6094 -4.20833 22.6094 -3.18750  c
22.6094 -2.15625 22.3359 -1.34375 21.7891 -.750000  c
21.2422 -.156250 20.4896 .140625 19.5312 .140625  c
h
19.5469 -.718750 m
20.7760 -.718750 21.3906 -1.54167 21.3906 -3.18750  c
21.3906 -4.82292 20.7865 -5.64062 19.5781 -5.64062  c
18.3698 -5.64062 17.7656 -4.82292 17.7656 -3.18750  c
17.7656 -1.54167 18.3594 -.718750 19.5469 -.718750  c
h
24.4180 0.00000 m
24.4180 -6.35938 l
25.5742 -6.35938 l
25.5742 -5.17188 l
26.0326 -6.05729 26.6940 -6.50000 27.5586 -6.50000  c
27.6836 -6.50000 27.8086 -6.48958 27.9336 -6.46875  c
27.9336 -5.39062 l
27.7357 -5.46354 27.5586 -5.50000 27.4023 -5.50000  c
26.6732 -5.50000 26.0638 -5.06771 25.5742 -4.20312  c
25.5742 0.00000 l
24.4180 0.00000 l
h
30.7031 -5.50000 m
30.7031 0.00000 l
29.5469 0.00000 l
29.5469 -5.50000 l
28.6406 -5.50000 l
28.6406 -6.35938 l
29.5469 -6.35938 l
29.5469 -7.12500 l
29.5469 -8.64583 30.2396 -9.40625 31.6250 -9.40625  c
32.0104 -9.40625 32.4479 -9.33854 32.9375 -9.20312  c
32.9375 -8.29688 l
32.4167 -8.45312 32.0000 -8.53125 31.6875 -8.53125  c
31.3125 -8.53125 31.0547 -8.44010 30.9141 -8.25781  c
30.7734 -8.07552 30.7031 -7.73958 30.7031 -7.25000  c
30.7031 -6.35938 l
32.2969 -6.35938 l
32.2969 -5.50000 l
30.7031 -5.50000 l
h
34.3965 0.00000 m
34.3965 -.875000 l
36.1309 -.875000 l
36.1309 -7.71875 l
34.3965 -7.28125 l
34.3965 -8.17188 l
37.2871 -8.89062 l
37.2871 -.875000 l
39.0215 -.875000 l
39.0215 0.00000 l
34.3965 0.00000 l
h
41.5312 -.0468750 m
41.5312 -1.03125 l
42.2708 -.781250 42.8958 -.656250 43.4062 -.656250  c
44.1250 -.656250 44.6875 -.960938 45.0938 -1.57031  c
45.5000 -2.17969 45.7031 -3.03125 45.7031 -4.12500  c
45.1198 -3.39583 44.4531 -3.03125 43.7031 -3.03125  c
42.9740 -3.03125 42.3568 -3.29948 41.8516 -3.83594  c
41.3464 -4.37240 41.0938 -5.03125 41.0938 -5.81250  c
41.0938 -6.69792 41.3620 -7.43229 41.8984 -8.01562  c
42.4349 -8.59896 43.1146 -8.89062 43.9375 -8.89062  c
44.8854 -8.89062 45.6302 -8.51302 46.1719 -7.75781  c
46.7135 -7.00260 46.9844 -5.96875 46.9844 -4.65625  c
46.9844 -3.16667 46.6536 -1.98177 45.9922 -1.10156  c
45.3307 -.221354 44.4323 .218750 43.2969 .218750  c
42.8490 .218750 42.2604 .130208 41.5312 -.0468750  c
h
42.2344 -6.03125 m
42.2344 -5.36458 42.3854 -4.83854 42.6875 -4.45312  c
42.9896 -4.06771 43.4010 -3.87500 43.9219 -3.87500  c
44.4115 -3.87500 44.8281 -4.03906 45.1719 -4.36719  c
45.5156 -4.69531 45.6875 -5.09375 45.6875 -5.56250  c
45.6875 -6.30208 45.5208 -6.89844 45.1875 -7.35156  c
44.8542 -7.80469 44.4167 -8.03125 43.8750 -8.03125  c
43.3646 -8.03125 42.9635 -7.85156 42.6719 -7.49219  c
42.3802 -7.13281 42.2344 -6.64583 42.2344 -6.03125  c
h
51.5254 .218750 m
50.6296 .218750 49.9056 -.203125 49.3535 -1.04688  c
48.8014 -1.89062 48.5254 -2.98958 48.5254 -4.34375  c
48.5254 -5.70833 48.8040 -6.80729 49.3613 -7.64062  c
49.9186 -8.47396 50.6504 -8.89062 51.5566 -8.89062  c
52.4629 -8.89062 53.1947 -8.47396 53.7520 -7.64062  c
54.3092 -6.80729 54.5879 -5.71354 54.5879 -4.35938  c
54.5879 -2.97396 54.3092 -1.86458 53.7520 -1.03125  c
53.1947 -.197917 52.4525 .218750 51.5254 .218750  c
h
51.5410 -.656250 m
52.7598 -.656250 53.3691 -1.89583 53.3691 -4.37500  c
53.3691 -6.80208 52.7650 -8.01562 51.5566 -8.01562  c
50.3587 -8.01562 49.7598 -6.79167 49.7598 -4.34375  c
49.7598 -1.88542 50.3535 -.656250 51.5410 -.656250  c
h
f
[ 1.52481 0.00000 0.00000 1.52481 97.9073 33.2351 ] defaultmatrix matrix concatmatrix setmatrix
.976471 .352941 .200000 RG
newpath
66.0858 200.981 m
45.0000 222.067 l
23.9142 200.981 l
45.0000 179.895 l
h
f
0.00000 0.00000 0.00000 RG
newpath
45.0000 178.481 m
67.5000 200.981 l
45.0000 223.481 l
22.5000 200.981 l
h
66.0858 200.981 m
45.0000 222.067 l
23.9142 200.981 l
45.0000 179.895 l
h
f*
45.0000 200.981 translate
1.00000 1.00000 scale
-23.3379 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
7.58789 0.00000 m
7.58789 -8.67188 l
9.29102 -8.67188 l
11.6973 -1.96875 l
14.1660 -8.67188 l
15.6816 -8.67188 l
15.6816 0.00000 l
14.5410 0.00000 l
14.5410 -7.06250 l
12.1504 -.578125 l
10.9629 -.578125 l
8.63477 -7.07812 l
8.63477 0.00000 l
7.58789 0.00000 l
h
21.6270 .218750 m
20.2832 .218750 19.2441 -.177083 18.5098 -.968750  c
17.7754 -1.76042 17.4082 -2.88021 17.4082 -4.32812  c
17.4082 -5.77604 17.7832 -6.89844 18.5332 -7.69531  c
19.2832 -8.49219 20.3353 -8.89062 21.6895 -8.89062  c
22.4707 -8.89062 23.3822 -8.76562 24.4238 -8.51562  c
24.4238 -7.35938 l
23.2363 -7.76562 22.3197 -7.96875 21.6738 -7.96875  c
20.7363 -7.96875 20.0098 -7.65104 19.4941 -7.01562  c
18.9785 -6.38021 18.7207 -5.47917 18.7207 -4.31250  c
18.7207 -3.20833 18.9941 -2.33854 19.5410 -1.70312  c
20.0879 -1.06771 20.8405 -.750000 21.7988 -.750000  c
22.6217 -.750000 23.5020 -1.00000 24.4395 -1.50000  c
24.4395 -.453125 l
23.5853 -.00520833 22.6478 .218750 21.6270 .218750  c
h
26.9141 0.00000 m
26.9141 -.875000 l
28.6484 -.875000 l
28.6484 -7.71875 l
26.9141 -7.28125 l
26.9141 -8.17188 l
29.8047 -8.89062 l
29.8047 -.875000 l
31.5391 -.875000 l
31.5391 0.00000 l
26.9141 0.00000 l
h
33.8145 0.00000 m
33.8145 -8.67188 l
35.0332 -8.67188 l
35.0332 -.921875 l
38.9395 -.921875 l
38.9395 0.00000 l
33.8145 0.00000 l
h
40.9004 0.00000 m
40.9004 -.875000 l
42.6348 -.875000 l
42.6348 -7.71875 l
40.9004 -7.28125 l
40.9004 -8.17188 l
43.7910 -8.89062 l
43.7910 -.875000 l
45.5254 -.875000 l
45.5254 0.00000 l
40.9004 0.00000 l
h
f
[ 1.52481 0.00000 0.00000 1.52481 97.9073 33.2351 ] defaultmatrix matrix concatmatrix setmatrix
.933333 .266667 .200000 RG
newpath
151.716 .703728 m
130.630 21.7895 l
109.544 .703728 l
130.630 -20.3821 l
h
f
0.00000 0.00000 0.00000 RG
newpath
130.630 -21.7963 m
153.130 .703728 l
130.630 23.2037 l
108.130 .703728 l
h
151.716 .703728 m
130.630 21.7895 l
109.544 .703728 l
130.630 -20.3821 l
h
f*
130.630 .703728 translate
1.00000 1.00000 scale
-30.9814 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -.921875 l
6.25000 -.921875 l
6.25000 0.00000 l
1.12500 0.00000 l
h
11.0078 .218750 m
9.80990 .218750 8.84375 -.197917 8.10938 -1.03125  c
7.37500 -1.86458 7.00781 -2.96875 7.00781 -4.34375  c
7.00781 -5.71875 7.37500 -6.82031 8.10938 -7.64844  c
8.84375 -8.47656 9.83073 -8.89062 11.0703 -8.89062  c
12.2891 -8.89062 13.2682 -8.47917 14.0078 -7.65625  c
14.7474 -6.83333 15.1172 -5.73438 15.1172 -4.35938  c
15.1172 -2.95312 14.7474 -1.83854 14.0078 -1.01562  c
13.2682 -.192708 12.2682 .218750 11.0078 .218750  c
h
11.0234 -.703125 m
11.9089 -.703125 12.5938 -1.02344 13.0781 -1.66406  c
13.5625 -2.30469 13.8047 -3.20312 13.8047 -4.35938  c
13.8047 -5.49479 13.5625 -6.38021 13.0781 -7.01562  c
12.5938 -7.65104 11.9245 -7.96875 11.0703 -7.96875  c
10.2057 -7.96875 9.53125 -7.64844 9.04688 -7.00781  c
8.56250 -6.36719 8.32031 -5.47917 8.32031 -4.34375  c
8.32031 -3.21875 8.55990 -2.33073 9.03906 -1.67969  c
9.51823 -1.02865 10.1797 -.703125 11.0234 -.703125  c
h
20.5488 .218750 m
19.2051 .218750 18.1660 -.177083 17.4316 -.968750  c
16.6973 -1.76042 16.3301 -2.88021 16.3301 -4.32812  c
16.3301 -5.77604 16.7051 -6.89844 17.4551 -7.69531  c
18.2051 -8.49219 19.2572 -8.89062 20.6113 -8.89062  c
21.3926 -8.89062 22.3040 -8.76562 23.3457 -8.51562  c
23.3457 -7.35938 l
22.1582 -7.76562 21.2415 -7.96875 20.5957 -7.96875  c
19.6582 -7.96875 18.9316 -7.65104 18.4160 -7.01562  c
17.9004 -6.38021 17.6426 -5.47917 17.6426 -4.31250  c
17.6426 -3.20833 17.9160 -2.33854 18.4629 -1.70312  c
19.0098 -1.06771 19.7624 -.750000 20.7207 -.750000  c
21.5436 -.750000 22.4238 -1.00000 23.3613 -1.50000  c
23.3613 -.453125 l
22.5072 -.00520833 21.5697 .218750 20.5488 .218750  c
h
25.4766 .0312500 m
25.4766 -1.00000 l
26.0599 -.770833 26.6068 -.656250 27.1172 -.656250  c
27.6901 -.656250 28.1406 -.822917 28.4688 -1.15625  c
28.7969 -1.48958 28.9609 -1.95312 28.9609 -2.54688  c
28.9609 -3.84896 28.0651 -4.50000 26.2734 -4.50000  c
26.0651 -4.50000 25.8516 -4.48438 25.6328 -4.45312  c
25.6328 -8.67188 l
30.0234 -8.67188 l
30.0234 -7.67188 l
26.6484 -7.67188 l
26.6484 -5.37500 l
27.7630 -5.37500 28.6328 -5.11979 29.2578 -4.60938  c
29.8828 -4.09896 30.1953 -3.39062 30.1953 -2.48438  c
30.1953 -1.64062 29.9089 -.979167 29.3359 -.500000  c
28.7630 -.0208333 27.9766 .218750 26.9766 .218750  c
26.5391 .218750 26.0391 .156250 25.4766 .0312500  c
h
33.0645 .0312500 m
33.0645 -1.00000 l
33.6478 -.770833 34.1947 -.656250 34.7051 -.656250  c
35.2780 -.656250 35.7285 -.822917 36.0566 -1.15625  c
36.3848 -1.48958 36.5488 -1.95312 36.5488 -2.54688  c
36.5488 -3.84896 35.6530 -4.50000 33.8613 -4.50000  c
33.6530 -4.50000 33.4395 -4.48438 33.2207 -4.45312  c
33.2207 -8.67188 l
37.6113 -8.67188 l
37.6113 -7.67188 l
34.2363 -7.67188 l
34.2363 -5.37500 l
35.3509 -5.37500 36.2207 -5.11979 36.8457 -4.60938  c
37.4707 -4.09896 37.7832 -3.39062 37.7832 -2.48438  c
37.7832 -1.64062 37.4967 -.979167 36.9238 -.500000  c
36.3509 -.0208333 35.5645 .218750 34.5645 .218750  c
34.1270 .218750 33.6270 .156250 33.0645 .0312500  c
h
40.6523 .0312500 m
40.6523 -1.00000 l
41.2357 -.770833 41.7826 -.656250 42.2930 -.656250  c
42.8659 -.656250 43.3164 -.822917 43.6445 -1.15625  c
43.9727 -1.48958 44.1367 -1.95312 44.1367 -2.54688  c
44.1367 -3.84896 43.2409 -4.50000 41.4492 -4.50000  c
41.2409 -4.50000 41.0273 -4.48438 40.8086 -4.45312  c
40.8086 -8.67188 l
45.1992 -8.67188 l
45.1992 -7.67188 l
41.8242 -7.67188 l
41.8242 -5.37500 l
42.9388 -5.37500 43.8086 -5.11979 44.4336 -4.60938  c
45.0586 -4.09896 45.3711 -3.39062 45.3711 -2.48438  c
45.3711 -1.64062 45.0846 -.979167 44.5117 -.500000  c
43.9388 -.0208333 43.1523 .218750 42.1523 .218750  c
41.7148 .218750 41.2148 .156250 40.6523 .0312500  c
h
48.8496 -4.50000 m
49.4017 -5.20833 50.0944 -5.56250 50.9277 -5.56250  c
51.6882 -5.56250 52.3105 -5.31250 52.7949 -4.81250  c
53.2793 -4.31250 53.5215 -3.67188 53.5215 -2.89062  c
53.5215 -1.98438 53.2507 -1.23958 52.7090 -.656250  c
52.1673 -.0729167 51.4798 .218750 50.6465 .218750  c
49.6882 .218750 48.9382 -.166667 48.3965 -.937500  c
47.8548 -1.70833 47.5840 -2.77604 47.5840 -4.14062  c
47.5840 -5.65104 47.8939 -6.82031 48.5137 -7.64844  c
49.1335 -8.47656 50.0059 -8.89062 51.1309 -8.89062  c
51.6517 -8.89062 52.2975 -8.78125 53.0684 -8.56250  c
53.0684 -7.56250 l
52.2559 -7.87500 51.5892 -8.03125 51.0684 -8.03125  c
49.5892 -8.03125 48.8496 -6.85417 48.8496 -4.50000  c
h
52.3496 -2.62500 m
52.3496 -3.28125 52.2038 -3.79688 51.9121 -4.17188  c
51.6204 -4.54688 51.2090 -4.73438 50.6777 -4.73438  c
50.1986 -4.73438 49.7819 -4.57031 49.4277 -4.24219  c
49.0736 -3.91406 48.8965 -3.52083 48.8965 -3.06250  c
48.8965 -2.33333 49.0632 -1.75000 49.3965 -1.31250  c
49.7298 -.875000 50.1725 -.656250 50.7246 -.656250  c
51.2246 -.656250 51.6204 -.833333 51.9121 -1.18750  c
52.2038 -1.54167 52.3496 -2.02083 52.3496 -2.62500  c
h
55.8281 .0312500 m
55.8281 -1.00000 l
56.4115 -.770833 56.9583 -.656250 57.4688 -.656250  c
58.0417 -.656250 58.4922 -.822917 58.8203 -1.15625  c
59.1484 -1.48958 59.3125 -1.95312 59.3125 -2.54688  c
59.3125 -3.84896 58.4167 -4.50000 56.6250 -4.50000  c
56.4167 -4.50000 56.2031 -4.48438 55.9844 -4.45312  c
55.9844 -8.67188 l
60.3750 -8.67188 l
60.3750 -7.67188 l
57.0000 -7.67188 l
57.0000 -5.37500 l
58.1146 -5.37500 58.9844 -5.11979 59.6094 -4.60938  c
60.2344 -4.09896 60.5469 -3.39062 60.5469 -2.48438  c
60.5469 -1.64062 60.2604 -.979167 59.6875 -.500000  c
59.1146 -.0208333 58.3281 .218750 57.3281 .218750  c
56.8906 .218750 56.3906 .156250 55.8281 .0312500  c
h
f
[ 1.52481 0.00000 0.00000 1.52481 97.9073 33.2351 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .972549 .772549 RG
newpath
66.5000 149.019 m
66.5000 160.893 56.8741 170.519 45.0000 170.519  c
33.1259 170.519 23.5000 160.893 23.5000 149.019  c
23.5000 137.145 33.1259 127.519 45.0000 127.519  c
56.8741 127.519 66.5000 137.145 66.5000 149.019  c
h
f
0.00000 0.00000 0.00000 RG
newpath
67.5000 149.019 m
67.5000 161.446 57.4264 171.519 45.0000 171.519  c
32.5736 171.519 22.5000 161.446 22.5000 149.019  c
22.5000 136.593 32.5736 126.519 45.0000 126.519  c
57.4264 126.519 67.5000 136.593 67.5000 149.019  c
h
66.5000 149.019 m
66.5000 160.893 56.8741 170.519 45.0000 170.519  c
33.1259 170.519 23.5000 160.893 23.5000 149.019  c
23.5000 137.145 33.1259 127.519 45.0000 127.519  c
56.8741 127.519 66.5000 137.145 66.5000 149.019  c
h
f*
45.0000 149.019 translate
1.00000 1.00000 scale
-19.1016 4.42090 translate
newpath
1.04688 -8.67188 m
2.28125 -8.67188 l
2.28125 -3.20312 l
2.28125 -2.32812 2.44271 -1.69271 2.76562 -1.29688  c
3.08854 -.901042 3.59896 -.703125 4.29688 -.703125  c
4.98438 -.703125 5.47135 -.890625 5.75781 -1.26562  c
6.04427 -1.64062 6.18750 -2.27083 6.18750 -3.15625  c
6.18750 -8.67188 l
7.26562 -8.67188 l
7.26562 -3.17188 l
7.26562 -1.99479 7.02344 -1.13542 6.53906 -.593750  c
6.05469 -.0520833 5.28125 .218750 4.21875 .218750  c
3.13542 .218750 2.33594 -.0598958 1.82031 -.617188  c
1.30469 -1.17448 1.04688 -2.04167 1.04688 -3.21875  c
1.04688 -8.67188 l
h
9.31445 0.00000 m
9.31445 -1.01562 l
9.64779 -1.79688 10.3249 -2.65104 11.3457 -3.57812  c
12.0176 -4.17188 l
12.8613 -4.94271 13.2832 -5.70833 13.2832 -6.46875  c
13.2832 -6.94792 13.1400 -7.32552 12.8535 -7.60156  c
12.5671 -7.87760 12.1686 -8.01562 11.6582 -8.01562  c
11.0540 -8.01562 10.3457 -7.78646 9.53320 -7.32812  c
9.53320 -8.34375 l
10.3040 -8.70833 11.0645 -8.89062 11.8145 -8.89062  c
12.6270 -8.89062 13.2806 -8.67188 13.7754 -8.23438  c
14.2702 -7.79688 14.5176 -7.21875 14.5176 -6.50000  c
14.5176 -5.97917 14.3926 -5.51562 14.1426 -5.10938  c
13.8926 -4.70312 13.4290 -4.21354 12.7520 -3.64062  c
12.3145 -3.26562 l
11.3874 -2.48438 10.8509 -1.73438 10.7051 -1.01562  c
14.4707 -1.01562 l
14.4707 0.00000 l
9.31445 0.00000 l
h
21.4180 -3.31250 m
19.9336 -7.06250 l
18.4648 -3.31250 l
21.4180 -3.31250 l
h
22.7148 0.00000 m
21.7773 -2.40625 l
18.1055 -2.40625 l
17.1523 0.00000 l
15.9961 0.00000 l
19.4492 -8.67188 l
20.6680 -8.67188 l
24.0430 0.00000 l
22.7148 0.00000 l
h
25.3066 0.00000 m
25.3066 -8.67188 l
30.1504 -8.67188 l
30.1504 -7.75000 l
26.5254 -7.75000 l
26.5254 -4.84375 l
29.5723 -4.84375 l
29.5723 -3.93750 l
26.5254 -3.93750 l
26.5254 0.00000 l
25.3066 0.00000 l
h
31.6152 0.00000 m
31.6152 -1.01562 l
31.9486 -1.79688 32.6257 -2.65104 33.6465 -3.57812  c
34.3184 -4.17188 l
35.1621 -4.94271 35.5840 -5.70833 35.5840 -6.46875  c
35.5840 -6.94792 35.4408 -7.32552 35.1543 -7.60156  c
34.8678 -7.87760 34.4694 -8.01562 33.9590 -8.01562  c
33.3548 -8.01562 32.6465 -7.78646 31.8340 -7.32812  c
31.8340 -8.34375 l
32.6048 -8.70833 33.3652 -8.89062 34.1152 -8.89062  c
34.9277 -8.89062 35.5814 -8.67188 36.0762 -8.23438  c
36.5710 -7.79688 36.8184 -7.21875 36.8184 -6.50000  c
36.8184 -5.97917 36.6934 -5.51562 36.4434 -5.10938  c
36.1934 -4.70312 35.7298 -4.21354 35.0527 -3.64062  c
34.6152 -3.26562 l
33.6882 -2.48438 33.1517 -1.73438 33.0059 -1.01562  c
36.7715 -1.01562 l
36.7715 0.00000 l
31.6152 0.00000 l
h
f
[ 1.52481 0.00000 0.00000 1.52481 97.9073 33.2351 ] defaultmatrix matrix concatmatrix setmatrix
.980392 .364706 .200000 RG
newpath
21.0858 175.000 m
0.00000 196.086 l
-21.0858 175.000 l
0.00000 153.914 l
h
f
0.00000 0.00000 0.00000 RG
newpath
0.00000 152.500 m
22.5000 175.000 l
0.00000 197.500 l
-22.5000 175.000 l
h
21.0858 175.000 m
0.00000 196.086 l
-21.0858 175.000 l
0.00000 153.914 l
h
f*
0.00000 175.000 translate
1.00000 1.00000 scale
-22.6816 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
11.2422 .218750 m
10.0443 .218750 9.07812 -.197917 8.34375 -1.03125  c
7.60938 -1.86458 7.24219 -2.96875 7.24219 -4.34375  c
7.24219 -5.71875 7.60938 -6.82031 8.34375 -7.64844  c
9.07812 -8.47656 10.0651 -8.89062 11.3047 -8.89062  c
12.5234 -8.89062 13.5026 -8.47917 14.2422 -7.65625  c
14.9818 -6.83333 15.3516 -5.73438 15.3516 -4.35938  c
15.3516 -2.95312 14.9818 -1.83854 14.2422 -1.01562  c
13.5026 -.192708 12.5026 .218750 11.2422 .218750  c
h
11.2578 -.703125 m
12.1432 -.703125 12.8281 -1.02344 13.3125 -1.66406  c
13.7969 -2.30469 14.0391 -3.20312 14.0391 -4.35938  c
14.0391 -5.49479 13.7969 -6.38021 13.3125 -7.01562  c
12.8281 -7.65104 12.1589 -7.96875 11.3047 -7.96875  c
10.4401 -7.96875 9.76562 -7.64844 9.28125 -7.00781  c
8.79688 -6.36719 8.55469 -5.47917 8.55469 -4.34375  c
8.55469 -3.21875 8.79427 -2.33073 9.27344 -1.67969  c
9.75260 -1.02865 10.4141 -.703125 11.2578 -.703125  c
h
17.0801 0.00000 m
17.0801 -8.67188 l
18.2988 -8.67188 l
18.2988 -.921875 l
22.2051 -.921875 l
22.2051 0.00000 l
17.0801 0.00000 l
h
23.4785 0.00000 m
23.4785 -8.67188 l
26.1035 -8.67188 l
26.9368 -8.67188 27.5749 -8.48958 28.0176 -8.12500  c
28.4603 -7.76042 28.6816 -7.22396 28.6816 -6.51562  c
28.6816 -5.35938 28.0983 -4.54167 26.9316 -4.06250  c
29.8223 0.00000 l
28.3066 0.00000 l
25.8379 -3.67188 l
24.6973 -3.67188 l
24.6973 0.00000 l
23.4785 0.00000 l
h
24.6973 -4.59375 m
25.0879 -4.59375 l
26.6400 -4.59375 27.4160 -5.19792 27.4160 -6.40625  c
27.4160 -7.30208 26.7650 -7.75000 25.4629 -7.75000  c
24.6973 -7.75000 l
24.6973 -4.59375 l
h
30.9414 0.00000 m
30.9414 -1.01562 l
31.2747 -1.79688 31.9518 -2.65104 32.9727 -3.57812  c
33.6445 -4.17188 l
34.4883 -4.94271 34.9102 -5.70833 34.9102 -6.46875  c
34.9102 -6.94792 34.7669 -7.32552 34.4805 -7.60156  c
34.1940 -7.87760 33.7956 -8.01562 33.2852 -8.01562  c
32.6810 -8.01562 31.9727 -7.78646 31.1602 -7.32812  c
31.1602 -8.34375 l
31.9310 -8.70833 32.6914 -8.89062 33.4414 -8.89062  c
34.2539 -8.89062 34.9076 -8.67188 35.4023 -8.23438  c
35.8971 -7.79688 36.1445 -7.21875 36.1445 -6.50000  c
36.1445 -5.97917 36.0195 -5.51562 35.7695 -5.10938  c
35.5195 -4.70312 35.0560 -4.21354 34.3789 -3.64062  c
33.9414 -3.26562 l
33.0143 -2.48438 32.4779 -1.73438 32.3320 -1.01562  c
36.0977 -1.01562 l
36.0977 0.00000 l
30.9414 0.00000 l
h
38.6543 0.00000 m
38.6543 -8.67188 l
39.8105 -8.67188 l
39.8105 -4.40625 l
43.3105 -8.67188 l
44.5449 -8.67188 l
41.1543 -4.53125 l
45.1543 0.00000 l
43.5918 0.00000 l
39.8105 -4.39062 l
39.8105 0.00000 l
38.6543 0.00000 l
h
f
[ 1.52481 0.00000 0.00000 1.52481 97.9073 33.2351 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
