%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:48:03 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.25878 0.00000 0.00000 1.25878 93.5283 27.0919 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
61.2525 145.540 m
93.6577 176.564 l
S
newpath
154.494 241.291 m
125.024 208.792 l
S
newpath
50.3488 151.836 m
61.0136 195.411 l
S
newpath
78.2300 20.4632 m
56.2500 58.5337 l
S
newpath
45.0000 107.481 m
45.0000 100.519 l
S
newpath
14.2644 95.7644 m
25.5144 89.2692 l
S
newpath
25.5144 118.731 m
14.2644 112.236 l
S
.537255 1.00000 .490196 RG
newpath
131.410 192.124 m
131.410 203.998 121.784 213.624 109.910 213.624  c
98.0361 213.624 88.4102 203.998 88.4102 192.124  c
88.4102 180.250 98.0361 170.624 109.910 170.624  c
121.784 170.624 131.410 180.250 131.410 192.124  c
h
f
0.00000 0.00000 0.00000 RG
newpath
132.410 192.124 m
132.410 204.550 122.337 214.624 109.910 214.624  c
97.4838 214.624 87.4102 204.550 87.4102 192.124  c
87.4102 179.698 97.4838 169.624 109.910 169.624  c
122.337 169.624 132.410 179.698 132.410 192.124  c
h
131.410 192.124 m
131.410 203.998 121.784 213.624 109.910 213.624  c
98.0361 213.624 88.4102 203.998 88.4102 192.124  c
88.4102 180.250 98.0361 170.624 109.910 170.624  c
121.784 170.624 131.410 180.250 131.410 192.124  c
h
f*
109.910 192.124 translate
1.00000 1.00000 scale
-15.4424 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
11.0723 .218750 m
9.87435 .218750 8.90820 -.197917 8.17383 -1.03125  c
7.43945 -1.86458 7.07227 -2.96875 7.07227 -4.34375  c
7.07227 -5.71875 7.43945 -6.82031 8.17383 -7.64844  c
8.90820 -8.47656 9.89518 -8.89062 11.1348 -8.89062  c
12.3535 -8.89062 13.3327 -8.47917 14.0723 -7.65625  c
14.8118 -6.83333 15.1816 -5.73438 15.1816 -4.35938  c
15.1816 -2.95312 14.8118 -1.83854 14.0723 -1.01562  c
13.3327 -.192708 12.3327 .218750 11.0723 .218750  c
h
11.0879 -.703125 m
11.9733 -.703125 12.6582 -1.02344 13.1426 -1.66406  c
13.6270 -2.30469 13.8691 -3.20312 13.8691 -4.35938  c
13.8691 -5.49479 13.6270 -6.38021 13.1426 -7.01562  c
12.6582 -7.65104 11.9889 -7.96875 11.1348 -7.96875  c
10.2702 -7.96875 9.59570 -7.64844 9.11133 -7.00781  c
8.62695 -6.36719 8.38477 -5.47917 8.38477 -4.34375  c
8.38477 -3.21875 8.62435 -2.33073 9.10352 -1.67969  c
9.58268 -1.02865 10.2441 -.703125 11.0879 -.703125  c
h
15.8789 0.00000 m
18.7539 -4.35938 l
16.0195 -8.67188 l
17.4727 -8.67188 l
19.5664 -5.40625 l
21.7539 -8.67188 l
22.9102 -8.67188 l
20.1445 -4.48438 l
22.9883 0.00000 l
21.5352 0.00000 l
19.3320 -3.43750 l
17.0508 0.00000 l
15.8789 0.00000 l
h
24.6562 -.0468750 m
24.6562 -1.03125 l
25.3958 -.781250 26.0208 -.656250 26.5312 -.656250  c
27.2500 -.656250 27.8125 -.960938 28.2188 -1.57031  c
28.6250 -2.17969 28.8281 -3.03125 28.8281 -4.12500  c
28.2448 -3.39583 27.5781 -3.03125 26.8281 -3.03125  c
26.0990 -3.03125 25.4818 -3.29948 24.9766 -3.83594  c
24.4714 -4.37240 24.2188 -5.03125 24.2188 -5.81250  c
24.2188 -6.69792 24.4870 -7.43229 25.0234 -8.01562  c
25.5599 -8.59896 26.2396 -8.89062 27.0625 -8.89062  c
28.0104 -8.89062 28.7552 -8.51302 29.2969 -7.75781  c
29.8385 -7.00260 30.1094 -5.96875 30.1094 -4.65625  c
30.1094 -3.16667 29.7786 -1.98177 29.1172 -1.10156  c
28.4557 -.221354 27.5573 .218750 26.4219 .218750  c
25.9740 .218750 25.3854 .130208 24.6562 -.0468750  c
h
25.3594 -6.03125 m
25.3594 -5.36458 25.5104 -4.83854 25.8125 -4.45312  c
26.1146 -4.06771 26.5260 -3.87500 27.0469 -3.87500  c
27.5365 -3.87500 27.9531 -4.03906 28.2969 -4.36719  c
28.6406 -4.69531 28.8125 -5.09375 28.8125 -5.56250  c
28.8125 -6.30208 28.6458 -6.89844 28.3125 -7.35156  c
27.9792 -7.80469 27.5417 -8.03125 27.0000 -8.03125  c
26.4896 -8.03125 26.0885 -7.85156 25.7969 -7.49219  c
25.5052 -7.13281 25.3594 -6.64583 25.3594 -6.03125  c
h
f
[ 1.25878 0.00000 0.00000 1.25878 93.5283 27.0919 ] defaultmatrix matrix concatmatrix setmatrix
.843137 1.00000 .694118 RG
newpath
87.8625 217.266 m
87.8625 229.140 78.2366 238.766 66.3625 238.766  c
54.4884 238.766 44.8625 229.140 44.8625 217.266  c
44.8625 205.392 54.4884 195.766 66.3625 195.766  c
78.2366 195.766 87.8625 205.392 87.8625 217.266  c
h
f
0.00000 0.00000 0.00000 RG
newpath
88.8625 217.266 m
88.8625 229.693 78.7889 239.766 66.3625 239.766  c
53.9361 239.766 43.8625 229.693 43.8625 217.266  c
43.8625 204.840 53.9361 194.766 66.3625 194.766  c
78.7889 194.766 88.8625 204.840 88.8625 217.266  c
h
87.8625 217.266 m
87.8625 229.140 78.2366 238.766 66.3625 238.766  c
54.4884 238.766 44.8625 229.140 44.8625 217.266  c
44.8625 205.392 54.4884 195.766 66.3625 195.766  c
78.2366 195.766 87.8625 205.392 87.8625 217.266  c
h
f*
66.3625 217.266 translate
1.00000 1.00000 scale
-13.9629 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -.921875 l
6.25000 -.921875 l
6.25000 0.00000 l
1.12500 0.00000 l
h
9.39844 0.00000 m
9.39844 -3.62500 l
6.49219 -8.67188 l
7.89844 -8.67188 l
10.1484 -4.76562 l
12.5859 -8.67188 l
13.7266 -8.67188 l
10.6172 -3.64062 l
10.6172 0.00000 l
9.39844 0.00000 l
h
16.6875 .218750 m
16.1146 .218750 15.3750 .0885417 14.4688 -.171875  c
14.4688 -1.39062 l
15.4375 -.932292 16.2396 -.703125 16.8750 -.703125  c
17.3542 -.703125 17.7422 -.830729 18.0391 -1.08594  c
18.3359 -1.34115 18.4844 -1.67708 18.4844 -2.09375  c
18.4844 -2.42708 18.3880 -2.71354 18.1953 -2.95312  c
18.0026 -3.19271 17.6458 -3.45833 17.1250 -3.75000  c
16.5312 -4.09375 l
15.7917 -4.52083 15.2708 -4.91927 14.9688 -5.28906  c
14.6667 -5.65885 14.5156 -6.09375 14.5156 -6.59375  c
14.5156 -7.26042 14.7578 -7.80990 15.2422 -8.24219  c
15.7266 -8.67448 16.3438 -8.89062 17.0938 -8.89062  c
17.7604 -8.89062 18.4635 -8.78125 19.2031 -8.56250  c
19.2031 -7.43750 l
18.2865 -7.79167 17.6042 -7.96875 17.1562 -7.96875  c
16.7292 -7.96875 16.3776 -7.85677 16.1016 -7.63281  c
15.8255 -7.40885 15.6875 -7.12500 15.6875 -6.78125  c
15.6875 -6.48958 15.7891 -6.23177 15.9922 -6.00781  c
16.1953 -5.78385 16.5677 -5.51562 17.1094 -5.20312  c
17.7188 -4.85938 l
18.4688 -4.43229 18.9922 -4.02865 19.2891 -3.64844  c
19.5859 -3.26823 19.7344 -2.81250 19.7344 -2.28125  c
19.7344 -1.53125 19.4583 -.927083 18.9062 -.468750  c
18.3542 -.0104167 17.6146 .218750 16.6875 .218750  c
h
23.5254 0.00000 m
23.5254 -7.75000 l
20.4473 -7.75000 l
20.4473 -8.67188 l
27.8223 -8.67188 l
27.8223 -7.75000 l
24.7441 -7.75000 l
24.7441 0.00000 l
23.5254 0.00000 l
h
f
[ 1.25878 0.00000 0.00000 1.25878 93.5283 27.0919 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .925490 .725490 RG
newpath
66.5000 78.0192 m
66.5000 89.8934 56.8741 99.5192 45.0000 99.5192  c
33.1259 99.5192 23.5000 89.8934 23.5000 78.0192  c
23.5000 66.1451 33.1259 56.5192 45.0000 56.5192  c
56.8741 56.5192 66.5000 66.1451 66.5000 78.0192  c
h
f
0.00000 0.00000 0.00000 RG
newpath
67.5000 78.0192 m
67.5000 90.4456 57.4264 100.519 45.0000 100.519  c
32.5736 100.519 22.5000 90.4456 22.5000 78.0192  c
22.5000 65.5928 32.5736 55.5192 45.0000 55.5192  c
57.4264 55.5192 67.5000 65.5928 67.5000 78.0192  c
h
66.5000 78.0192 m
66.5000 89.8934 56.8741 99.5192 45.0000 99.5192  c
33.1259 99.5192 23.5000 89.8934 23.5000 78.0192  c
23.5000 66.1451 33.1259 56.5192 45.0000 56.5192  c
56.8741 56.5192 66.5000 66.1451 66.5000 78.0192  c
h
f*
45.0000 78.0192 translate
1.00000 1.00000 scale
-21.3340 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
7.75781 0.00000 m
7.75781 -8.67188 l
10.1172 -8.67188 l
11.1589 -8.67188 11.9089 -8.49479 12.3672 -8.14062  c
12.8255 -7.78646 13.0547 -7.20833 13.0547 -6.40625  c
13.0547 -5.47917 12.7422 -4.75521 12.1172 -4.23438  c
11.4922 -3.71354 10.6276 -3.45312 9.52344 -3.45312  c
8.97656 -3.45312 l
8.97656 0.00000 l
7.75781 0.00000 l
h
8.97656 -4.37500 m
9.47656 -4.37500 l
10.2057 -4.37500 10.7682 -4.54427 11.1641 -4.88281  c
11.5599 -5.22135 11.7578 -5.69792 11.7578 -6.31250  c
11.7578 -6.82292 11.6016 -7.19010 11.2891 -7.41406  c
10.9766 -7.63802 10.4557 -7.75000 9.72656 -7.75000  c
8.97656 -7.75000 l
8.97656 -4.37500 l
h
18.7812 -3.31250 m
17.2969 -7.06250 l
15.8281 -3.31250 l
18.7812 -3.31250 l
h
20.0781 0.00000 m
19.1406 -2.40625 l
15.4688 -2.40625 l
14.5156 0.00000 l
13.3594 0.00000 l
16.8125 -8.67188 l
18.0312 -8.67188 l
21.4062 0.00000 l
20.0781 0.00000 l
h
22.6699 0.00000 m
22.6699 -8.67188 l
25.2949 -8.67188 l
26.1283 -8.67188 26.7663 -8.48958 27.2090 -8.12500  c
27.6517 -7.76042 27.8730 -7.22396 27.8730 -6.51562  c
27.8730 -5.35938 27.2897 -4.54167 26.1230 -4.06250  c
29.0137 0.00000 l
27.4980 0.00000 l
25.0293 -3.67188 l
23.8887 -3.67188 l
23.8887 0.00000 l
22.6699 0.00000 l
h
23.8887 -4.59375 m
24.2793 -4.59375 l
25.8314 -4.59375 26.6074 -5.19792 26.6074 -6.40625  c
26.6074 -7.30208 25.9564 -7.75000 24.6543 -7.75000  c
23.8887 -7.75000 l
23.8887 -4.59375 l
h
30.2578 0.00000 m
30.2578 -8.67188 l
32.5078 -8.67188 l
33.3724 -8.67188 34.0365 -8.50781 34.5000 -8.17969  c
34.9635 -7.85156 35.1953 -7.38021 35.1953 -6.76562  c
35.1953 -5.71354 34.6016 -4.96354 33.4141 -4.51562  c
34.8307 -4.08854 35.5391 -3.30729 35.5391 -2.17188  c
35.5391 -1.46354 35.3047 -.924479 34.8359 -.554688  c
34.3672 -.184896 33.6901 0.00000 32.8047 0.00000  c
30.2578 0.00000 l
h
31.4766 -.921875 m
31.7266 -.921875 l
32.6224 -.921875 33.2057 -.979167 33.4766 -1.09375  c
33.9870 -1.30208 34.2422 -1.69792 34.2422 -2.28125  c
34.2422 -2.80208 34.0104 -3.23177 33.5469 -3.57031  c
33.0833 -3.90885 32.5078 -4.07812 31.8203 -4.07812  c
31.4766 -4.07812 l
31.4766 -.921875 l
h
31.4766 -4.85938 m
31.8672 -4.85938 l
32.5234 -4.85938 33.0312 -5.00000 33.3906 -5.28125  c
33.7500 -5.56250 33.9297 -5.95833 33.9297 -6.46875  c
33.9297 -7.32292 33.2682 -7.75000 31.9453 -7.75000  c
31.4766 -7.75000 l
31.4766 -4.85938 l
h
37.1602 0.00000 m
37.1602 -8.67188 l
39.5195 -8.67188 l
40.5612 -8.67188 41.3112 -8.49479 41.7695 -8.14062  c
42.2279 -7.78646 42.4570 -7.20833 42.4570 -6.40625  c
42.4570 -5.47917 42.1445 -4.75521 41.5195 -4.23438  c
40.8945 -3.71354 40.0299 -3.45312 38.9258 -3.45312  c
38.3789 -3.45312 l
38.3789 0.00000 l
37.1602 0.00000 l
h
38.3789 -4.37500 m
38.8789 -4.37500 l
39.6081 -4.37500 40.1706 -4.54427 40.5664 -4.88281  c
40.9622 -5.22135 41.1602 -5.69792 41.1602 -6.31250  c
41.1602 -6.82292 41.0039 -7.19010 40.6914 -7.41406  c
40.3789 -7.63802 39.8581 -7.75000 39.1289 -7.75000  c
38.3789 -7.75000 l
38.3789 -4.37500 l
h
f
[ 1.25878 0.00000 0.00000 1.25878 93.5283 27.0919 ] defaultmatrix matrix concatmatrix setmatrix
.349020 .925490 .376471 RG
newpath
21.0858 104.000 m
0.00000 125.086 l
-21.0858 104.000 l
0.00000 82.9142 l
h
f
0.00000 0.00000 0.00000 RG
newpath
0.00000 81.5000 m
22.5000 104.000 l
0.00000 126.500 l
-22.5000 104.000 l
h
21.0858 104.000 m
0.00000 125.086 l
-21.0858 104.000 l
0.00000 82.9142 l
h
f*
0.00000 104.000 translate
1.00000 1.00000 scale
-18.2871 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
9.42773 0.00000 m
9.42773 -8.67188 l
12.0527 -8.67188 l
12.8861 -8.67188 13.5241 -8.48958 13.9668 -8.12500  c
14.4095 -7.76042 14.6309 -7.22396 14.6309 -6.51562  c
14.6309 -5.35938 14.0475 -4.54167 12.8809 -4.06250  c
15.7715 0.00000 l
14.2559 0.00000 l
11.7871 -3.67188 l
10.6465 -3.67188 l
10.6465 0.00000 l
9.42773 0.00000 l
h
10.6465 -4.59375 m
11.0371 -4.59375 l
12.5892 -4.59375 13.3652 -5.19792 13.3652 -6.40625  c
13.3652 -7.30208 12.7142 -7.75000 11.4121 -7.75000  c
10.6465 -7.75000 l
10.6465 -4.59375 l
h
18.7031 .218750 m
18.1302 .218750 17.3906 .0885417 16.4844 -.171875  c
16.4844 -1.39062 l
17.4531 -.932292 18.2552 -.703125 18.8906 -.703125  c
19.3698 -.703125 19.7578 -.830729 20.0547 -1.08594  c
20.3516 -1.34115 20.5000 -1.67708 20.5000 -2.09375  c
20.5000 -2.42708 20.4036 -2.71354 20.2109 -2.95312  c
20.0182 -3.19271 19.6615 -3.45833 19.1406 -3.75000  c
18.5469 -4.09375 l
17.8073 -4.52083 17.2865 -4.91927 16.9844 -5.28906  c
16.6823 -5.65885 16.5312 -6.09375 16.5312 -6.59375  c
16.5312 -7.26042 16.7734 -7.80990 17.2578 -8.24219  c
17.7422 -8.67448 18.3594 -8.89062 19.1094 -8.89062  c
19.7760 -8.89062 20.4792 -8.78125 21.2188 -8.56250  c
21.2188 -7.43750 l
20.3021 -7.79167 19.6198 -7.96875 19.1719 -7.96875  c
18.7448 -7.96875 18.3932 -7.85677 18.1172 -7.63281  c
17.8411 -7.40885 17.7031 -7.12500 17.7031 -6.78125  c
17.7031 -6.48958 17.8047 -6.23177 18.0078 -6.00781  c
18.2109 -5.78385 18.5833 -5.51562 19.1250 -5.20312  c
19.7344 -4.85938 l
20.4844 -4.43229 21.0078 -4.02865 21.3047 -3.64844  c
21.6016 -3.26823 21.7500 -2.81250 21.7500 -2.28125  c
21.7500 -1.53125 21.4740 -.927083 20.9219 -.468750  c
20.3698 -.0104167 19.6302 .218750 18.7031 .218750  c
h
23.4785 0.00000 m
23.4785 -8.67188 l
25.8379 -8.67188 l
26.8796 -8.67188 27.6296 -8.49479 28.0879 -8.14062  c
28.5462 -7.78646 28.7754 -7.20833 28.7754 -6.40625  c
28.7754 -5.47917 28.4629 -4.75521 27.8379 -4.23438  c
27.2129 -3.71354 26.3483 -3.45312 25.2441 -3.45312  c
24.6973 -3.45312 l
24.6973 0.00000 l
23.4785 0.00000 l
h
24.6973 -4.37500 m
25.1973 -4.37500 l
25.9264 -4.37500 26.4889 -4.54427 26.8848 -4.88281  c
27.2806 -5.22135 27.4785 -5.69792 27.4785 -6.31250  c
27.4785 -6.82292 27.3223 -7.19010 27.0098 -7.41406  c
26.6973 -7.63802 26.1764 -7.75000 25.4473 -7.75000  c
24.6973 -7.75000 l
24.6973 -4.37500 l
h
31.0488 -4.50000 m
31.6009 -5.20833 32.2936 -5.56250 33.1270 -5.56250  c
33.8874 -5.56250 34.5098 -5.31250 34.9941 -4.81250  c
35.4785 -4.31250 35.7207 -3.67188 35.7207 -2.89062  c
35.7207 -1.98438 35.4499 -1.23958 34.9082 -.656250  c
34.3665 -.0729167 33.6790 .218750 32.8457 .218750  c
31.8874 .218750 31.1374 -.166667 30.5957 -.937500  c
30.0540 -1.70833 29.7832 -2.77604 29.7832 -4.14062  c
29.7832 -5.65104 30.0931 -6.82031 30.7129 -7.64844  c
31.3327 -8.47656 32.2051 -8.89062 33.3301 -8.89062  c
33.8509 -8.89062 34.4967 -8.78125 35.2676 -8.56250  c
35.2676 -7.56250 l
34.4551 -7.87500 33.7884 -8.03125 33.2676 -8.03125  c
31.7884 -8.03125 31.0488 -6.85417 31.0488 -4.50000  c
h
34.5488 -2.62500 m
34.5488 -3.28125 34.4030 -3.79688 34.1113 -4.17188  c
33.8197 -4.54688 33.4082 -4.73438 32.8770 -4.73438  c
32.3978 -4.73438 31.9811 -4.57031 31.6270 -4.24219  c
31.2728 -3.91406 31.0957 -3.52083 31.0957 -3.06250  c
31.0957 -2.33333 31.2624 -1.75000 31.5957 -1.31250  c
31.9290 -.875000 32.3717 -.656250 32.9238 -.656250  c
33.4238 -.656250 33.8197 -.833333 34.1113 -1.18750  c
34.4030 -1.54167 34.5488 -2.02083 34.5488 -2.62500  c
h
f
[ 1.25878 0.00000 0.00000 1.25878 93.5283 27.0919 ] defaultmatrix matrix concatmatrix setmatrix
.309804 .862745 .352941 RG
newpath
186.280 253.091 m
165.194 274.177 l
144.109 253.091 l
165.194 232.005 l
h
f
0.00000 0.00000 0.00000 RG
newpath
165.194 230.591 m
187.694 253.091 l
165.194 275.591 l
142.694 253.091 l
h
186.280 253.091 m
165.194 274.177 l
144.109 253.091 l
165.194 232.005 l
h
f*
165.194 253.091 translate
1.00000 1.00000 scale
-19.2656 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.32812 -8.67188 l
6.68750 -1.96875 l
6.68750 -8.67188 l
7.75000 -8.67188 l
7.75000 0.00000 l
6.54688 0.00000 l
2.17188 -6.70312 l
2.17188 0.00000 l
1.12500 0.00000 l
h
9.99023 0.00000 m
9.99023 -8.67188 l
12.6152 -8.67188 l
13.4486 -8.67188 14.0866 -8.48958 14.5293 -8.12500  c
14.9720 -7.76042 15.1934 -7.22396 15.1934 -6.51562  c
15.1934 -5.35938 14.6100 -4.54167 13.4434 -4.06250  c
16.3340 0.00000 l
14.8184 0.00000 l
12.3496 -3.67188 l
11.2090 -3.67188 l
11.2090 0.00000 l
9.99023 0.00000 l
h
11.2090 -4.59375 m
11.5996 -4.59375 l
13.1517 -4.59375 13.9277 -5.19792 13.9277 -6.40625  c
13.9277 -7.30208 13.2767 -7.75000 11.9746 -7.75000  c
11.2090 -7.75000 l
11.2090 -4.59375 l
h
20.2188 .218750 m
19.3229 .218750 18.5990 -.203125 18.0469 -1.04688  c
17.4948 -1.89062 17.2188 -2.98958 17.2188 -4.34375  c
17.2188 -5.70833 17.4974 -6.80729 18.0547 -7.64062  c
18.6120 -8.47396 19.3438 -8.89062 20.2500 -8.89062  c
21.1562 -8.89062 21.8880 -8.47396 22.4453 -7.64062  c
23.0026 -6.80729 23.2812 -5.71354 23.2812 -4.35938  c
23.2812 -2.97396 23.0026 -1.86458 22.4453 -1.03125  c
21.8880 -.197917 21.1458 .218750 20.2188 .218750  c
h
20.2344 -.656250 m
21.4531 -.656250 22.0625 -1.89583 22.0625 -4.37500  c
22.0625 -6.80208 21.4583 -8.01562 20.2500 -8.01562  c
19.0521 -8.01562 18.4531 -6.79167 18.4531 -4.34375  c
18.4531 -1.88542 19.0469 -.656250 20.2344 -.656250  c
h
25.1660 0.00000 m
25.1660 -8.67188 l
27.4160 -8.67188 l
28.2806 -8.67188 28.9447 -8.50781 29.4082 -8.17969  c
29.8717 -7.85156 30.1035 -7.38021 30.1035 -6.76562  c
30.1035 -5.71354 29.5098 -4.96354 28.3223 -4.51562  c
29.7389 -4.08854 30.4473 -3.30729 30.4473 -2.17188  c
30.4473 -1.46354 30.2129 -.924479 29.7441 -.554688  c
29.2754 -.184896 28.5983 0.00000 27.7129 0.00000  c
25.1660 0.00000 l
h
26.3848 -.921875 m
26.6348 -.921875 l
27.5306 -.921875 28.1139 -.979167 28.3848 -1.09375  c
28.8952 -1.30208 29.1504 -1.69792 29.1504 -2.28125  c
29.1504 -2.80208 28.9186 -3.23177 28.4551 -3.57031  c
27.9915 -3.90885 27.4160 -4.07812 26.7285 -4.07812  c
26.3848 -4.07812 l
26.3848 -.921875 l
h
26.3848 -4.85938 m
26.7754 -4.85938 l
27.4316 -4.85938 27.9395 -5.00000 28.2988 -5.28125  c
28.6582 -5.56250 28.8379 -5.95833 28.8379 -6.46875  c
28.8379 -7.32292 28.1764 -7.75000 26.8535 -7.75000  c
26.3848 -7.75000 l
26.3848 -4.85938 l
h
32.7559 0.00000 m
32.7559 -.875000 l
34.4902 -.875000 l
34.4902 -7.71875 l
32.7559 -7.28125 l
32.7559 -8.17188 l
35.6465 -8.89062 l
35.6465 -.875000 l
37.3809 -.875000 l
37.3809 0.00000 l
32.7559 0.00000 l
h
f
[ 1.25878 0.00000 0.00000 1.25878 93.5283 27.0919 ] defaultmatrix matrix concatmatrix setmatrix
.972549 1.00000 .780392 RG
newpath
66.5000 129.981 m
66.5000 141.855 56.8741 151.481 45.0000 151.481  c
33.1259 151.481 23.5000 141.855 23.5000 129.981  c
23.5000 118.107 33.1259 108.481 45.0000 108.481  c
56.8741 108.481 66.5000 118.107 66.5000 129.981  c
h
f
0.00000 0.00000 0.00000 RG
newpath
67.5000 129.981 m
67.5000 142.407 57.4264 152.481 45.0000 152.481  c
32.5736 152.481 22.5000 142.407 22.5000 129.981  c
22.5000 117.554 32.5736 107.481 45.0000 107.481  c
57.4264 107.481 67.5000 117.554 67.5000 129.981  c
h
66.5000 129.981 m
66.5000 141.855 56.8741 151.481 45.0000 151.481  c
33.1259 151.481 23.5000 141.855 23.5000 129.981  c
23.5000 118.107 33.1259 108.481 45.0000 108.481  c
56.8741 108.481 66.5000 118.107 66.5000 129.981  c
h
f*
45.0000 129.981 translate
1.00000 1.00000 scale
-20.5020 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.82812 -8.67188 l
5.23438 -1.96875 l
7.70312 -8.67188 l
9.21875 -8.67188 l
9.21875 0.00000 l
8.07812 0.00000 l
8.07812 -7.06250 l
5.68750 -.578125 l
4.50000 -.578125 l
2.17188 -7.07812 l
2.17188 0.00000 l
1.12500 0.00000 l
h
11.4609 0.00000 m
11.4609 -8.67188 l
16.3047 -8.67188 l
16.3047 -7.75000 l
12.6797 -7.75000 l
12.6797 -4.96875 l
15.7109 -4.96875 l
15.7109 -4.06250 l
12.6797 -4.06250 l
12.6797 -.921875 l
16.5547 -.921875 l
16.5547 0.00000 l
11.4609 0.00000 l
h
17.9648 0.00000 m
17.9648 -8.67188 l
20.8398 -8.67188 l
21.7044 -8.67188 22.3997 -8.57552 22.9258 -8.38281  c
23.4518 -8.19010 23.9076 -7.86458 24.2930 -7.40625  c
24.9076 -6.68750 25.2148 -5.73438 25.2148 -4.54688  c
25.2148 -3.09896 24.8346 -1.97917 24.0742 -1.18750  c
23.3138 -.395833 22.2409 0.00000 20.8555 0.00000  c
17.9648 0.00000 l
h
19.1836 -.921875 m
20.7617 -.921875 l
21.8867 -.921875 22.6836 -1.22396 23.1523 -1.82812  c
23.6628 -2.47396 23.9180 -3.33854 23.9180 -4.42188  c
23.9180 -5.44271 23.6680 -6.24479 23.1680 -6.82812  c
22.8659 -7.18229 22.5065 -7.42448 22.0898 -7.55469  c
21.6732 -7.68490 21.0430 -7.75000 20.1992 -7.75000  c
19.1836 -7.75000 l
19.1836 -.921875 l
h
27.6406 0.00000 m
27.6406 -.875000 l
29.3750 -.875000 l
29.3750 -7.71875 l
27.6406 -7.28125 l
27.6406 -8.17188 l
30.5312 -8.89062 l
30.5312 -.875000 l
32.2656 -.875000 l
32.2656 0.00000 l
27.6406 0.00000 l
h
34.4160 0.00000 m
34.4160 -1.01562 l
34.7493 -1.79688 35.4264 -2.65104 36.4473 -3.57812  c
37.1191 -4.17188 l
37.9629 -4.94271 38.3848 -5.70833 38.3848 -6.46875  c
38.3848 -6.94792 38.2415 -7.32552 37.9551 -7.60156  c
37.6686 -7.87760 37.2702 -8.01562 36.7598 -8.01562  c
36.1556 -8.01562 35.4473 -7.78646 34.6348 -7.32812  c
34.6348 -8.34375 l
35.4056 -8.70833 36.1660 -8.89062 36.9160 -8.89062  c
37.7285 -8.89062 38.3822 -8.67188 38.8770 -8.23438  c
39.3717 -7.79688 39.6191 -7.21875 39.6191 -6.50000  c
39.6191 -5.97917 39.4941 -5.51562 39.2441 -5.10938  c
38.9941 -4.70312 38.5306 -4.21354 37.8535 -3.64062  c
37.4160 -3.26562 l
36.4889 -2.48438 35.9525 -1.73438 35.8066 -1.01562  c
39.5723 -1.01562 l
39.5723 0.00000 l
34.4160 0.00000 l
h
f
[ 1.25878 0.00000 0.00000 1.25878 93.5283 27.0919 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .968627 .768627 RG
newpath
110.980 .977617 m
110.980 12.8517 101.354 22.4776 89.4800 22.4776  c
77.6059 22.4776 67.9800 12.8517 67.9800 .977617  c
67.9800 -10.8965 77.6059 -20.5224 89.4800 -20.5224  c
101.354 -20.5224 110.980 -10.8965 110.980 .977617  c
h
f
0.00000 0.00000 0.00000 RG
newpath
111.980 .977617 m
111.980 13.4040 101.906 23.4776 89.4800 23.4776  c
77.0536 23.4776 66.9800 13.4040 66.9800 .977617  c
66.9800 -11.4488 77.0536 -21.5224 89.4800 -21.5224  c
101.906 -21.5224 111.980 -11.4488 111.980 .977617  c
h
110.980 .977617 m
110.980 12.8517 101.354 22.4776 89.4800 22.4776  c
77.6059 22.4776 67.9800 12.8517 67.9800 .977617  c
67.9800 -10.8965 77.6059 -20.5224 89.4800 -20.5224  c
101.354 -20.5224 110.980 -10.8965 110.980 .977617  c
h
f*
89.4800 .977617 translate
1.00000 1.00000 scale
-17.9502 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.96875 l
5.37500 -4.96875 l
5.37500 -4.06250 l
2.34375 -4.06250 l
2.34375 -.921875 l
6.21875 -.921875 l
6.21875 0.00000 l
1.12500 0.00000 l
h
7.62891 0.00000 m
7.62891 -8.67188 l
9.98828 -8.67188 l
11.0299 -8.67188 11.7799 -8.49479 12.2383 -8.14062  c
12.6966 -7.78646 12.9258 -7.20833 12.9258 -6.40625  c
12.9258 -5.47917 12.6133 -4.75521 11.9883 -4.23438  c
11.3633 -3.71354 10.4987 -3.45312 9.39453 -3.45312  c
8.84766 -3.45312 l
8.84766 0.00000 l
7.62891 0.00000 l
h
8.84766 -4.37500 m
9.34766 -4.37500 l
10.0768 -4.37500 10.6393 -4.54427 11.0352 -4.88281  c
11.4310 -5.22135 11.6289 -5.69792 11.6289 -6.31250  c
11.6289 -6.82292 11.4727 -7.19010 11.1602 -7.41406  c
10.8477 -7.63802 10.3268 -7.75000 9.59766 -7.75000  c
8.84766 -7.75000 l
8.84766 -4.37500 l
h
14.3555 -.0625000 m
14.3555 -1.14062 l
15.1888 -.817708 15.8398 -.656250 16.3086 -.656250  c
16.8607 -.656250 17.3112 -.817708 17.6602 -1.14062  c
18.0091 -1.46354 18.1836 -1.88021 18.1836 -2.39062  c
18.1836 -3.60938 17.3294 -4.21875 15.6211 -4.21875  c
15.1523 -4.21875 l
15.1523 -5.00000 l
15.5586 -5.00000 l
17.1628 -5.00000 17.9648 -5.56250 17.9648 -6.68750  c
17.9648 -7.57292 17.4388 -8.01562 16.3867 -8.01562  c
15.8034 -8.01562 15.1680 -7.85417 14.4805 -7.53125  c
14.4805 -8.54688 l
15.1576 -8.77604 15.8190 -8.89062 16.4648 -8.89062  c
18.2357 -8.89062 19.1211 -8.21875 19.1211 -6.87500  c
19.1211 -5.85417 18.5169 -5.13021 17.3086 -4.70312  c
18.7148 -4.38021 19.4180 -3.61458 19.4180 -2.40625  c
19.4180 -1.58333 19.1471 -.940104 18.6055 -.476562  c
18.0638 -.0130208 17.3242 .218750 16.3867 .218750  c
15.8451 .218750 15.1680 .125000 14.3555 -.0625000  c
h
24.4902 .218750 m
23.5944 .218750 22.8704 -.203125 22.3184 -1.04688  c
21.7663 -1.89062 21.4902 -2.98958 21.4902 -4.34375  c
21.4902 -5.70833 21.7689 -6.80729 22.3262 -7.64062  c
22.8835 -8.47396 23.6152 -8.89062 24.5215 -8.89062  c
25.4277 -8.89062 26.1595 -8.47396 26.7168 -7.64062  c
27.2741 -6.80729 27.5527 -5.71354 27.5527 -4.35938  c
27.5527 -2.97396 27.2741 -1.86458 26.7168 -1.03125  c
26.1595 -.197917 25.4173 .218750 24.4902 .218750  c
h
24.5059 -.656250 m
25.7246 -.656250 26.3340 -1.89583 26.3340 -4.37500  c
26.3340 -6.80208 25.7298 -8.01562 24.5215 -8.01562  c
23.3236 -8.01562 22.7246 -6.79167 22.7246 -4.34375  c
22.7246 -1.88542 23.3184 -.656250 24.5059 -.656250  c
h
32.0781 .218750 m
31.1823 .218750 30.4583 -.203125 29.9062 -1.04688  c
29.3542 -1.89062 29.0781 -2.98958 29.0781 -4.34375  c
29.0781 -5.70833 29.3568 -6.80729 29.9141 -7.64062  c
30.4714 -8.47396 31.2031 -8.89062 32.1094 -8.89062  c
33.0156 -8.89062 33.7474 -8.47396 34.3047 -7.64062  c
34.8620 -6.80729 35.1406 -5.71354 35.1406 -4.35938  c
35.1406 -2.97396 34.8620 -1.86458 34.3047 -1.03125  c
33.7474 -.197917 33.0052 .218750 32.0781 .218750  c
h
32.0938 -.656250 m
33.3125 -.656250 33.9219 -1.89583 33.9219 -4.37500  c
33.9219 -6.80208 33.3177 -8.01562 32.1094 -8.01562  c
30.9115 -8.01562 30.3125 -6.79167 30.3125 -4.34375  c
30.3125 -1.88542 30.9062 -.656250 32.0938 -.656250  c
h
f
[ 1.25878 0.00000 0.00000 1.25878 93.5283 27.0919 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
