%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:48:13 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.18030 0.00000 0.00000 1.18030 34.4557 26.2025 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
240.326 65.2600 m
218.805 20.5719 l
S
newpath
140.063 168.335 m
232.111 99.0616 l
S
newpath
266.359 119.318 m
259.851 105.804 l
S
newpath
64.2832 258.141 m
12.6725 216.982 l
S
newpath
91.6368 251.897 m
119.912 193.184 l
S
newpath
81.8744 249.669 m
81.8744 164.331 l
S
newpath
35.0852 175.010 m
72.1120 251.897 l
S
newpath
43.6416 263.443 m
59.9385 267.162 l
S
newpath
114.708 245.985 m
99.4656 258.141 l
S
newpath
108.906 231.822 m
18.4738 211.181 l
S
newpath
127.225 213.503 m
127.225 200.497 l
S
newpath
114.708 226.021 m
42.9140 168.767 l
S
newpath
108.906 240.184 m
43.6416 255.080 l
S
newpath
119.912 220.816 m
91.6368 162.103 l
S
newpath
99.4656 155.859 m
114.708 168.015 l
S
newpath
47.2587 149.732 m
59.9385 146.838 l
S
newpath
12.6725 197.018 m
64.2832 155.859 l
S
newpath
32.6362 244.075 m
72.1120 162.103 l
S
newpath
18.4738 202.819 m
108.906 182.178 l
S
newpath
7.46838 191.813 m
15.5604 175.010 l
S
newpath
18.0093 244.075 m
7.46838 222.187 l
S
newpath
254.335 145.210 m
145.112 173.383 l
S
newpath
37.8403 249.279 m
114.708 187.979 l
S
newpath
25.3228 236.762 m
25.3228 177.238 l
S
newpath
47.2587 159.745 m
108.906 173.816 l
S
1.00000 .831373 .631373 RG
newpath
271.588 85.5318 m
271.588 97.4059 261.963 107.032 250.088 107.032  c
238.214 107.032 228.588 97.4059 228.588 85.5318  c
228.588 73.6577 238.214 64.0318 250.088 64.0318  c
261.963 64.0318 271.588 73.6577 271.588 85.5318  c
h
f
0.00000 0.00000 0.00000 RG
newpath
272.588 85.5318 m
272.588 97.9582 262.515 108.032 250.088 108.032  c
237.662 108.032 227.588 97.9582 227.588 85.5318  c
227.588 73.1054 237.662 63.0318 250.088 63.0318  c
262.515 63.0318 272.588 73.1054 272.588 85.5318  c
h
271.588 85.5318 m
271.588 97.4059 261.962 107.032 250.088 107.032  c
238.214 107.032 228.588 97.4059 228.588 85.5318  c
228.588 73.6577 238.214 64.0318 250.088 64.0318  c
261.962 64.0318 271.588 73.6577 271.588 85.5318  c
h
f*
250.088 85.5318 translate
1.00000 1.00000 scale
-21.2314 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
7.75781 0.00000 m
7.75781 -8.67188 l
10.3828 -8.67188 l
11.2161 -8.67188 11.8542 -8.48958 12.2969 -8.12500  c
12.7396 -7.76042 12.9609 -7.22396 12.9609 -6.51562  c
12.9609 -5.35938 12.3776 -4.54167 11.2109 -4.06250  c
14.1016 0.00000 l
12.5859 0.00000 l
10.1172 -3.67188 l
8.97656 -3.67188 l
8.97656 0.00000 l
7.75781 0.00000 l
h
8.97656 -4.59375 m
9.36719 -4.59375 l
10.9193 -4.59375 11.6953 -5.19792 11.6953 -6.40625  c
11.6953 -7.30208 11.0443 -7.75000 9.74219 -7.75000  c
8.97656 -7.75000 l
8.97656 -4.59375 l
h
15.3457 0.00000 m
15.3457 -8.67188 l
17.7051 -8.67188 l
18.7467 -8.67188 19.4967 -8.49479 19.9551 -8.14062  c
20.4134 -7.78646 20.6426 -7.20833 20.6426 -6.40625  c
20.6426 -5.47917 20.3301 -4.75521 19.7051 -4.23438  c
19.0801 -3.71354 18.2155 -3.45312 17.1113 -3.45312  c
16.5645 -3.45312 l
16.5645 0.00000 l
15.3457 0.00000 l
h
16.5645 -4.37500 m
17.0645 -4.37500 l
17.7936 -4.37500 18.3561 -4.54427 18.7520 -4.88281  c
19.1478 -5.22135 19.3457 -5.69792 19.3457 -6.31250  c
19.3457 -6.82292 19.1895 -7.19010 18.8770 -7.41406  c
18.5645 -7.63802 18.0436 -7.75000 17.3145 -7.75000  c
16.5645 -7.75000 l
16.5645 -4.37500 l
h
21.9785 0.00000 m
21.9785 -8.67188 l
26.8223 -8.67188 l
26.8223 -7.75000 l
23.1973 -7.75000 l
23.1973 -4.84375 l
26.2441 -4.84375 l
26.2441 -3.93750 l
23.1973 -3.93750 l
23.1973 0.00000 l
21.9785 0.00000 l
h
29.0996 0.00000 m
29.0996 -.875000 l
30.8340 -.875000 l
30.8340 -7.71875 l
29.0996 -7.28125 l
29.0996 -8.17188 l
31.9902 -8.89062 l
31.9902 -.875000 l
33.7246 -.875000 l
33.7246 0.00000 l
29.0996 0.00000 l
h
36.2344 -.0468750 m
36.2344 -1.03125 l
36.9740 -.781250 37.5990 -.656250 38.1094 -.656250  c
38.8281 -.656250 39.3906 -.960938 39.7969 -1.57031  c
40.2031 -2.17969 40.4062 -3.03125 40.4062 -4.12500  c
39.8229 -3.39583 39.1562 -3.03125 38.4062 -3.03125  c
37.6771 -3.03125 37.0599 -3.29948 36.5547 -3.83594  c
36.0495 -4.37240 35.7969 -5.03125 35.7969 -5.81250  c
35.7969 -6.69792 36.0651 -7.43229 36.6016 -8.01562  c
37.1380 -8.59896 37.8177 -8.89062 38.6406 -8.89062  c
39.5885 -8.89062 40.3333 -8.51302 40.8750 -7.75781  c
41.4167 -7.00260 41.6875 -5.96875 41.6875 -4.65625  c
41.6875 -3.16667 41.3568 -1.98177 40.6953 -1.10156  c
40.0339 -.221354 39.1354 .218750 38.0000 .218750  c
37.5521 .218750 36.9635 .130208 36.2344 -.0468750  c
h
36.9375 -6.03125 m
36.9375 -5.36458 37.0885 -4.83854 37.3906 -4.45312  c
37.6927 -4.06771 38.1042 -3.87500 38.6250 -3.87500  c
39.1146 -3.87500 39.5312 -4.03906 39.8750 -4.36719  c
40.2188 -4.69531 40.3906 -5.09375 40.3906 -5.56250  c
40.3906 -6.30208 40.2240 -6.89844 39.8906 -7.35156  c
39.5573 -7.80469 39.1198 -8.03125 38.5781 -8.03125  c
38.0677 -8.03125 37.6667 -7.85156 37.3750 -7.49219  c
37.0833 -7.13281 36.9375 -6.64583 36.9375 -6.03125  c
h
f
[ 1.18030 0.00000 0.00000 1.18030 34.4557 26.2025 ] defaultmatrix matrix concatmatrix setmatrix
.462745 1.00000 .443137 RG
newpath
103.374 272.169 m
103.374 284.043 93.7485 293.669 81.8744 293.669  c
70.0003 293.669 60.3744 284.043 60.3744 272.169  c
60.3744 260.295 70.0003 250.669 81.8744 250.669  c
93.7485 250.669 103.374 260.295 103.374 272.169  c
h
f
0.00000 0.00000 0.00000 RG
newpath
104.374 272.169 m
104.374 284.596 94.3008 294.669 81.8744 294.669  c
69.4480 294.669 59.3744 284.596 59.3744 272.169  c
59.3744 259.743 69.4480 249.669 81.8744 249.669  c
94.3008 249.669 104.374 259.743 104.374 272.169  c
h
103.374 272.169 m
103.374 284.043 93.7486 293.669 81.8744 293.669  c
70.0003 293.669 60.3744 284.043 60.3744 272.169  c
60.3744 260.295 70.0003 250.669 81.8744 250.669  c
93.7486 250.669 103.374 260.295 103.374 272.169  c
h
f*
81.8744 272.169 translate
1.00000 1.00000 scale
-14.7393 4.42090 translate
newpath
3.00000 0.00000 m
3.00000 -3.62500 l
.0937500 -8.67188 l
1.50000 -8.67188 l
3.75000 -4.76562 l
6.18750 -8.67188 l
7.32812 -8.67188 l
4.21875 -3.64062 l
4.21875 0.00000 l
3.00000 0.00000 l
h
8.60156 0.00000 m
8.60156 -8.67188 l
10.8516 -8.67188 l
11.7161 -8.67188 12.3802 -8.50781 12.8438 -8.17969  c
13.3073 -7.85156 13.5391 -7.38021 13.5391 -6.76562  c
13.5391 -5.71354 12.9453 -4.96354 11.7578 -4.51562  c
13.1745 -4.08854 13.8828 -3.30729 13.8828 -2.17188  c
13.8828 -1.46354 13.6484 -.924479 13.1797 -.554688  c
12.7109 -.184896 12.0339 0.00000 11.1484 0.00000  c
8.60156 0.00000 l
h
9.82031 -.921875 m
10.0703 -.921875 l
10.9661 -.921875 11.5495 -.979167 11.8203 -1.09375  c
12.3307 -1.30208 12.5859 -1.69792 12.5859 -2.28125  c
12.5859 -2.80208 12.3542 -3.23177 11.8906 -3.57031  c
11.4271 -3.90885 10.8516 -4.07812 10.1641 -4.07812  c
9.82031 -4.07812 l
9.82031 -.921875 l
h
9.82031 -4.85938 m
10.2109 -4.85938 l
10.8672 -4.85938 11.3750 -5.00000 11.7344 -5.28125  c
12.0938 -5.56250 12.2734 -5.95833 12.2734 -6.46875  c
12.2734 -7.32292 11.6120 -7.75000 10.2891 -7.75000  c
9.82031 -7.75000 l
9.82031 -4.85938 l
h
14.4727 0.00000 m
17.3477 -4.35938 l
14.6133 -8.67188 l
16.0664 -8.67188 l
18.1602 -5.40625 l
20.3477 -8.67188 l
21.5039 -8.67188 l
18.7383 -4.48438 l
21.5820 0.00000 l
20.1289 0.00000 l
17.9258 -3.43750 l
15.6445 0.00000 l
14.4727 0.00000 l
h
23.7031 0.00000 m
23.7031 -.875000 l
25.4375 -.875000 l
25.4375 -7.71875 l
23.7031 -7.28125 l
23.7031 -8.17188 l
26.5938 -8.89062 l
26.5938 -.875000 l
28.3281 -.875000 l
28.3281 0.00000 l
23.7031 0.00000 l
h
f
[ 1.18030 0.00000 0.00000 1.18030 34.4557 26.2025 ] defaultmatrix matrix concatmatrix setmatrix
.278431 .819608 .341176 RG
newpath
148.311 236.003 m
127.225 257.089 l
106.140 236.003 l
127.225 214.917 l
h
f
0.00000 0.00000 0.00000 RG
newpath
127.225 213.503 m
149.725 236.003 l
127.225 258.503 l
104.725 236.003 l
h
148.311 236.003 m
127.225 257.089 l
106.140 236.003 l
127.225 214.917 l
h
f*
127.225 236.003 translate
1.00000 1.00000 scale
-22.0166 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
11.2422 .218750 m
10.0443 .218750 9.07812 -.197917 8.34375 -1.03125  c
7.60938 -1.86458 7.24219 -2.96875 7.24219 -4.34375  c
7.24219 -5.71875 7.60938 -6.82031 8.34375 -7.64844  c
9.07812 -8.47656 10.0651 -8.89062 11.3047 -8.89062  c
12.5234 -8.89062 13.5026 -8.47917 14.2422 -7.65625  c
14.9818 -6.83333 15.3516 -5.73438 15.3516 -4.35938  c
15.3516 -2.95312 14.9818 -1.83854 14.2422 -1.01562  c
13.5026 -.192708 12.5026 .218750 11.2422 .218750  c
h
11.2578 -.703125 m
12.1432 -.703125 12.8281 -1.02344 13.3125 -1.66406  c
13.7969 -2.30469 14.0391 -3.20312 14.0391 -4.35938  c
14.0391 -5.49479 13.7969 -6.38021 13.3125 -7.01562  c
12.8281 -7.65104 12.1589 -7.96875 11.3047 -7.96875  c
10.4401 -7.96875 9.76562 -7.64844 9.28125 -7.00781  c
8.79688 -6.36719 8.55469 -5.47917 8.55469 -4.34375  c
8.55469 -3.21875 8.79427 -2.33073 9.27344 -1.67969  c
9.75260 -1.02865 10.4141 -.703125 11.2578 -.703125  c
h
17.0801 0.00000 m
17.0801 -8.67188 l
18.2988 -8.67188 l
18.2988 -.921875 l
22.2051 -.921875 l
22.2051 0.00000 l
17.0801 0.00000 l
h
23.4785 0.00000 m
23.4785 -8.67188 l
26.1035 -8.67188 l
26.9368 -8.67188 27.5749 -8.48958 28.0176 -8.12500  c
28.4603 -7.76042 28.6816 -7.22396 28.6816 -6.51562  c
28.6816 -5.35938 28.0983 -4.54167 26.9316 -4.06250  c
29.8223 0.00000 l
28.3066 0.00000 l
25.8379 -3.67188 l
24.6973 -3.67188 l
24.6973 0.00000 l
23.4785 0.00000 l
h
24.6973 -4.59375 m
25.0879 -4.59375 l
26.6400 -4.59375 27.4160 -5.19792 27.4160 -6.40625  c
27.4160 -7.30208 26.7650 -7.75000 25.4629 -7.75000  c
24.6973 -7.75000 l
24.6973 -4.59375 l
h
30.9414 0.00000 m
30.9414 -1.01562 l
31.2747 -1.79688 31.9518 -2.65104 32.9727 -3.57812  c
33.6445 -4.17188 l
34.4883 -4.94271 34.9102 -5.70833 34.9102 -6.46875  c
34.9102 -6.94792 34.7669 -7.32552 34.4805 -7.60156  c
34.1940 -7.87760 33.7956 -8.01562 33.2852 -8.01562  c
32.6810 -8.01562 31.9727 -7.78646 31.1602 -7.32812  c
31.1602 -8.34375 l
31.9310 -8.70833 32.6914 -8.89062 33.4414 -8.89062  c
34.2539 -8.89062 34.9076 -8.67188 35.4023 -8.23438  c
35.8971 -7.79688 36.1445 -7.21875 36.1445 -6.50000  c
36.1445 -5.97917 36.0195 -5.51562 35.7695 -5.10938  c
35.5195 -4.70312 35.0560 -4.21354 34.3789 -3.64062  c
33.9414 -3.26562 l
33.0143 -2.48438 32.4779 -1.73438 32.3320 -1.01562  c
36.0977 -1.01562 l
36.0977 0.00000 l
30.9414 0.00000 l
h
38.6543 0.00000 m
38.6543 -8.67188 l
43.4980 -8.67188 l
43.4980 -7.75000 l
39.8730 -7.75000 l
39.8730 -4.96875 l
42.9043 -4.96875 l
42.9043 -4.06250 l
39.8730 -4.06250 l
39.8730 -.921875 l
43.7480 -.921875 l
43.7480 0.00000 l
38.6543 0.00000 l
h
f
[ 1.18030 0.00000 0.00000 1.18030 34.4557 26.2025 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
230.543 .300144 m
230.543 12.1743 220.917 21.8001 209.043 21.8001  c
197.169 21.8001 187.543 12.1743 187.543 .300144  c
187.543 -11.5740 197.169 -21.1999 209.043 -21.1999  c
220.917 -21.1999 230.543 -11.5740 230.543 .300144  c
h
f
0.00000 0.00000 0.00000 RG
newpath
231.543 .300144 m
231.543 12.7266 221.469 22.8001 209.043 22.8001  c
196.617 22.8001 186.543 12.7266 186.543 .300144  c
186.543 -12.1263 196.617 -22.1999 209.043 -22.1999  c
221.469 -22.1999 231.543 -12.1263 231.543 .300144  c
h
230.543 .300144 m
230.543 12.1743 220.917 21.8001 209.043 21.8001  c
197.169 21.8001 187.543 12.1743 187.543 .300144  c
187.543 -11.5740 197.169 -21.1999 209.043 -21.1999  c
220.917 -21.1999 230.543 -11.5740 230.543 .300144  c
h
f*
209.043 .300144 translate
1.00000 1.00000 scale
-29.1006 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.28125 -8.67188 l
2.28125 -4.40625 l
5.78125 -8.67188 l
7.01562 -8.67188 l
3.62500 -4.53125 l
7.62500 0.00000 l
6.06250 0.00000 l
2.28125 -4.39062 l
2.28125 0.00000 l
1.12500 0.00000 l
h
8.94336 0.00000 m
8.94336 -8.67188 l
10.1777 -8.67188 l
10.1777 0.00000 l
8.94336 0.00000 l
h
16.8066 -3.31250 m
15.3223 -7.06250 l
13.8535 -3.31250 l
16.8066 -3.31250 l
h
18.1035 0.00000 m
17.1660 -2.40625 l
13.4941 -2.40625 l
12.5410 0.00000 l
11.3848 0.00000 l
14.8379 -8.67188 l
16.0566 -8.67188 l
19.4316 0.00000 l
18.1035 0.00000 l
h
25.0859 -3.31250 m
23.6016 -7.06250 l
22.1328 -3.31250 l
25.0859 -3.31250 l
h
26.3828 0.00000 m
25.4453 -2.40625 l
21.7734 -2.40625 l
20.8203 0.00000 l
19.6641 0.00000 l
23.1172 -8.67188 l
24.3359 -8.67188 l
27.7109 0.00000 l
26.3828 0.00000 l
h
29.6621 0.00000 m
29.6621 -.875000 l
31.3965 -.875000 l
31.3965 -7.71875 l
29.6621 -7.28125 l
29.6621 -8.17188 l
32.5527 -8.89062 l
32.5527 -.875000 l
34.2871 -.875000 l
34.2871 0.00000 l
29.6621 0.00000 l
h
37.5000 -4.50000 m
38.0521 -5.20833 38.7448 -5.56250 39.5781 -5.56250  c
40.3385 -5.56250 40.9609 -5.31250 41.4453 -4.81250  c
41.9297 -4.31250 42.1719 -3.67188 42.1719 -2.89062  c
42.1719 -1.98438 41.9010 -1.23958 41.3594 -.656250  c
40.8177 -.0729167 40.1302 .218750 39.2969 .218750  c
38.3385 .218750 37.5885 -.166667 37.0469 -.937500  c
36.5052 -1.70833 36.2344 -2.77604 36.2344 -4.14062  c
36.2344 -5.65104 36.5443 -6.82031 37.1641 -7.64844  c
37.7839 -8.47656 38.6562 -8.89062 39.7812 -8.89062  c
40.3021 -8.89062 40.9479 -8.78125 41.7188 -8.56250  c
41.7188 -7.56250 l
40.9062 -7.87500 40.2396 -8.03125 39.7188 -8.03125  c
38.2396 -8.03125 37.5000 -6.85417 37.5000 -4.50000  c
h
41.0000 -2.62500 m
41.0000 -3.28125 40.8542 -3.79688 40.5625 -4.17188  c
40.2708 -4.54688 39.8594 -4.73438 39.3281 -4.73438  c
38.8490 -4.73438 38.4323 -4.57031 38.0781 -4.24219  c
37.7240 -3.91406 37.5469 -3.52083 37.5469 -3.06250  c
37.5469 -2.33333 37.7135 -1.75000 38.0469 -1.31250  c
38.3802 -.875000 38.8229 -.656250 39.3750 -.656250  c
39.8750 -.656250 40.2708 -.833333 40.5625 -1.18750  c
40.8542 -1.54167 41.0000 -2.02083 41.0000 -2.62500  c
h
46.7910 .218750 m
45.8952 .218750 45.1712 -.203125 44.6191 -1.04688  c
44.0671 -1.89062 43.7910 -2.98958 43.7910 -4.34375  c
43.7910 -5.70833 44.0697 -6.80729 44.6270 -7.64062  c
45.1842 -8.47396 45.9160 -8.89062 46.8223 -8.89062  c
47.7285 -8.89062 48.4603 -8.47396 49.0176 -7.64062  c
49.5749 -6.80729 49.8535 -5.71354 49.8535 -4.35938  c
49.8535 -2.97396 49.5749 -1.86458 49.0176 -1.03125  c
48.4603 -.197917 47.7181 .218750 46.7910 .218750  c
h
46.8066 -.656250 m
48.0254 -.656250 48.6348 -1.89583 48.6348 -4.37500  c
48.6348 -6.80208 48.0306 -8.01562 46.8223 -8.01562  c
45.6243 -8.01562 45.0254 -6.79167 45.0254 -4.34375  c
45.0254 -1.88542 45.6191 -.656250 46.8066 -.656250  c
h
55.1289 0.00000 m
55.1289 -2.45312 l
51.2227 -2.45312 l
51.2227 -3.32812 l
55.1289 -8.67188 l
56.2227 -8.67188 l
56.2227 -3.40625 l
57.3789 -3.40625 l
57.3789 -2.45312 l
56.2227 -2.45312 l
56.2227 0.00000 l
55.1289 0.00000 l
h
52.3633 -3.40625 m
55.2070 -3.40625 l
55.2070 -7.25000 l
52.3633 -3.40625 l
h
f
[ 1.18030 0.00000 0.00000 1.18030 34.4557 26.2025 ] defaultmatrix matrix concatmatrix setmatrix
.517647 1.00000 .478431 RG
newpath
103.374 141.831 m
103.374 153.705 93.7485 163.331 81.8744 163.331  c
70.0003 163.331 60.3744 153.705 60.3744 141.831  c
60.3744 129.957 70.0003 120.331 81.8744 120.331  c
93.7485 120.331 103.374 129.957 103.374 141.831  c
h
f
0.00000 0.00000 0.00000 RG
newpath
104.374 141.831 m
104.374 154.257 94.3008 164.331 81.8744 164.331  c
69.4480 164.331 59.3744 154.257 59.3744 141.831  c
59.3744 129.404 69.4480 119.331 81.8744 119.331  c
94.3008 119.331 104.374 129.404 104.374 141.831  c
h
103.374 141.831 m
103.374 153.705 93.7486 163.331 81.8744 163.331  c
70.0003 163.331 60.3744 153.705 60.3744 141.831  c
60.3744 129.957 70.0003 120.331 81.8744 120.331  c
93.7486 120.331 103.374 129.957 103.374 141.831  c
h
f*
81.8744 141.831 translate
1.00000 1.00000 scale
-17.2676 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
7.58789 0.00000 m
7.58789 -8.67188 l
12.4316 -8.67188 l
12.4316 -7.75000 l
8.80664 -7.75000 l
8.80664 -4.84375 l
11.8535 -4.84375 l
11.8535 -3.93750 l
8.80664 -3.93750 l
8.80664 0.00000 l
7.58789 0.00000 l
h
14.0215 0.00000 m
14.0215 -8.67188 l
16.6465 -8.67188 l
17.4798 -8.67188 18.1178 -8.48958 18.5605 -8.12500  c
19.0033 -7.76042 19.2246 -7.22396 19.2246 -6.51562  c
19.2246 -5.35938 18.6413 -4.54167 17.4746 -4.06250  c
20.3652 0.00000 l
18.8496 0.00000 l
16.3809 -3.67188 l
15.2402 -3.67188 l
15.2402 0.00000 l
14.0215 0.00000 l
h
15.2402 -4.59375 m
15.6309 -4.59375 l
17.1829 -4.59375 17.9590 -5.19792 17.9590 -6.40625  c
17.9590 -7.30208 17.3079 -7.75000 16.0059 -7.75000  c
15.2402 -7.75000 l
15.2402 -4.59375 l
h
23.2969 .218750 m
22.7240 .218750 21.9844 .0885417 21.0781 -.171875  c
21.0781 -1.39062 l
22.0469 -.932292 22.8490 -.703125 23.4844 -.703125  c
23.9635 -.703125 24.3516 -.830729 24.6484 -1.08594  c
24.9453 -1.34115 25.0938 -1.67708 25.0938 -2.09375  c
25.0938 -2.42708 24.9974 -2.71354 24.8047 -2.95312  c
24.6120 -3.19271 24.2552 -3.45833 23.7344 -3.75000  c
23.1406 -4.09375 l
22.4010 -4.52083 21.8802 -4.91927 21.5781 -5.28906  c
21.2760 -5.65885 21.1250 -6.09375 21.1250 -6.59375  c
21.1250 -7.26042 21.3672 -7.80990 21.8516 -8.24219  c
22.3359 -8.67448 22.9531 -8.89062 23.7031 -8.89062  c
24.3698 -8.89062 25.0729 -8.78125 25.8125 -8.56250  c
25.8125 -7.43750 l
24.8958 -7.79167 24.2135 -7.96875 23.7656 -7.96875  c
23.3385 -7.96875 22.9870 -7.85677 22.7109 -7.63281  c
22.4349 -7.40885 22.2969 -7.12500 22.2969 -6.78125  c
22.2969 -6.48958 22.3984 -6.23177 22.6016 -6.00781  c
22.8047 -5.78385 23.1771 -5.51562 23.7188 -5.20312  c
24.3281 -4.85938 l
25.0781 -4.43229 25.6016 -4.02865 25.8984 -3.64844  c
26.1953 -3.26823 26.3438 -2.81250 26.3438 -2.28125  c
26.3438 -1.53125 26.0677 -.927083 25.5156 -.468750  c
24.9635 -.0104167 24.2240 .218750 23.2969 .218750  c
h
28.4004 .0312500 m
28.4004 -1.00000 l
28.9837 -.770833 29.5306 -.656250 30.0410 -.656250  c
30.6139 -.656250 31.0645 -.822917 31.3926 -1.15625  c
31.7207 -1.48958 31.8848 -1.95312 31.8848 -2.54688  c
31.8848 -3.84896 30.9889 -4.50000 29.1973 -4.50000  c
28.9889 -4.50000 28.7754 -4.48438 28.5566 -4.45312  c
28.5566 -8.67188 l
32.9473 -8.67188 l
32.9473 -7.67188 l
29.5723 -7.67188 l
29.5723 -5.37500 l
30.6868 -5.37500 31.5566 -5.11979 32.1816 -4.60938  c
32.8066 -4.09896 33.1191 -3.39062 33.1191 -2.48438  c
33.1191 -1.64062 32.8327 -.979167 32.2598 -.500000  c
31.6868 -.0208333 30.9004 .218750 29.9004 .218750  c
29.4629 .218750 28.9629 .156250 28.4004 .0312500  c
h
f
[ 1.18030 0.00000 0.00000 1.18030 34.4557 26.2025 ] defaultmatrix matrix concatmatrix setmatrix
.321569 .886275 .360784 RG
newpath
21.2407 207.000 m
.154924 228.086 l
-20.9309 207.000 l
.154924 185.914 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.154924 184.500 m
22.6549 207.000 l
.154924 229.500 l
-22.3451 207.000 l
h
21.2407 207.000 m
.154924 228.086 l
-20.9309 207.000 l
.154924 185.914 l
h
f*
.154924 207.000 translate
1.00000 1.00000 scale
-18.0293 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
11.4609 .218750 m
10.1172 .218750 9.07812 -.177083 8.34375 -.968750  c
7.60938 -1.76042 7.24219 -2.88021 7.24219 -4.32812  c
7.24219 -5.77604 7.61719 -6.89844 8.36719 -7.69531  c
9.11719 -8.49219 10.1693 -8.89062 11.5234 -8.89062  c
12.3047 -8.89062 13.2161 -8.76562 14.2578 -8.51562  c
14.2578 -7.35938 l
13.0703 -7.76562 12.1536 -7.96875 11.5078 -7.96875  c
10.5703 -7.96875 9.84375 -7.65104 9.32812 -7.01562  c
8.81250 -6.38021 8.55469 -5.47917 8.55469 -4.31250  c
8.55469 -3.20833 8.82812 -2.33854 9.37500 -1.70312  c
9.92188 -1.06771 10.6745 -.750000 11.6328 -.750000  c
12.4557 -.750000 13.3359 -1.00000 14.2734 -1.50000  c
14.2734 -.453125 l
13.4193 -.00520833 12.4818 .218750 11.4609 .218750  c
h
16.0605 0.00000 m
16.0605 -8.67188 l
18.3105 -8.67188 l
19.1751 -8.67188 19.8392 -8.50781 20.3027 -8.17969  c
20.7663 -7.85156 20.9980 -7.38021 20.9980 -6.76562  c
20.9980 -5.71354 20.4043 -4.96354 19.2168 -4.51562  c
20.6335 -4.08854 21.3418 -3.30729 21.3418 -2.17188  c
21.3418 -1.46354 21.1074 -.924479 20.6387 -.554688  c
20.1699 -.184896 19.4928 0.00000 18.6074 0.00000  c
16.0605 0.00000 l
h
17.2793 -.921875 m
17.5293 -.921875 l
18.4251 -.921875 19.0085 -.979167 19.2793 -1.09375  c
19.7897 -1.30208 20.0449 -1.69792 20.0449 -2.28125  c
20.0449 -2.80208 19.8132 -3.23177 19.3496 -3.57031  c
18.8861 -3.90885 18.3105 -4.07812 17.6230 -4.07812  c
17.2793 -4.07812 l
17.2793 -.921875 l
h
17.2793 -4.85938 m
17.6699 -4.85938 l
18.3262 -4.85938 18.8340 -5.00000 19.1934 -5.28125  c
19.5527 -5.56250 19.7324 -5.95833 19.7324 -6.46875  c
19.7324 -7.32292 19.0710 -7.75000 17.7480 -7.75000  c
17.2793 -7.75000 l
17.2793 -4.85938 l
h
22.9629 0.00000 m
22.9629 -8.67188 l
25.3223 -8.67188 l
26.3639 -8.67188 27.1139 -8.49479 27.5723 -8.14062  c
28.0306 -7.78646 28.2598 -7.20833 28.2598 -6.40625  c
28.2598 -5.47917 27.9473 -4.75521 27.3223 -4.23438  c
26.6973 -3.71354 25.8327 -3.45312 24.7285 -3.45312  c
24.1816 -3.45312 l
24.1816 0.00000 l
22.9629 0.00000 l
h
24.1816 -4.37500 m
24.6816 -4.37500 l
25.4108 -4.37500 25.9733 -4.54427 26.3691 -4.88281  c
26.7650 -5.22135 26.9629 -5.69792 26.9629 -6.31250  c
26.9629 -6.82292 26.8066 -7.19010 26.4941 -7.41406  c
26.1816 -7.63802 25.6608 -7.75000 24.9316 -7.75000  c
24.1816 -7.75000 l
24.1816 -4.37500 l
h
30.2832 0.00000 m
30.2832 -.875000 l
32.0176 -.875000 l
32.0176 -7.71875 l
30.2832 -7.28125 l
30.2832 -8.17188 l
33.1738 -8.89062 l
33.1738 -.875000 l
34.9082 -.875000 l
34.9082 0.00000 l
30.2832 0.00000 l
h
f
[ 1.18030 0.00000 0.00000 1.18030 34.4557 26.2025 ] defaultmatrix matrix concatmatrix setmatrix
.521569 1.00000 .482353 RG
newpath
297.621 139.590 m
297.621 151.464 287.996 161.090 276.121 161.090  c
264.247 161.090 254.621 151.464 254.621 139.590  c
254.621 127.716 264.247 118.090 276.121 118.090  c
287.996 118.090 297.621 127.716 297.621 139.590  c
h
f
0.00000 0.00000 0.00000 RG
newpath
298.621 139.590 m
298.621 152.016 288.548 162.090 276.121 162.090  c
263.695 162.090 253.621 152.016 253.621 139.590  c
253.621 127.164 263.695 117.090 276.121 117.090  c
288.548 117.090 298.621 127.164 298.621 139.590  c
h
297.621 139.590 m
297.621 151.464 287.996 161.090 276.121 161.090  c
264.247 161.090 254.621 151.464 254.621 139.590  c
254.621 127.716 264.247 118.090 276.121 118.090  c
287.996 118.090 297.621 127.716 297.621 139.590  c
h
f*
276.121 139.590 translate
1.00000 1.00000 scale
-17.9297 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
11.0723 -8.67188 l
12.1139 -8.67188 12.8639 -8.49479 13.3223 -8.14062  c
13.7806 -7.78646 14.0098 -7.20833 14.0098 -6.40625  c
14.0098 -5.47917 13.6973 -4.75521 13.0723 -4.23438  c
12.4473 -3.71354 11.5827 -3.45312 10.4785 -3.45312  c
9.93164 -3.45312 l
9.93164 0.00000 l
8.71289 0.00000 l
h
9.93164 -4.37500 m
10.4316 -4.37500 l
11.1608 -4.37500 11.7233 -4.54427 12.1191 -4.88281  c
12.5150 -5.22135 12.7129 -5.69792 12.7129 -6.31250  c
12.7129 -6.82292 12.5566 -7.19010 12.2441 -7.41406  c
11.9316 -7.63802 11.4108 -7.75000 10.6816 -7.75000  c
9.93164 -7.75000 l
9.93164 -4.37500 l
h
17.0332 .218750 m
16.4603 .218750 15.7207 .0885417 14.8145 -.171875  c
14.8145 -1.39062 l
15.7832 -.932292 16.5853 -.703125 17.2207 -.703125  c
17.6999 -.703125 18.0879 -.830729 18.3848 -1.08594  c
18.6816 -1.34115 18.8301 -1.67708 18.8301 -2.09375  c
18.8301 -2.42708 18.7337 -2.71354 18.5410 -2.95312  c
18.3483 -3.19271 17.9915 -3.45833 17.4707 -3.75000  c
16.8770 -4.09375 l
16.1374 -4.52083 15.6165 -4.91927 15.3145 -5.28906  c
15.0124 -5.65885 14.8613 -6.09375 14.8613 -6.59375  c
14.8613 -7.26042 15.1035 -7.80990 15.5879 -8.24219  c
16.0723 -8.67448 16.6895 -8.89062 17.4395 -8.89062  c
18.1061 -8.89062 18.8092 -8.78125 19.5488 -8.56250  c
19.5488 -7.43750 l
18.6322 -7.79167 17.9499 -7.96875 17.5020 -7.96875  c
17.0749 -7.96875 16.7233 -7.85677 16.4473 -7.63281  c
16.1712 -7.40885 16.0332 -7.12500 16.0332 -6.78125  c
16.0332 -6.48958 16.1348 -6.23177 16.3379 -6.00781  c
16.5410 -5.78385 16.9134 -5.51562 17.4551 -5.20312  c
18.0645 -4.85938 l
18.8145 -4.43229 19.3379 -4.02865 19.6348 -3.64844  c
19.9316 -3.26823 20.0801 -2.81250 20.0801 -2.28125  c
20.0801 -1.53125 19.8040 -.927083 19.2520 -.468750  c
18.6999 -.0104167 17.9603 .218750 17.0332 .218750  c
h
22.4961 0.00000 m
22.4961 -.875000 l
24.2305 -.875000 l
24.2305 -7.71875 l
22.4961 -7.28125 l
22.4961 -8.17188 l
25.3867 -8.89062 l
25.3867 -.875000 l
27.1211 -.875000 l
27.1211 0.00000 l
22.4961 0.00000 l
h
30.3340 -4.50000 m
30.8861 -5.20833 31.5788 -5.56250 32.4121 -5.56250  c
33.1725 -5.56250 33.7949 -5.31250 34.2793 -4.81250  c
34.7637 -4.31250 35.0059 -3.67188 35.0059 -2.89062  c
35.0059 -1.98438 34.7350 -1.23958 34.1934 -.656250  c
33.6517 -.0729167 32.9642 .218750 32.1309 .218750  c
31.1725 .218750 30.4225 -.166667 29.8809 -.937500  c
29.3392 -1.70833 29.0684 -2.77604 29.0684 -4.14062  c
29.0684 -5.65104 29.3783 -6.82031 29.9980 -7.64844  c
30.6178 -8.47656 31.4902 -8.89062 32.6152 -8.89062  c
33.1361 -8.89062 33.7819 -8.78125 34.5527 -8.56250  c
34.5527 -7.56250 l
33.7402 -7.87500 33.0736 -8.03125 32.5527 -8.03125  c
31.0736 -8.03125 30.3340 -6.85417 30.3340 -4.50000  c
h
33.8340 -2.62500 m
33.8340 -3.28125 33.6882 -3.79688 33.3965 -4.17188  c
33.1048 -4.54688 32.6934 -4.73438 32.1621 -4.73438  c
31.6829 -4.73438 31.2663 -4.57031 30.9121 -4.24219  c
30.5579 -3.91406 30.3809 -3.52083 30.3809 -3.06250  c
30.3809 -2.33333 30.5475 -1.75000 30.8809 -1.31250  c
31.2142 -.875000 31.6569 -.656250 32.2090 -.656250  c
32.7090 -.656250 33.1048 -.833333 33.3965 -1.18750  c
33.6882 -1.54167 33.8340 -2.02083 33.8340 -2.62500  c
h
f
[ 1.18030 0.00000 0.00000 1.18030 34.4557 26.2025 ] defaultmatrix matrix concatmatrix setmatrix
.0627451 .494118 .231373 RG
newpath
46.4086 259.262 m
25.3228 280.347 l
4.23699 259.262 l
25.3228 238.176 l
h
f
0.00000 0.00000 0.00000 RG
newpath
25.3228 236.762 m
47.8228 259.262 l
25.3228 281.762 l
2.82278 259.262 l
h
46.4086 259.262 m
25.3228 280.347 l
4.23699 259.262 l
25.3228 238.176 l
h
f*
25.3228 259.262 translate
1.00000 1.00000 scale
-22.9453 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.32812 -8.67188 l
6.68750 -1.96875 l
6.68750 -8.67188 l
7.75000 -8.67188 l
7.75000 0.00000 l
6.54688 0.00000 l
2.17188 -6.70312 l
2.17188 0.00000 l
1.12500 0.00000 l
h
9.99023 0.00000 m
9.99023 -8.67188 l
11.2090 -8.67188 l
11.2090 -5.01562 l
15.3340 -5.01562 l
15.3340 -8.67188 l
16.5684 -8.67188 l
16.5684 0.00000 l
15.3340 0.00000 l
15.3340 -4.09375 l
11.2090 -4.09375 l
11.2090 0.00000 l
9.99023 0.00000 l
h
18.8086 0.00000 m
18.8086 -8.67188 l
21.1680 -8.67188 l
22.2096 -8.67188 22.9596 -8.49479 23.4180 -8.14062  c
23.8763 -7.78646 24.1055 -7.20833 24.1055 -6.40625  c
24.1055 -5.47917 23.7930 -4.75521 23.1680 -4.23438  c
22.5430 -3.71354 21.6784 -3.45312 20.5742 -3.45312  c
20.0273 -3.45312 l
20.0273 0.00000 l
18.8086 0.00000 l
h
20.0273 -4.37500 m
20.5273 -4.37500 l
21.2565 -4.37500 21.8190 -4.54427 22.2148 -4.88281  c
22.6107 -5.22135 22.8086 -5.69792 22.8086 -6.31250  c
22.8086 -6.82292 22.6523 -7.19010 22.3398 -7.41406  c
22.0273 -7.63802 21.5065 -7.75000 20.7773 -7.75000  c
20.0273 -7.75000 l
20.0273 -4.37500 l
h
25.3164 0.00000 m
25.3164 -1.01562 l
25.6497 -1.79688 26.3268 -2.65104 27.3477 -3.57812  c
28.0195 -4.17188 l
28.8633 -4.94271 29.2852 -5.70833 29.2852 -6.46875  c
29.2852 -6.94792 29.1419 -7.32552 28.8555 -7.60156  c
28.5690 -7.87760 28.1706 -8.01562 27.6602 -8.01562  c
27.0560 -8.01562 26.3477 -7.78646 25.5352 -7.32812  c
25.5352 -8.34375 l
26.3060 -8.70833 27.0664 -8.89062 27.8164 -8.89062  c
28.6289 -8.89062 29.2826 -8.67188 29.7773 -8.23438  c
30.2721 -7.79688 30.5195 -7.21875 30.5195 -6.50000  c
30.5195 -5.97917 30.3945 -5.51562 30.1445 -5.10938  c
29.8945 -4.70312 29.4310 -4.21354 28.7539 -3.64062  c
28.3164 -3.26562 l
27.3893 -2.48438 26.8529 -1.73438 26.7070 -1.01562  c
30.4727 -1.01562 l
30.4727 0.00000 l
25.3164 0.00000 l
h
33.0293 0.00000 m
33.0293 -8.67188 l
34.2480 -8.67188 l
34.2480 -.921875 l
38.1543 -.921875 l
38.1543 0.00000 l
33.0293 0.00000 l
h
40.1152 0.00000 m
40.1152 -.875000 l
41.8496 -.875000 l
41.8496 -7.71875 l
40.1152 -7.28125 l
40.1152 -8.17188 l
43.0059 -8.89062 l
43.0059 -.875000 l
44.7402 -.875000 l
44.7402 0.00000 l
40.1152 0.00000 l
h
f
[ 1.18030 0.00000 0.00000 1.18030 34.4557 26.2025 ] defaultmatrix matrix concatmatrix setmatrix
.356863 .937255 .380392 RG
newpath
148.311 177.997 m
127.225 199.083 l
106.140 177.997 l
127.225 156.911 l
h
f
0.00000 0.00000 0.00000 RG
newpath
127.225 155.497 m
149.725 177.997 l
127.225 200.497 l
104.725 177.997 l
h
148.311 177.997 m
127.225 199.083 l
106.140 177.997 l
127.225 156.911 l
h
f*
127.225 177.997 translate
1.00000 1.00000 scale
-18.1758 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
7.58789 0.00000 m
7.58789 -8.67188 l
12.4316 -8.67188 l
12.4316 -7.75000 l
8.80664 -7.75000 l
8.80664 -4.84375 l
11.8535 -4.84375 l
11.8535 -3.93750 l
8.80664 -3.93750 l
8.80664 0.00000 l
7.58789 0.00000 l
h
14.1152 -.0625000 m
14.1152 -1.14062 l
14.9486 -.817708 15.5996 -.656250 16.0684 -.656250  c
16.6204 -.656250 17.0710 -.817708 17.4199 -1.14062  c
17.7689 -1.46354 17.9434 -1.88021 17.9434 -2.39062  c
17.9434 -3.60938 17.0892 -4.21875 15.3809 -4.21875  c
14.9121 -4.21875 l
14.9121 -5.00000 l
15.3184 -5.00000 l
16.9225 -5.00000 17.7246 -5.56250 17.7246 -6.68750  c
17.7246 -7.57292 17.1986 -8.01562 16.1465 -8.01562  c
15.5632 -8.01562 14.9277 -7.85417 14.2402 -7.53125  c
14.2402 -8.54688 l
14.9173 -8.77604 15.5788 -8.89062 16.2246 -8.89062  c
17.9954 -8.89062 18.8809 -8.21875 18.8809 -6.87500  c
18.8809 -5.85417 18.2767 -5.13021 17.0684 -4.70312  c
18.4746 -4.38021 19.1777 -3.61458 19.1777 -2.40625  c
19.1777 -1.58333 18.9069 -.940104 18.3652 -.476562  c
17.8236 -.0130208 17.0840 .218750 16.1465 .218750  c
15.6048 .218750 14.9277 .125000 14.1152 -.0625000  c
h
26.0000 -3.31250 m
24.5156 -7.06250 l
23.0469 -3.31250 l
26.0000 -3.31250 l
h
27.2969 0.00000 m
26.3594 -2.40625 l
22.6875 -2.40625 l
21.7344 0.00000 l
20.5781 0.00000 l
24.0312 -8.67188 l
25.2500 -8.67188 l
28.6250 0.00000 l
27.2969 0.00000 l
h
30.5762 0.00000 m
30.5762 -.875000 l
32.3105 -.875000 l
32.3105 -7.71875 l
30.5762 -7.28125 l
30.5762 -8.17188 l
33.4668 -8.89062 l
33.4668 -.875000 l
35.2012 -.875000 l
35.2012 0.00000 l
30.5762 0.00000 l
h
f
[ 1.18030 0.00000 0.00000 1.18030 34.4557 26.2025 ] defaultmatrix matrix concatmatrix setmatrix
.407843 1.00000 .403922 RG
newpath
46.8228 154.738 m
46.8228 166.613 37.1969 176.238 25.3228 176.238  c
13.4487 176.238 3.82278 166.613 3.82278 154.738  c
3.82278 142.864 13.4487 133.238 25.3228 133.238  c
37.1969 133.238 46.8228 142.864 46.8228 154.738  c
h
f
0.00000 0.00000 0.00000 RG
newpath
47.8228 154.738 m
47.8228 167.165 37.7492 177.238 25.3228 177.238  c
12.8964 177.238 2.82278 167.165 2.82278 154.738  c
2.82278 142.312 12.8964 132.238 25.3228 132.238  c
37.7492 132.238 47.8228 142.312 47.8228 154.738  c
h
46.8228 154.738 m
46.8228 166.613 37.1969 176.238 25.3228 176.238  c
13.4487 176.238 3.82278 166.613 3.82278 154.738  c
3.82278 142.864 13.4487 133.238 25.3228 133.238  c
37.1969 133.238 46.8228 142.864 46.8228 154.738  c
h
f*
25.3228 154.738 translate
1.00000 1.00000 scale
-24.1553 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -5.01562 l
6.46875 -5.01562 l
6.46875 -8.67188 l
7.70312 -8.67188 l
7.70312 0.00000 l
6.46875 0.00000 l
6.46875 -4.09375 l
2.34375 -4.09375 l
2.34375 0.00000 l
1.12500 0.00000 l
h
9.94336 0.00000 m
9.94336 -8.67188 l
11.1465 -8.67188 l
15.5059 -1.96875 l
15.5059 -8.67188 l
16.5684 -8.67188 l
16.5684 0.00000 l
15.3652 0.00000 l
10.9902 -6.70312 l
10.9902 0.00000 l
9.94336 0.00000 l
h
18.8086 0.00000 m
18.8086 -8.67188 l
21.4336 -8.67188 l
22.2669 -8.67188 22.9049 -8.48958 23.3477 -8.12500  c
23.7904 -7.76042 24.0117 -7.22396 24.0117 -6.51562  c
24.0117 -5.35938 23.4284 -4.54167 22.2617 -4.06250  c
25.1523 0.00000 l
23.6367 0.00000 l
21.1680 -3.67188 l
20.0273 -3.67188 l
20.0273 0.00000 l
18.8086 0.00000 l
h
20.0273 -4.59375 m
20.4180 -4.59375 l
21.9701 -4.59375 22.7461 -5.19792 22.7461 -6.40625  c
22.7461 -7.30208 22.0951 -7.75000 20.7930 -7.75000  c
20.0273 -7.75000 l
20.0273 -4.59375 l
h
26.3965 0.00000 m
26.3965 -8.67188 l
28.7559 -8.67188 l
29.7975 -8.67188 30.5475 -8.49479 31.0059 -8.14062  c
31.4642 -7.78646 31.6934 -7.20833 31.6934 -6.40625  c
31.6934 -5.47917 31.3809 -4.75521 30.7559 -4.23438  c
30.1309 -3.71354 29.2663 -3.45312 28.1621 -3.45312  c
27.6152 -3.45312 l
27.6152 0.00000 l
26.3965 0.00000 l
h
27.6152 -4.37500 m
28.1152 -4.37500 l
28.8444 -4.37500 29.4069 -4.54427 29.8027 -4.88281  c
30.1986 -5.22135 30.3965 -5.69792 30.3965 -6.31250  c
30.3965 -6.82292 30.2402 -7.19010 29.9277 -7.41406  c
29.6152 -7.63802 29.0944 -7.75000 28.3652 -7.75000  c
27.6152 -7.75000 l
27.6152 -4.37500 l
h
33.0293 0.00000 m
33.0293 -8.67188 l
34.2480 -8.67188 l
34.2480 -5.01562 l
38.3730 -5.01562 l
38.3730 -8.67188 l
39.6074 -8.67188 l
39.6074 0.00000 l
38.3730 0.00000 l
38.3730 -4.09375 l
34.2480 -4.09375 l
34.2480 0.00000 l
33.0293 0.00000 l
h
41.7227 0.00000 m
41.7227 -1.01562 l
42.0560 -1.79688 42.7331 -2.65104 43.7539 -3.57812  c
44.4258 -4.17188 l
45.2695 -4.94271 45.6914 -5.70833 45.6914 -6.46875  c
45.6914 -6.94792 45.5482 -7.32552 45.2617 -7.60156  c
44.9753 -7.87760 44.5768 -8.01562 44.0664 -8.01562  c
43.4622 -8.01562 42.7539 -7.78646 41.9414 -7.32812  c
41.9414 -8.34375 l
42.7122 -8.70833 43.4727 -8.89062 44.2227 -8.89062  c
45.0352 -8.89062 45.6888 -8.67188 46.1836 -8.23438  c
46.6784 -7.79688 46.9258 -7.21875 46.9258 -6.50000  c
46.9258 -5.97917 46.8008 -5.51562 46.5508 -5.10938  c
46.3008 -4.70312 45.8372 -4.21354 45.1602 -3.64062  c
44.7227 -3.26562 l
43.7956 -2.48438 43.2591 -1.73438 43.1133 -1.01562  c
46.8789 -1.01562 l
46.8789 0.00000 l
41.7227 0.00000 l
h
f
[ 1.18030 0.00000 0.00000 1.18030 34.4557 26.2025 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
