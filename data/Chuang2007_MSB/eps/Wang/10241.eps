%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:46:18 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.60927 0.00000 0.00000 1.60927 34.5994 68.4379 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
63.4226 58.0774 m
110.671 71.8470 l
S
newpath
20.4856 67.7308 m
31.7356 61.2356 l
S
newpath
104.015 12.8341 m
59.2953 43.7953 l
S
newpath
15.2644 35.2548 m
31.7356 44.7644 l
S
newpath
144.461 97.0554 m
164.666 128.409 l
S
newpath
182.539 45.7495 m
151.186 65.9544 l
S
newpath
1.00000 56.4808 m
1.00000 49.5192 l
S
.898039 .192157 .200000 RG
newpath
67.0858 53.0000 m
46.0000 74.0858 l
24.9142 53.0000 l
46.0000 31.9142 l
h
f
0.00000 0.00000 0.00000 RG
newpath
46.0000 30.5000 m
68.5000 53.0000 l
46.0000 75.5000 l
23.5000 53.0000 l
h
67.0858 53.0000 m
46.0000 74.0858 l
24.9142 53.0000 l
46.0000 31.9142 l
h
f*
46.0000 53.0000 translate
1.00000 1.00000 scale
-15.5859 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
7.58789 0.00000 m
7.58789 -8.67188 l
8.80664 -8.67188 l
8.80664 -5.01562 l
12.9316 -5.01562 l
12.9316 -8.67188 l
14.1660 -8.67188 l
14.1660 0.00000 l
12.9316 0.00000 l
12.9316 -4.09375 l
8.80664 -4.09375 l
8.80664 0.00000 l
7.58789 0.00000 l
h
20.1094 .218750 m
18.7656 .218750 17.7266 -.177083 16.9922 -.968750  c
16.2578 -1.76042 15.8906 -2.88021 15.8906 -4.32812  c
15.8906 -5.77604 16.2656 -6.89844 17.0156 -7.69531  c
17.7656 -8.49219 18.8177 -8.89062 20.1719 -8.89062  c
20.9531 -8.89062 21.8646 -8.76562 22.9062 -8.51562  c
22.9062 -7.35938 l
21.7188 -7.76562 20.8021 -7.96875 20.1562 -7.96875  c
19.2188 -7.96875 18.4922 -7.65104 17.9766 -7.01562  c
17.4609 -6.38021 17.2031 -5.47917 17.2031 -4.31250  c
17.2031 -3.20833 17.4766 -2.33854 18.0234 -1.70312  c
18.5703 -1.06771 19.3229 -.750000 20.2812 -.750000  c
21.1042 -.750000 21.9844 -1.00000 22.9219 -1.50000  c
22.9219 -.453125 l
22.0677 -.00520833 21.1302 .218750 20.1094 .218750  c
h
25.3965 0.00000 m
25.3965 -.875000 l
27.1309 -.875000 l
27.1309 -7.71875 l
25.3965 -7.28125 l
25.3965 -8.17188 l
28.2871 -8.89062 l
28.2871 -.875000 l
30.0215 -.875000 l
30.0215 0.00000 l
25.3965 0.00000 l
h
f
[ 1.60927 0.00000 0.00000 1.60927 34.5994 68.4379 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .435294 .235294 RG
newpath
144.014 .0265942 m
144.014 11.9007 134.388 21.5266 122.514 21.5266  c
110.640 21.5266 101.014 11.9007 101.014 .0265942  c
101.014 -11.8475 110.640 -21.4734 122.514 -21.4734  c
134.388 -21.4734 144.014 -11.8475 144.014 .0265942  c
h
f
0.00000 0.00000 0.00000 RG
newpath
145.014 .0265942 m
145.014 12.4530 134.941 22.5266 122.514 22.5266  c
110.088 22.5266 100.014 12.4530 100.014 .0265942  c
100.014 -12.3998 110.088 -22.4734 122.514 -22.4734  c
134.941 -22.4734 145.014 -12.3998 145.014 .0265942  c
h
144.014 .0265942 m
144.014 11.9007 134.388 21.5266 122.514 21.5266  c
110.640 21.5266 101.014 11.9007 101.014 .0265942  c
101.014 -11.8475 110.640 -21.4734 122.514 -21.4734  c
134.388 -21.4734 144.014 -11.8475 144.014 .0265942  c
h
f*
122.514 .0265942 translate
1.00000 1.00000 scale
-22.6084 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
7.75781 0.00000 m
7.75781 -8.67188 l
10.6328 -8.67188 l
11.4974 -8.67188 12.1927 -8.57552 12.7188 -8.38281  c
13.2448 -8.19010 13.7005 -7.86458 14.0859 -7.40625  c
14.7005 -6.68750 15.0078 -5.73438 15.0078 -4.54688  c
15.0078 -3.09896 14.6276 -1.97917 13.8672 -1.18750  c
13.1068 -.395833 12.0339 0.00000 10.6484 0.00000  c
7.75781 0.00000 l
h
8.97656 -.921875 m
10.5547 -.921875 l
11.6797 -.921875 12.4766 -1.22396 12.9453 -1.82812  c
13.4557 -2.47396 13.7109 -3.33854 13.7109 -4.42188  c
13.7109 -5.44271 13.4609 -6.24479 12.9609 -6.82812  c
12.6589 -7.18229 12.2995 -7.42448 11.8828 -7.55469  c
11.4661 -7.68490 10.8359 -7.75000 9.99219 -7.75000  c
8.97656 -7.75000 l
8.97656 -.921875 l
h
23.2617 -.234375 m
22.2096 .0677083 21.2930 .218750 20.5117 .218750  c
19.1263 .218750 18.0664 -.174479 17.3320 -.960938  c
16.5977 -1.74740 16.2305 -2.87500 16.2305 -4.34375  c
16.2305 -5.78125 16.6029 -6.89844 17.3477 -7.69531  c
18.0924 -8.49219 19.1419 -8.89062 20.4961 -8.89062  c
21.3711 -8.89062 22.2878 -8.76042 23.2461 -8.50000  c
23.2461 -7.35938 l
22.0482 -7.76562 21.1315 -7.96875 20.4961 -7.96875  c
19.5586 -7.96875 18.8320 -7.65104 18.3164 -7.01562  c
17.8008 -6.38021 17.5430 -5.48438 17.5430 -4.32812  c
17.5430 -3.18229 17.8190 -2.29167 18.3711 -1.65625  c
18.9232 -1.02083 19.6992 -.703125 20.6992 -.703125  c
21.1159 -.703125 21.5586 -.776042 22.0273 -.921875  c
22.0273 -3.75000 l
23.2617 -3.75000 l
23.2617 -.234375 l
h
25.4180 0.00000 m
25.4180 -8.67188 l
30.2617 -8.67188 l
30.2617 -7.75000 l
26.6367 -7.75000 l
26.6367 -4.84375 l
29.6836 -4.84375 l
29.6836 -3.93750 l
26.6367 -3.93750 l
26.6367 0.00000 l
25.4180 0.00000 l
h
31.8516 0.00000 m
31.8516 -8.67188 l
34.4766 -8.67188 l
35.3099 -8.67188 35.9479 -8.48958 36.3906 -8.12500  c
36.8333 -7.76042 37.0547 -7.22396 37.0547 -6.51562  c
37.0547 -5.35938 36.4714 -4.54167 35.3047 -4.06250  c
38.1953 0.00000 l
36.6797 0.00000 l
34.2109 -3.67188 l
33.0703 -3.67188 l
33.0703 0.00000 l
31.8516 0.00000 l
h
33.0703 -4.59375 m
33.4609 -4.59375 l
35.0130 -4.59375 35.7891 -5.19792 35.7891 -6.40625  c
35.7891 -7.30208 35.1380 -7.75000 33.8359 -7.75000  c
33.0703 -7.75000 l
33.0703 -4.59375 l
h
39.4395 0.00000 m
39.4395 -8.67188 l
41.6895 -8.67188 l
42.5540 -8.67188 43.2181 -8.50781 43.6816 -8.17969  c
44.1452 -7.85156 44.3770 -7.38021 44.3770 -6.76562  c
44.3770 -5.71354 43.7832 -4.96354 42.5957 -4.51562  c
44.0124 -4.08854 44.7207 -3.30729 44.7207 -2.17188  c
44.7207 -1.46354 44.4863 -.924479 44.0176 -.554688  c
43.5488 -.184896 42.8717 0.00000 41.9863 0.00000  c
39.4395 0.00000 l
h
40.6582 -.921875 m
40.9082 -.921875 l
41.8040 -.921875 42.3874 -.979167 42.6582 -1.09375  c
43.1686 -1.30208 43.4238 -1.69792 43.4238 -2.28125  c
43.4238 -2.80208 43.1921 -3.23177 42.7285 -3.57031  c
42.2650 -3.90885 41.6895 -4.07812 41.0020 -4.07812  c
40.6582 -4.07812 l
40.6582 -.921875 l
h
40.6582 -4.85938 m
41.0488 -4.85938 l
41.7051 -4.85938 42.2129 -5.00000 42.5723 -5.28125  c
42.9316 -5.56250 43.1113 -5.95833 43.1113 -6.46875  c
43.1113 -7.32292 42.4499 -7.75000 41.1270 -7.75000  c
40.6582 -7.75000 l
40.6582 -4.85938 l
h
f
[ 1.60927 0.00000 0.00000 1.60927 34.5994 68.4379 ] defaultmatrix matrix concatmatrix setmatrix
.890196 1.00000 .725490 RG
newpath
153.773 78.1423 m
153.773 90.0164 144.147 99.6423 132.273 99.6423  c
120.399 99.6423 110.773 90.0164 110.773 78.1423  c
110.773 66.2682 120.399 56.6423 132.273 56.6423  c
144.147 56.6423 153.773 66.2682 153.773 78.1423  c
h
f
0.00000 0.00000 0.00000 RG
newpath
154.773 78.1423 m
154.773 90.5687 144.699 100.642 132.273 100.642  c
119.846 100.642 109.773 90.5687 109.773 78.1423  c
109.773 65.7159 119.846 55.6423 132.273 55.6423  c
144.699 55.6423 154.773 65.7159 154.773 78.1423  c
h
153.773 78.1423 m
153.773 90.0164 144.147 99.6423 132.273 99.6423  c
120.399 99.6423 110.773 90.0164 110.773 78.1423  c
110.773 66.2682 120.399 56.6423 132.273 56.6423  c
144.147 56.6423 153.773 66.2682 153.773 78.1423  c
h
f*
132.273 78.1423 translate
1.00000 1.00000 scale
-32.9092 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
13.8184 -3.31250 m
12.3340 -7.06250 l
10.8652 -3.31250 l
13.8184 -3.31250 l
h
15.1152 0.00000 m
14.1777 -2.40625 l
10.5059 -2.40625 l
9.55273 0.00000 l
8.39648 0.00000 l
11.8496 -8.67188 l
13.0684 -8.67188 l
16.4434 0.00000 l
15.1152 0.00000 l
h
17.7070 0.00000 m
17.7070 -8.67188 l
18.9258 -8.67188 l
18.9258 -.921875 l
22.8320 -.921875 l
22.8320 0.00000 l
17.7070 0.00000 l
h
27.8086 .218750 m
26.4648 .218750 25.4258 -.177083 24.6914 -.968750  c
23.9570 -1.76042 23.5898 -2.88021 23.5898 -4.32812  c
23.5898 -5.77604 23.9648 -6.89844 24.7148 -7.69531  c
25.4648 -8.49219 26.5169 -8.89062 27.8711 -8.89062  c
28.6523 -8.89062 29.5638 -8.76562 30.6055 -8.51562  c
30.6055 -7.35938 l
29.4180 -7.76562 28.5013 -7.96875 27.8555 -7.96875  c
26.9180 -7.96875 26.1914 -7.65104 25.6758 -7.01562  c
25.1602 -6.38021 24.9023 -5.47917 24.9023 -4.31250  c
24.9023 -3.20833 25.1758 -2.33854 25.7227 -1.70312  c
26.2695 -1.06771 27.0221 -.750000 27.9805 -.750000  c
28.8034 -.750000 29.6836 -1.00000 30.6211 -1.50000  c
30.6211 -.453125 l
29.7669 -.00520833 28.8294 .218750 27.8086 .218750  c
h
35.8926 .218750 m
34.6947 .218750 33.7285 -.197917 32.9941 -1.03125  c
32.2598 -1.86458 31.8926 -2.96875 31.8926 -4.34375  c
31.8926 -5.71875 32.2598 -6.82031 32.9941 -7.64844  c
33.7285 -8.47656 34.7155 -8.89062 35.9551 -8.89062  c
37.1738 -8.89062 38.1530 -8.47917 38.8926 -7.65625  c
39.6322 -6.83333 40.0020 -5.73438 40.0020 -4.35938  c
40.0020 -2.95312 39.6322 -1.83854 38.8926 -1.01562  c
38.1530 -.192708 37.1530 .218750 35.8926 .218750  c
h
35.9082 -.703125 m
36.7936 -.703125 37.4785 -1.02344 37.9629 -1.66406  c
38.4473 -2.30469 38.6895 -3.20312 38.6895 -4.35938  c
38.6895 -5.49479 38.4473 -6.38021 37.9629 -7.01562  c
37.4785 -7.65104 36.8092 -7.96875 35.9551 -7.96875  c
35.0905 -7.96875 34.4160 -7.64844 33.9316 -7.00781  c
33.4473 -6.36719 33.2051 -5.47917 33.2051 -4.34375  c
33.2051 -3.21875 33.4447 -2.33073 33.9238 -1.67969  c
34.4030 -1.02865 35.0645 -.703125 35.9082 -.703125  c
h
45.4336 .218750 m
44.0898 .218750 43.0508 -.177083 42.3164 -.968750  c
41.5820 -1.76042 41.2148 -2.88021 41.2148 -4.32812  c
41.2148 -5.77604 41.5898 -6.89844 42.3398 -7.69531  c
43.0898 -8.49219 44.1419 -8.89062 45.4961 -8.89062  c
46.2773 -8.89062 47.1888 -8.76562 48.2305 -8.51562  c
48.2305 -7.35938 l
47.0430 -7.76562 46.1263 -7.96875 45.4805 -7.96875  c
44.5430 -7.96875 43.8164 -7.65104 43.3008 -7.01562  c
42.7852 -6.38021 42.5273 -5.47917 42.5273 -4.31250  c
42.5273 -3.20833 42.8008 -2.33854 43.3477 -1.70312  c
43.8945 -1.06771 44.6471 -.750000 45.6055 -.750000  c
46.4284 -.750000 47.3086 -1.00000 48.2461 -1.50000  c
48.2461 -.453125 l
47.3919 -.00520833 46.4544 .218750 45.4336 .218750  c
h
53.5176 .218750 m
52.3197 .218750 51.3535 -.197917 50.6191 -1.03125  c
49.8848 -1.86458 49.5176 -2.96875 49.5176 -4.34375  c
49.5176 -5.71875 49.8848 -6.82031 50.6191 -7.64844  c
51.3535 -8.47656 52.3405 -8.89062 53.5801 -8.89062  c
54.7988 -8.89062 55.7780 -8.47917 56.5176 -7.65625  c
57.2572 -6.83333 57.6270 -5.73438 57.6270 -4.35938  c
57.6270 -2.95312 57.2572 -1.83854 56.5176 -1.01562  c
55.7780 -.192708 54.7780 .218750 53.5176 .218750  c
h
53.5332 -.703125 m
54.4186 -.703125 55.1035 -1.02344 55.5879 -1.66406  c
56.0723 -2.30469 56.3145 -3.20312 56.3145 -4.35938  c
56.3145 -5.49479 56.0723 -6.38021 55.5879 -7.01562  c
55.1035 -7.65104 54.4342 -7.96875 53.5801 -7.96875  c
52.7155 -7.96875 52.0410 -7.64844 51.5566 -7.00781  c
51.0723 -6.36719 50.8301 -5.47917 50.8301 -4.34375  c
50.8301 -3.21875 51.0697 -2.33073 51.5488 -1.67969  c
52.0280 -1.02865 52.6895 -.703125 53.5332 -.703125  c
h
59.2305 0.00000 m
59.2305 -1.01562 l
59.5638 -1.79688 60.2409 -2.65104 61.2617 -3.57812  c
61.9336 -4.17188 l
62.7773 -4.94271 63.1992 -5.70833 63.1992 -6.46875  c
63.1992 -6.94792 63.0560 -7.32552 62.7695 -7.60156  c
62.4831 -7.87760 62.0846 -8.01562 61.5742 -8.01562  c
60.9701 -8.01562 60.2617 -7.78646 59.4492 -7.32812  c
59.4492 -8.34375 l
60.2201 -8.70833 60.9805 -8.89062 61.7305 -8.89062  c
62.5430 -8.89062 63.1966 -8.67188 63.6914 -8.23438  c
64.1862 -7.79688 64.4336 -7.21875 64.4336 -6.50000  c
64.4336 -5.97917 64.3086 -5.51562 64.0586 -5.10938  c
63.8086 -4.70312 63.3451 -4.21354 62.6680 -3.64062  c
62.2305 -3.26562 l
61.3034 -2.48438 60.7669 -1.73438 60.6211 -1.01562  c
64.3867 -1.01562 l
64.3867 0.00000 l
59.2305 0.00000 l
h
f
[ 1.60927 0.00000 0.00000 1.60927 34.5994 68.4379 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .686275 .486275 RG
newpath
222.953 33.5616 m
222.953 45.4357 213.327 55.0616 201.453 55.0616  c
189.578 55.0616 179.953 45.4357 179.953 33.5616  c
179.953 21.6874 189.578 12.0616 201.453 12.0616  c
213.327 12.0616 222.953 21.6874 222.953 33.5616  c
h
f
0.00000 0.00000 0.00000 RG
newpath
223.953 33.5616 m
223.953 45.9880 213.879 56.0616 201.453 56.0616  c
189.026 56.0616 178.953 45.9880 178.953 33.5616  c
178.953 21.1351 189.026 11.0616 201.453 11.0616  c
213.879 11.0616 223.953 21.1351 223.953 33.5616  c
h
222.953 33.5616 m
222.953 45.4357 213.327 55.0616 201.453 55.0616  c
189.578 55.0616 179.953 45.4357 179.953 33.5616  c
179.953 21.6874 189.578 12.0616 201.453 12.0616  c
213.327 12.0616 222.953 21.6874 222.953 33.5616  c
h
f*
201.453 33.5616 translate
1.00000 1.00000 scale
-18.0586 4.42090 translate
newpath
3.48438 0.00000 m
.218750 -8.67188 l
1.43750 -8.67188 l
4.12500 -1.57812 l
6.71875 -8.67188 l
7.79688 -8.67188 l
4.64062 0.00000 l
3.48438 0.00000 l
h
8.97070 0.00000 m
8.97070 -8.67188 l
11.3301 -8.67188 l
12.3717 -8.67188 13.1217 -8.49479 13.5801 -8.14062  c
14.0384 -7.78646 14.2676 -7.20833 14.2676 -6.40625  c
14.2676 -5.47917 13.9551 -4.75521 13.3301 -4.23438  c
12.7051 -3.71354 11.8405 -3.45312 10.7363 -3.45312  c
10.1895 -3.45312 l
10.1895 0.00000 l
8.97070 0.00000 l
h
10.1895 -4.37500 m
10.6895 -4.37500 l
11.4186 -4.37500 11.9811 -4.54427 12.3770 -4.88281  c
12.7728 -5.22135 12.9707 -5.69792 12.9707 -6.31250  c
12.9707 -6.82292 12.8145 -7.19010 12.5020 -7.41406  c
12.1895 -7.63802 11.6686 -7.75000 10.9395 -7.75000  c
10.1895 -7.75000 l
10.1895 -4.37500 l
h
17.2910 .218750 m
16.7181 .218750 15.9785 .0885417 15.0723 -.171875  c
15.0723 -1.39062 l
16.0410 -.932292 16.8431 -.703125 17.4785 -.703125  c
17.9577 -.703125 18.3457 -.830729 18.6426 -1.08594  c
18.9395 -1.34115 19.0879 -1.67708 19.0879 -2.09375  c
19.0879 -2.42708 18.9915 -2.71354 18.7988 -2.95312  c
18.6061 -3.19271 18.2493 -3.45833 17.7285 -3.75000  c
17.1348 -4.09375 l
16.3952 -4.52083 15.8743 -4.91927 15.5723 -5.28906  c
15.2702 -5.65885 15.1191 -6.09375 15.1191 -6.59375  c
15.1191 -7.26042 15.3613 -7.80990 15.8457 -8.24219  c
16.3301 -8.67448 16.9473 -8.89062 17.6973 -8.89062  c
18.3639 -8.89062 19.0671 -8.78125 19.8066 -8.56250  c
19.8066 -7.43750 l
18.8900 -7.79167 18.2077 -7.96875 17.7598 -7.96875  c
17.3327 -7.96875 16.9811 -7.85677 16.7051 -7.63281  c
16.4290 -7.40885 16.2910 -7.12500 16.2910 -6.78125  c
16.2910 -6.48958 16.3926 -6.23177 16.5957 -6.00781  c
16.7988 -5.78385 17.1712 -5.51562 17.7129 -5.20312  c
18.3223 -4.85938 l
19.0723 -4.43229 19.5957 -4.02865 19.8926 -3.64844  c
20.1895 -3.26823 20.3379 -2.81250 20.3379 -2.28125  c
20.3379 -1.53125 20.0618 -.927083 19.5098 -.468750  c
18.9577 -.0104167 18.2181 .218750 17.2910 .218750  c
h
22.7539 0.00000 m
22.8581 -.677083 23.0169 -1.26042 23.2305 -1.75000  c
23.4440 -2.23958 23.8164 -2.91667 24.3477 -3.78125  c
26.7070 -7.59375 l
22.2383 -7.59375 l
22.2383 -8.67188 l
27.8164 -8.67188 l
27.8164 -7.59375 l
25.5872 -4.31250 24.3424 -1.78125 24.0820 0.00000  c
22.7539 0.00000 l
h
29.5293 0.00000 m
29.5293 -1.01562 l
29.8626 -1.79688 30.5397 -2.65104 31.5605 -3.57812  c
32.2324 -4.17188 l
33.0762 -4.94271 33.4980 -5.70833 33.4980 -6.46875  c
33.4980 -6.94792 33.3548 -7.32552 33.0684 -7.60156  c
32.7819 -7.87760 32.3835 -8.01562 31.8730 -8.01562  c
31.2689 -8.01562 30.5605 -7.78646 29.7480 -7.32812  c
29.7480 -8.34375 l
30.5189 -8.70833 31.2793 -8.89062 32.0293 -8.89062  c
32.8418 -8.89062 33.4954 -8.67188 33.9902 -8.23438  c
34.4850 -7.79688 34.7324 -7.21875 34.7324 -6.50000  c
34.7324 -5.97917 34.6074 -5.51562 34.3574 -5.10938  c
34.1074 -4.70312 33.6439 -4.21354 32.9668 -3.64062  c
32.5293 -3.26562 l
31.6022 -2.48438 31.0658 -1.73438 30.9199 -1.01562  c
34.6855 -1.01562 l
34.6855 0.00000 l
29.5293 0.00000 l
h
f
[ 1.60927 0.00000 0.00000 1.60927 34.5994 68.4379 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .400000 .200000 RG
newpath
22.5000 78.9808 m
22.5000 90.8549 12.8741 100.481 1.00000 100.481  c
-10.8741 100.481 -20.5000 90.8549 -20.5000 78.9808  c
-20.5000 67.1066 -10.8741 57.4808 1.00000 57.4808  c
12.8741 57.4808 22.5000 67.1066 22.5000 78.9808  c
h
f
0.00000 0.00000 0.00000 RG
newpath
23.5000 78.9808 m
23.5000 91.4072 13.4264 101.481 1.00000 101.481  c
-11.4264 101.481 -21.5000 91.4072 -21.5000 78.9808  c
-21.5000 66.5544 -11.4264 56.4808 1.00000 56.4808  c
13.4264 56.4808 23.5000 66.5544 23.5000 78.9808  c
h
22.5000 78.9808 m
22.5000 90.8549 12.8741 100.481 1.00000 100.481  c
-10.8741 100.481 -20.5000 90.8549 -20.5000 78.9808  c
-20.5000 67.1066 -10.8741 57.4808 1.00000 57.4808  c
12.8741 57.4808 22.5000 67.1066 22.5000 78.9808  c
h
f*
1.00000 78.9808 translate
1.00000 1.00000 scale
-15.0820 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.28125 -8.67188 l
2.28125 -4.40625 l
5.78125 -8.67188 l
7.01562 -8.67188 l
3.62500 -4.53125 l
7.62500 0.00000 l
6.06250 0.00000 l
2.28125 -4.39062 l
2.28125 0.00000 l
1.12500 0.00000 l
h
8.95898 0.00000 m
8.95898 -8.67188 l
11.5840 -8.67188 l
12.4173 -8.67188 13.0553 -8.48958 13.4980 -8.12500  c
13.9408 -7.76042 14.1621 -7.22396 14.1621 -6.51562  c
14.1621 -5.35938 13.5788 -4.54167 12.4121 -4.06250  c
15.3027 0.00000 l
13.7871 0.00000 l
11.3184 -3.67188 l
10.1777 -3.67188 l
10.1777 0.00000 l
8.95898 0.00000 l
h
10.1777 -4.59375 m
10.5684 -4.59375 l
12.1204 -4.59375 12.8965 -5.19792 12.8965 -6.40625  c
12.8965 -7.30208 12.2454 -7.75000 10.9434 -7.75000  c
10.1777 -7.75000 l
10.1777 -4.59375 l
h
20.9375 -3.31250 m
19.4531 -7.06250 l
17.9844 -3.31250 l
20.9375 -3.31250 l
h
22.2344 0.00000 m
21.2969 -2.40625 l
17.6250 -2.40625 l
16.6719 0.00000 l
15.5156 0.00000 l
18.9688 -8.67188 l
20.1875 -8.67188 l
23.5625 0.00000 l
22.2344 0.00000 l
h
26.5137 .218750 m
25.9408 .218750 25.2012 .0885417 24.2949 -.171875  c
24.2949 -1.39062 l
25.2637 -.932292 26.0658 -.703125 26.7012 -.703125  c
27.1803 -.703125 27.5684 -.830729 27.8652 -1.08594  c
28.1621 -1.34115 28.3105 -1.67708 28.3105 -2.09375  c
28.3105 -2.42708 28.2142 -2.71354 28.0215 -2.95312  c
27.8288 -3.19271 27.4720 -3.45833 26.9512 -3.75000  c
26.3574 -4.09375 l
25.6178 -4.52083 25.0970 -4.91927 24.7949 -5.28906  c
24.4928 -5.65885 24.3418 -6.09375 24.3418 -6.59375  c
24.3418 -7.26042 24.5840 -7.80990 25.0684 -8.24219  c
25.5527 -8.67448 26.1699 -8.89062 26.9199 -8.89062  c
27.5866 -8.89062 28.2897 -8.78125 29.0293 -8.56250  c
29.0293 -7.43750 l
28.1126 -7.79167 27.4303 -7.96875 26.9824 -7.96875  c
26.5553 -7.96875 26.2038 -7.85677 25.9277 -7.63281  c
25.6517 -7.40885 25.5137 -7.12500 25.5137 -6.78125  c
25.5137 -6.48958 25.6152 -6.23177 25.8184 -6.00781  c
26.0215 -5.78385 26.3939 -5.51562 26.9355 -5.20312  c
27.5449 -4.85938 l
28.2949 -4.43229 28.8184 -4.02865 29.1152 -3.64844  c
29.4121 -3.26823 29.5605 -2.81250 29.5605 -2.28125  c
29.5605 -1.53125 29.2845 -.927083 28.7324 -.468750  c
28.1803 -.0104167 27.4408 .218750 26.5137 .218750  c
h
f
[ 1.60927 0.00000 0.00000 1.60927 34.5994 68.4379 ] defaultmatrix matrix concatmatrix setmatrix
.949020 .301961 .200000 RG
newpath
22.0858 27.0192 m
1.00000 48.1050 l
-20.0858 27.0192 l
1.00000 5.93345 l
h
f
0.00000 0.00000 0.00000 RG
newpath
1.00000 4.51924 m
23.5000 27.0192 l
1.00000 49.5192 l
-21.5000 27.0192 l
h
22.0858 27.0192 m
1.00000 48.1050 l
-20.0858 27.0192 l
1.00000 5.93345 l
h
f*
1.00000 27.0192 translate
1.00000 1.00000 scale
-15.5977 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.32812 -8.67188 l
6.68750 -1.96875 l
6.68750 -8.67188 l
7.75000 -8.67188 l
7.75000 0.00000 l
6.54688 0.00000 l
2.17188 -6.70312 l
2.17188 0.00000 l
1.12500 0.00000 l
h
9.99023 0.00000 m
9.99023 -8.67188 l
12.6152 -8.67188 l
13.4486 -8.67188 14.0866 -8.48958 14.5293 -8.12500  c
14.9720 -7.76042 15.1934 -7.22396 15.1934 -6.51562  c
15.1934 -5.35938 14.6100 -4.54167 13.4434 -4.06250  c
16.3340 0.00000 l
14.8184 0.00000 l
12.3496 -3.67188 l
11.2090 -3.67188 l
11.2090 0.00000 l
9.99023 0.00000 l
h
11.2090 -4.59375 m
11.5996 -4.59375 l
13.1517 -4.59375 13.9277 -5.19792 13.9277 -6.40625  c
13.9277 -7.30208 13.2767 -7.75000 11.9746 -7.75000  c
11.2090 -7.75000 l
11.2090 -4.59375 l
h
21.9688 -3.31250 m
20.4844 -7.06250 l
19.0156 -3.31250 l
21.9688 -3.31250 l
h
23.2656 0.00000 m
22.3281 -2.40625 l
18.6562 -2.40625 l
17.7031 0.00000 l
16.5469 0.00000 l
20.0000 -8.67188 l
21.2188 -8.67188 l
24.5938 0.00000 l
23.2656 0.00000 l
h
27.5449 .218750 m
26.9720 .218750 26.2324 .0885417 25.3262 -.171875  c
25.3262 -1.39062 l
26.2949 -.932292 27.0970 -.703125 27.7324 -.703125  c
28.2116 -.703125 28.5996 -.830729 28.8965 -1.08594  c
29.1934 -1.34115 29.3418 -1.67708 29.3418 -2.09375  c
29.3418 -2.42708 29.2454 -2.71354 29.0527 -2.95312  c
28.8600 -3.19271 28.5033 -3.45833 27.9824 -3.75000  c
27.3887 -4.09375 l
26.6491 -4.52083 26.1283 -4.91927 25.8262 -5.28906  c
25.5241 -5.65885 25.3730 -6.09375 25.3730 -6.59375  c
25.3730 -7.26042 25.6152 -7.80990 26.0996 -8.24219  c
26.5840 -8.67448 27.2012 -8.89062 27.9512 -8.89062  c
28.6178 -8.89062 29.3210 -8.78125 30.0605 -8.56250  c
30.0605 -7.43750 l
29.1439 -7.79167 28.4616 -7.96875 28.0137 -7.96875  c
27.5866 -7.96875 27.2350 -7.85677 26.9590 -7.63281  c
26.6829 -7.40885 26.5449 -7.12500 26.5449 -6.78125  c
26.5449 -6.48958 26.6465 -6.23177 26.8496 -6.00781  c
27.0527 -5.78385 27.4251 -5.51562 27.9668 -5.20312  c
28.5762 -4.85938 l
29.3262 -4.43229 29.8496 -4.02865 30.1465 -3.64844  c
30.4434 -3.26823 30.5918 -2.81250 30.5918 -2.28125  c
30.5918 -1.53125 30.3158 -.927083 29.7637 -.468750  c
29.2116 -.0104167 28.4720 .218750 27.5449 .218750  c
h
f
[ 1.60927 0.00000 0.00000 1.60927 34.5994 68.4379 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .952941 .752941 RG
newpath
198.353 147.322 m
198.353 159.196 188.728 168.822 176.853 168.822  c
164.979 168.822 155.353 159.196 155.353 147.322  c
155.353 135.448 164.979 125.822 176.853 125.822  c
188.728 125.822 198.353 135.448 198.353 147.322  c
h
f
0.00000 0.00000 0.00000 RG
newpath
199.353 147.322 m
199.353 159.749 189.280 169.822 176.853 169.822  c
164.427 169.822 154.353 159.749 154.353 147.322  c
154.353 134.896 164.427 124.822 176.853 124.822  c
189.280 124.822 199.353 134.896 199.353 147.322  c
h
198.353 147.322 m
198.353 159.196 188.728 168.822 176.853 168.822  c
164.979 168.822 155.353 159.196 155.353 147.322  c
155.353 135.448 164.979 125.822 176.853 125.822  c
188.728 125.822 198.353 135.448 198.353 147.322  c
h
f*
176.853 147.322 translate
1.00000 1.00000 scale
-16.2100 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
7.74219 0.00000 m
7.74219 -8.67188 l
8.97656 -8.67188 l
8.97656 0.00000 l
7.74219 0.00000 l
h
15.6055 -3.31250 m
14.1211 -7.06250 l
12.6523 -3.31250 l
15.6055 -3.31250 l
h
16.9023 0.00000 m
15.9648 -2.40625 l
12.2930 -2.40625 l
11.3398 0.00000 l
10.1836 0.00000 l
13.6367 -8.67188 l
14.8555 -8.67188 l
18.2305 0.00000 l
16.9023 0.00000 l
h
21.1816 .218750 m
20.6087 .218750 19.8691 .0885417 18.9629 -.171875  c
18.9629 -1.39062 l
19.9316 -.932292 20.7337 -.703125 21.3691 -.703125  c
21.8483 -.703125 22.2363 -.830729 22.5332 -1.08594  c
22.8301 -1.34115 22.9785 -1.67708 22.9785 -2.09375  c
22.9785 -2.42708 22.8822 -2.71354 22.6895 -2.95312  c
22.4967 -3.19271 22.1400 -3.45833 21.6191 -3.75000  c
21.0254 -4.09375 l
20.2858 -4.52083 19.7650 -4.91927 19.4629 -5.28906  c
19.1608 -5.65885 19.0098 -6.09375 19.0098 -6.59375  c
19.0098 -7.26042 19.2520 -7.80990 19.7363 -8.24219  c
20.2207 -8.67448 20.8379 -8.89062 21.5879 -8.89062  c
22.2546 -8.89062 22.9577 -8.78125 23.6973 -8.56250  c
23.6973 -7.43750 l
22.7806 -7.79167 22.0983 -7.96875 21.6504 -7.96875  c
21.2233 -7.96875 20.8717 -7.85677 20.5957 -7.63281  c
20.3197 -7.40885 20.1816 -7.12500 20.1816 -6.78125  c
20.1816 -6.48958 20.2832 -6.23177 20.4863 -6.00781  c
20.6895 -5.78385 21.0618 -5.51562 21.6035 -5.20312  c
22.2129 -4.85938 l
22.9629 -4.43229 23.4863 -4.02865 23.7832 -3.64844  c
24.0801 -3.26823 24.2285 -2.81250 24.2285 -2.28125  c
24.2285 -1.53125 23.9525 -.927083 23.4004 -.468750  c
22.8483 -.0104167 22.1087 .218750 21.1816 .218750  c
h
29.3477 0.00000 m
29.3477 -2.45312 l
25.4414 -2.45312 l
25.4414 -3.32812 l
29.3477 -8.67188 l
30.4414 -8.67188 l
30.4414 -3.40625 l
31.5977 -3.40625 l
31.5977 -2.45312 l
30.4414 -2.45312 l
30.4414 0.00000 l
29.3477 0.00000 l
h
26.5820 -3.40625 m
29.4258 -3.40625 l
29.4258 -7.25000 l
26.5820 -3.40625 l
h
f
[ 1.60927 0.00000 0.00000 1.60927 34.5994 68.4379 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
