%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:46:09 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.72672 0.00000 0.00000 1.72672 38.2083 107.571 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
73.5213 64.2029 m
66.9796 73.2067 l
S
newpath
73.5213 27.7971 m
63.2227 13.6222 l
S
newpath
108.574 40.5401 m
162.302 27.1007 l
S
newpath
108.574 51.4599 m
162.302 64.8993 l
S
newpath
21.7711 81.0176 m
32.3557 84.4567 l
S
newpath
13.5975 55.8618 m
44.2863 13.6222 l
S
newpath
13.5975 36.1382 m
40.5293 73.2067 l
S
newpath
21.7711 10.9824 m
36.7723 6.10824 l
S
1.00000 .615686 .415686 RG
newpath
108.246 46.0000 m
108.246 57.8741 98.6206 67.5000 86.7465 67.5000  c
74.8724 67.5000 65.2465 57.8741 65.2465 46.0000  c
65.2465 34.1259 74.8724 24.5000 86.7465 24.5000  c
98.6206 24.5000 108.246 34.1259 108.246 46.0000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
109.246 46.0000 m
109.246 58.4264 99.1729 68.5000 86.7465 68.5000  c
74.3201 68.5000 64.2465 58.4264 64.2465 46.0000  c
64.2465 33.5736 74.3201 23.5000 86.7465 23.5000  c
99.1729 23.5000 109.246 33.5736 109.246 46.0000  c
h
108.246 46.0000 m
108.246 57.8741 98.6206 67.5000 86.7465 67.5000  c
74.8724 67.5000 65.2465 57.8741 65.2465 46.0000  c
65.2465 34.1259 74.8724 24.5000 86.7465 24.5000  c
98.6206 24.5000 108.246 34.1259 108.246 46.0000  c
h
f*
86.7465 46.0000 translate
1.00000 1.00000 scale
-14.9238 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.96875 l
5.37500 -4.96875 l
5.37500 -4.06250 l
2.34375 -4.06250 l
2.34375 -.921875 l
6.21875 -.921875 l
6.21875 0.00000 l
1.12500 0.00000 l
h
9.50391 0.00000 m
9.50391 -3.62500 l
6.59766 -8.67188 l
8.00391 -8.67188 l
10.2539 -4.76562 l
12.6914 -8.67188 l
13.8320 -8.67188 l
10.7227 -3.64062 l
10.7227 0.00000 l
9.50391 0.00000 l
h
19.4961 -3.31250 m
18.0117 -7.06250 l
16.5430 -3.31250 l
19.4961 -3.31250 l
h
20.7930 0.00000 m
19.8555 -2.40625 l
16.1836 -2.40625 l
15.2305 0.00000 l
14.0742 0.00000 l
17.5273 -8.67188 l
18.7461 -8.67188 l
22.1211 0.00000 l
20.7930 0.00000 l
h
23.2598 0.00000 m
23.2598 -1.01562 l
23.5931 -1.79688 24.2702 -2.65104 25.2910 -3.57812  c
25.9629 -4.17188 l
26.8066 -4.94271 27.2285 -5.70833 27.2285 -6.46875  c
27.2285 -6.94792 27.0853 -7.32552 26.7988 -7.60156  c
26.5124 -7.87760 26.1139 -8.01562 25.6035 -8.01562  c
24.9993 -8.01562 24.2910 -7.78646 23.4785 -7.32812  c
23.4785 -8.34375 l
24.2493 -8.70833 25.0098 -8.89062 25.7598 -8.89062  c
26.5723 -8.89062 27.2259 -8.67188 27.7207 -8.23438  c
28.2155 -7.79688 28.4629 -7.21875 28.4629 -6.50000  c
28.4629 -5.97917 28.3379 -5.51562 28.0879 -5.10938  c
27.8379 -4.70312 27.3743 -4.21354 26.6973 -3.64062  c
26.2598 -3.26562 l
25.3327 -2.48438 24.7962 -1.73438 24.6504 -1.01562  c
28.4160 -1.01562 l
28.4160 0.00000 l
23.2598 0.00000 l
h
f
[ 1.72672 0.00000 0.00000 1.72672 38.2083 107.571 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .694118 .494118 RG
newpath
21.8723 74.0647 m
21.8723 85.9388 12.2464 95.5647 .372284 95.5647  c
-11.5018 95.5647 -21.1277 85.9388 -21.1277 74.0647  c
-21.1277 62.1906 -11.5018 52.5647 .372284 52.5647  c
12.2464 52.5647 21.8723 62.1906 21.8723 74.0647  c
h
f
0.00000 0.00000 0.00000 RG
newpath
22.8723 74.0647 m
22.8723 86.4911 12.7987 96.5647 .372284 96.5647  c
-12.0541 96.5647 -22.1277 86.4911 -22.1277 74.0647  c
-22.1277 61.6383 -12.0541 51.5647 .372284 51.5647  c
12.7987 51.5647 22.8723 61.6383 22.8723 74.0647  c
h
21.8723 74.0647 m
21.8723 85.9388 12.2464 95.5647 .372284 95.5647  c
-11.5018 95.5647 -21.1277 85.9388 -21.1277 74.0647  c
-21.1277 62.1906 -11.5018 52.5647 .372284 52.5647  c
12.2464 52.5647 21.8723 62.1906 21.8723 74.0647  c
h
f*
.372284 74.0647 translate
1.00000 1.00000 scale
-15.0059 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
12.1484 -3.31250 m
10.6641 -7.06250 l
9.19531 -3.31250 l
12.1484 -3.31250 l
h
13.4453 0.00000 m
12.5078 -2.40625 l
8.83594 -2.40625 l
7.88281 0.00000 l
6.72656 0.00000 l
10.1797 -8.67188 l
11.3984 -8.67188 l
14.7734 0.00000 l
13.4453 0.00000 l
h
15.0059 0.00000 m
17.8809 -4.35938 l
15.1465 -8.67188 l
16.5996 -8.67188 l
18.6934 -5.40625 l
20.8809 -8.67188 l
22.0371 -8.67188 l
19.2715 -4.48438 l
22.1152 0.00000 l
20.6621 0.00000 l
18.4590 -3.43750 l
16.1777 0.00000 l
15.0059 0.00000 l
h
24.4863 -4.50000 m
25.0384 -5.20833 25.7311 -5.56250 26.5645 -5.56250  c
27.3249 -5.56250 27.9473 -5.31250 28.4316 -4.81250  c
28.9160 -4.31250 29.1582 -3.67188 29.1582 -2.89062  c
29.1582 -1.98438 28.8874 -1.23958 28.3457 -.656250  c
27.8040 -.0729167 27.1165 .218750 26.2832 .218750  c
25.3249 .218750 24.5749 -.166667 24.0332 -.937500  c
23.4915 -1.70833 23.2207 -2.77604 23.2207 -4.14062  c
23.2207 -5.65104 23.5306 -6.82031 24.1504 -7.64844  c
24.7702 -8.47656 25.6426 -8.89062 26.7676 -8.89062  c
27.2884 -8.89062 27.9342 -8.78125 28.7051 -8.56250  c
28.7051 -7.56250 l
27.8926 -7.87500 27.2259 -8.03125 26.7051 -8.03125  c
25.2259 -8.03125 24.4863 -6.85417 24.4863 -4.50000  c
h
27.9863 -2.62500 m
27.9863 -3.28125 27.8405 -3.79688 27.5488 -4.17188  c
27.2572 -4.54688 26.8457 -4.73438 26.3145 -4.73438  c
25.8353 -4.73438 25.4186 -4.57031 25.0645 -4.24219  c
24.7103 -3.91406 24.5332 -3.52083 24.5332 -3.06250  c
24.5332 -2.33333 24.6999 -1.75000 25.0332 -1.31250  c
25.3665 -.875000 25.8092 -.656250 26.3613 -.656250  c
26.8613 -.656250 27.2572 -.833333 27.5488 -1.18750  c
27.8405 -1.54167 27.9863 -2.02083 27.9863 -2.62500  c
h
f
[ 1.72672 0.00000 0.00000 1.72672 38.2083 107.571 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .486275 .286275 RG
newpath
205.630 70.3592 m
205.630 82.2333 196.004 91.8592 184.130 91.8592  c
172.256 91.8592 162.630 82.2333 162.630 70.3592  c
162.630 58.4850 172.256 48.8592 184.130 48.8592  c
196.004 48.8592 205.630 58.4850 205.630 70.3592  c
h
f
0.00000 0.00000 0.00000 RG
newpath
206.630 70.3592 m
206.630 82.7856 196.556 92.8592 184.130 92.8592  c
171.704 92.8592 161.630 82.7856 161.630 70.3592  c
161.630 57.9328 171.704 47.8592 184.130 47.8592  c
196.556 47.8592 206.630 57.9328 206.630 70.3592  c
h
205.630 70.3592 m
205.630 82.2333 196.004 91.8592 184.130 91.8592  c
172.256 91.8592 162.630 82.2333 162.630 70.3592  c
162.630 58.4850 172.256 48.8592 184.130 48.8592  c
196.004 48.8592 205.630 58.4850 205.630 70.3592  c
h
f*
184.130 70.3592 translate
1.00000 1.00000 scale
-16.5352 4.42090 translate
newpath
7.64062 -.234375 m
6.58854 .0677083 5.67188 .218750 4.89062 .218750  c
3.50521 .218750 2.44531 -.174479 1.71094 -.960938  c
.976562 -1.74740 .609375 -2.87500 .609375 -4.34375  c
.609375 -5.78125 .981771 -6.89844 1.72656 -7.69531  c
2.47135 -8.49219 3.52083 -8.89062 4.87500 -8.89062  c
5.75000 -8.89062 6.66667 -8.76042 7.62500 -8.50000  c
7.62500 -7.35938 l
6.42708 -7.76562 5.51042 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.48438 1.92188 -4.32812  c
1.92188 -3.18229 2.19792 -2.29167 2.75000 -1.65625  c
3.30208 -1.02083 4.07812 -.703125 5.07812 -.703125  c
5.49479 -.703125 5.93750 -.776042 6.40625 -.921875  c
6.40625 -3.75000 l
7.64062 -3.75000 l
7.64062 -.234375 l
h
9.79688 0.00000 m
9.79688 -8.67188 l
11.0000 -8.67188 l
15.3594 -1.96875 l
15.3594 -8.67188 l
16.4219 -8.67188 l
16.4219 0.00000 l
15.2188 0.00000 l
10.8438 -6.70312 l
10.8438 0.00000 l
9.79688 0.00000 l
h
23.0527 -3.31250 m
21.5684 -7.06250 l
20.0996 -3.31250 l
23.0527 -3.31250 l
h
24.3496 0.00000 m
23.4121 -2.40625 l
19.7402 -2.40625 l
18.7871 0.00000 l
17.6309 0.00000 l
21.0840 -8.67188 l
22.3027 -8.67188 l
25.6777 0.00000 l
24.3496 0.00000 l
h
26.3789 0.00000 m
26.3789 -.984375 l
31.0352 -7.75000 l
26.6602 -7.75000 l
26.6602 -8.67188 l
32.5039 -8.67188 l
32.5039 -7.75000 l
27.8477 -.984375 l
32.5039 -.984375 l
32.5039 0.00000 l
26.3789 0.00000 l
h
f
[ 1.72672 0.00000 0.00000 1.72672 38.2083 107.571 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .658824 .458824 RG
newpath
21.8723 17.9353 m
21.8723 29.8094 12.2464 39.4353 .372284 39.4353  c
-11.5018 39.4353 -21.1277 29.8094 -21.1277 17.9353  c
-21.1277 6.06120 -11.5018 -3.56468 .372284 -3.56468  c
12.2464 -3.56468 21.8723 6.06120 21.8723 17.9353  c
h
f
0.00000 0.00000 0.00000 RG
newpath
22.8723 17.9353 m
22.8723 30.3617 12.7987 40.4353 .372284 40.4353  c
-12.0541 40.4353 -22.1277 30.3617 -22.1277 17.9353  c
-22.1277 5.50891 -12.0541 -4.56468 .372284 -4.56468  c
12.7987 -4.56468 22.8723 5.50891 22.8723 17.9353  c
h
21.8723 17.9353 m
21.8723 29.8094 12.2464 39.4353 .372284 39.4353  c
-11.5018 39.4353 -21.1277 29.8094 -21.1277 17.9353  c
-21.1277 6.06120 -11.5018 -3.56468 .372284 -3.56468  c
12.2464 -3.56468 21.8723 6.06120 21.8723 17.9353  c
h
f*
.372284 17.9353 translate
1.00000 1.00000 scale
-21.7002 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
7.75781 0.00000 m
7.75781 -8.67188 l
10.6328 -8.67188 l
11.4974 -8.67188 12.1927 -8.57552 12.7188 -8.38281  c
13.2448 -8.19010 13.7005 -7.86458 14.0859 -7.40625  c
14.7005 -6.68750 15.0078 -5.73438 15.0078 -4.54688  c
15.0078 -3.09896 14.6276 -1.97917 13.8672 -1.18750  c
13.1068 -.395833 12.0339 0.00000 10.6484 0.00000  c
7.75781 0.00000 l
h
8.97656 -.921875 m
10.5547 -.921875 l
11.6797 -.921875 12.4766 -1.22396 12.9453 -1.82812  c
13.4557 -2.47396 13.7109 -3.33854 13.7109 -4.42188  c
13.7109 -5.44271 13.4609 -6.24479 12.9609 -6.82812  c
12.6589 -7.18229 12.2995 -7.42448 11.8828 -7.55469  c
11.4661 -7.68490 10.8359 -7.75000 9.99219 -7.75000  c
8.97656 -7.75000 l
8.97656 -.921875 l
h
16.7461 0.00000 m
16.7461 -8.67188 l
17.9648 -8.67188 l
17.9648 -.921875 l
21.8711 -.921875 l
21.8711 0.00000 l
16.7461 0.00000 l
h
23.1289 0.00000 m
23.1289 -8.67188 l
24.3633 -8.67188 l
24.3633 0.00000 l
23.1289 0.00000 l
h
26.6016 0.00000 m
26.6016 -8.67188 l
28.3047 -8.67188 l
30.7109 -1.96875 l
33.1797 -8.67188 l
34.6953 -8.67188 l
34.6953 0.00000 l
33.5547 0.00000 l
33.5547 -7.06250 l
31.1641 -.578125 l
29.9766 -.578125 l
27.6484 -7.07812 l
27.6484 0.00000 l
26.6016 0.00000 l
h
37.2656 .0312500 m
37.2656 -1.00000 l
37.8490 -.770833 38.3958 -.656250 38.9062 -.656250  c
39.4792 -.656250 39.9297 -.822917 40.2578 -1.15625  c
40.5859 -1.48958 40.7500 -1.95312 40.7500 -2.54688  c
40.7500 -3.84896 39.8542 -4.50000 38.0625 -4.50000  c
37.8542 -4.50000 37.6406 -4.48438 37.4219 -4.45312  c
37.4219 -8.67188 l
41.8125 -8.67188 l
41.8125 -7.67188 l
38.4375 -7.67188 l
38.4375 -5.37500 l
39.5521 -5.37500 40.4219 -5.11979 41.0469 -4.60938  c
41.6719 -4.09896 41.9844 -3.39062 41.9844 -2.48438  c
41.9844 -1.64062 41.6979 -.979167 41.1250 -.500000  c
40.5521 -.0208333 39.7656 .218750 38.7656 .218750  c
38.3281 .218750 37.8281 .156250 37.2656 .0312500  c
h
f
[ 1.72672 0.00000 0.00000 1.72672 38.2083 107.571 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .541176 .341176 RG
newpath
205.630 21.6408 m
205.630 33.5150 196.004 43.1408 184.130 43.1408  c
172.256 43.1408 162.630 33.5150 162.630 21.6408  c
162.630 9.76672 172.256 .140838 184.130 .140838  c
196.004 .140838 205.630 9.76672 205.630 21.6408  c
h
f
0.00000 0.00000 0.00000 RG
newpath
206.630 21.6408 m
206.630 34.0672 196.556 44.1408 184.130 44.1408  c
171.704 44.1408 161.630 34.0672 161.630 21.6408  c
161.630 9.21443 171.704 -.859162 184.130 -.859162  c
196.556 -.859162 206.630 9.21443 206.630 21.6408  c
h
205.630 21.6408 m
205.630 33.5150 196.004 43.1408 184.130 43.1408  c
172.256 43.1408 162.630 33.5150 162.630 21.6408  c
162.630 9.76672 172.256 .140838 184.130 .140838  c
196.004 .140838 205.630 9.76672 205.630 21.6408  c
h
f*
184.130 21.6408 translate
1.00000 1.00000 scale
-18.4951 4.42090 translate
newpath
5.51562 -3.31250 m
4.03125 -7.06250 l
2.56250 -3.31250 l
5.51562 -3.31250 l
h
6.81250 0.00000 m
5.87500 -2.40625 l
2.20312 -2.40625 l
1.25000 0.00000 l
.0937500 0.00000 l
3.54688 -8.67188 l
4.76562 -8.67188 l
8.14062 0.00000 l
6.81250 0.00000 l
h
9.27930 0.00000 m
9.27930 -1.01562 l
9.61263 -1.79688 10.2897 -2.65104 11.3105 -3.57812  c
11.9824 -4.17188 l
12.8262 -4.94271 13.2480 -5.70833 13.2480 -6.46875  c
13.2480 -6.94792 13.1048 -7.32552 12.8184 -7.60156  c
12.5319 -7.87760 12.1335 -8.01562 11.6230 -8.01562  c
11.0189 -8.01562 10.3105 -7.78646 9.49805 -7.32812  c
9.49805 -8.34375 l
10.2689 -8.70833 11.0293 -8.89062 11.7793 -8.89062  c
12.5918 -8.89062 13.2454 -8.67188 13.7402 -8.23438  c
14.2350 -7.79688 14.4824 -7.21875 14.4824 -6.50000  c
14.4824 -5.97917 14.3574 -5.51562 14.1074 -5.10938  c
13.8574 -4.70312 13.3939 -4.21354 12.7168 -3.64062  c
12.2793 -3.26562 l
11.3522 -2.48438 10.8158 -1.73438 10.6699 -1.01562  c
14.4355 -1.01562 l
14.4355 0.00000 l
9.27930 0.00000 l
h
16.9922 0.00000 m
16.9922 -8.67188 l
19.2422 -8.67188 l
20.1068 -8.67188 20.7708 -8.50781 21.2344 -8.17969  c
21.6979 -7.85156 21.9297 -7.38021 21.9297 -6.76562  c
21.9297 -5.71354 21.3359 -4.96354 20.1484 -4.51562  c
21.5651 -4.08854 22.2734 -3.30729 22.2734 -2.17188  c
22.2734 -1.46354 22.0391 -.924479 21.5703 -.554688  c
21.1016 -.184896 20.4245 0.00000 19.5391 0.00000  c
16.9922 0.00000 l
h
18.2109 -.921875 m
18.4609 -.921875 l
19.3568 -.921875 19.9401 -.979167 20.2109 -1.09375  c
20.7214 -1.30208 20.9766 -1.69792 20.9766 -2.28125  c
20.9766 -2.80208 20.7448 -3.23177 20.2812 -3.57031  c
19.8177 -3.90885 19.2422 -4.07812 18.5547 -4.07812  c
18.2109 -4.07812 l
18.2109 -.921875 l
h
18.2109 -4.85938 m
18.6016 -4.85938 l
19.2578 -4.85938 19.7656 -5.00000 20.1250 -5.28125  c
20.4844 -5.56250 20.6641 -5.95833 20.6641 -6.46875  c
20.6641 -7.32292 20.0026 -7.75000 18.6797 -7.75000  c
18.2109 -7.75000 l
18.2109 -4.85938 l
h
23.8945 0.00000 m
23.8945 -8.67188 l
26.2539 -8.67188 l
27.2956 -8.67188 28.0456 -8.49479 28.5039 -8.14062  c
28.9622 -7.78646 29.1914 -7.20833 29.1914 -6.40625  c
29.1914 -5.47917 28.8789 -4.75521 28.2539 -4.23438  c
27.6289 -3.71354 26.7643 -3.45312 25.6602 -3.45312  c
25.1133 -3.45312 l
25.1133 0.00000 l
23.8945 0.00000 l
h
25.1133 -4.37500 m
25.6133 -4.37500 l
26.3424 -4.37500 26.9049 -4.54427 27.3008 -4.88281  c
27.6966 -5.22135 27.8945 -5.69792 27.8945 -6.31250  c
27.8945 -6.82292 27.7383 -7.19010 27.4258 -7.41406  c
27.1133 -7.63802 26.5924 -7.75000 25.8633 -7.75000  c
25.1133 -7.75000 l
25.1133 -4.37500 l
h
31.2148 0.00000 m
31.2148 -.875000 l
32.9492 -.875000 l
32.9492 -7.71875 l
31.2148 -7.28125 l
31.2148 -8.17188 l
34.1055 -8.89062 l
34.1055 -.875000 l
35.8398 -.875000 l
35.8398 0.00000 l
31.2148 0.00000 l
h
f
[ 1.72672 0.00000 0.00000 1.72672 38.2083 107.571 ] defaultmatrix matrix concatmatrix setmatrix
.992157 .384314 .200000 RG
newpath
74.8403 .590397 m
53.7545 21.6762 l
32.6687 .590397 l
53.7545 -20.4954 l
h
f
0.00000 0.00000 0.00000 RG
newpath
53.7545 -21.9096 m
76.2545 .590397 l
53.7545 23.0904 l
31.2545 .590397 l
h
74.8403 .590397 m
53.7545 21.6762 l
32.6687 .590397 l
53.7545 -20.4954 l
h
f*
53.7545 .590397 translate
1.00000 1.00000 scale
-25.4531 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
8.80664 -.0625000 m
8.80664 -1.14062 l
9.63997 -.817708 10.2910 -.656250 10.7598 -.656250  c
11.3118 -.656250 11.7624 -.817708 12.1113 -1.14062  c
12.4603 -1.46354 12.6348 -1.88021 12.6348 -2.39062  c
12.6348 -3.60938 11.7806 -4.21875 10.0723 -4.21875  c
9.60352 -4.21875 l
9.60352 -5.00000 l
10.0098 -5.00000 l
11.6139 -5.00000 12.4160 -5.56250 12.4160 -6.68750  c
12.4160 -7.57292 11.8900 -8.01562 10.8379 -8.01562  c
10.2546 -8.01562 9.61914 -7.85417 8.93164 -7.53125  c
8.93164 -8.54688 l
9.60872 -8.77604 10.2702 -8.89062 10.9160 -8.89062  c
12.6868 -8.89062 13.5723 -8.21875 13.5723 -6.87500  c
13.5723 -5.85417 12.9681 -5.13021 11.7598 -4.70312  c
13.1660 -4.38021 13.8691 -3.61458 13.8691 -2.40625  c
13.8691 -1.58333 13.5983 -.940104 13.0566 -.476562  c
12.5150 -.0130208 11.7754 .218750 10.8379 .218750  c
10.2962 .218750 9.61914 .125000 8.80664 -.0625000  c
h
16.3008 0.00000 m
16.3008 -8.67188 l
17.5195 -8.67188 l
17.5195 -5.01562 l
21.6445 -5.01562 l
21.6445 -8.67188 l
22.8789 -8.67188 l
22.8789 0.00000 l
21.6445 0.00000 l
21.6445 -4.09375 l
17.5195 -4.09375 l
17.5195 0.00000 l
16.3008 0.00000 l
h
25.1191 0.00000 m
25.1191 -8.67188 l
27.9941 -8.67188 l
28.8587 -8.67188 29.5540 -8.57552 30.0801 -8.38281  c
30.6061 -8.19010 31.0618 -7.86458 31.4473 -7.40625  c
32.0618 -6.68750 32.3691 -5.73438 32.3691 -4.54688  c
32.3691 -3.09896 31.9889 -1.97917 31.2285 -1.18750  c
30.4681 -.395833 29.3952 0.00000 28.0098 0.00000  c
25.1191 0.00000 l
h
26.3379 -.921875 m
27.9160 -.921875 l
29.0410 -.921875 29.8379 -1.22396 30.3066 -1.82812  c
30.8171 -2.47396 31.0723 -3.33854 31.0723 -4.42188  c
31.0723 -5.44271 30.8223 -6.24479 30.3223 -6.82812  c
30.0202 -7.18229 29.6608 -7.42448 29.2441 -7.55469  c
28.8275 -7.68490 28.1973 -7.75000 27.3535 -7.75000  c
26.3379 -7.75000 l
26.3379 -.921875 l
h
34.1074 0.00000 m
34.1074 -8.67188 l
35.8105 -8.67188 l
38.2168 -1.96875 l
40.6855 -8.67188 l
42.2012 -8.67188 l
42.2012 0.00000 l
41.0605 0.00000 l
41.0605 -7.06250 l
38.6699 -.578125 l
37.4824 -.578125 l
35.1543 -7.07812 l
35.1543 0.00000 l
34.1074 0.00000 l
h
45.1309 0.00000 m
45.1309 -.875000 l
46.8652 -.875000 l
46.8652 -7.71875 l
45.1309 -7.28125 l
45.1309 -8.17188 l
48.0215 -8.89062 l
48.0215 -.875000 l
49.7559 -.875000 l
49.7559 0.00000 l
45.1309 0.00000 l
h
f
[ 1.72672 0.00000 0.00000 1.72672 38.2083 107.571 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .568627 .368627 RG
newpath
75.2545 91.4096 m
75.2545 103.284 65.6286 112.910 53.7545 112.910  c
41.8804 112.910 32.2545 103.284 32.2545 91.4096  c
32.2545 79.5355 41.8804 69.9096 53.7545 69.9096  c
65.6286 69.9096 75.2545 79.5355 75.2545 91.4096  c
h
f
0.00000 0.00000 0.00000 RG
newpath
76.2545 91.4096 m
76.2545 103.836 66.1809 113.910 53.7545 113.910  c
41.3281 113.910 31.2545 103.836 31.2545 91.4096  c
31.2545 78.9832 41.3281 68.9096 53.7545 68.9096  c
66.1809 68.9096 76.2545 78.9832 76.2545 91.4096  c
h
75.2545 91.4096 m
75.2545 103.284 65.6286 112.910 53.7545 112.910  c
41.8804 112.910 32.2545 103.284 32.2545 91.4096  c
32.2545 79.5355 41.8804 69.9096 53.7545 69.9096  c
65.6286 69.9096 75.2545 79.5355 75.2545 91.4096  c
h
f*
53.7545 91.4096 translate
1.00000 1.00000 scale
-27.0088 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
13.1035 -3.31250 m
11.6191 -7.06250 l
10.1504 -3.31250 l
13.1035 -3.31250 l
h
14.4004 0.00000 m
13.4629 -2.40625 l
9.79102 -2.40625 l
8.83789 0.00000 l
7.68164 0.00000 l
11.1348 -8.67188 l
12.3535 -8.67188 l
15.7285 0.00000 l
14.4004 0.00000 l
h
16.9922 0.00000 m
16.9922 -8.67188 l
19.8672 -8.67188 l
20.7318 -8.67188 21.4271 -8.57552 21.9531 -8.38281  c
22.4792 -8.19010 22.9349 -7.86458 23.3203 -7.40625  c
23.9349 -6.68750 24.2422 -5.73438 24.2422 -4.54688  c
24.2422 -3.09896 23.8620 -1.97917 23.1016 -1.18750  c
22.3411 -.395833 21.2682 0.00000 19.8828 0.00000  c
16.9922 0.00000 l
h
18.2109 -.921875 m
19.7891 -.921875 l
20.9141 -.921875 21.7109 -1.22396 22.1797 -1.82812  c
22.6901 -2.47396 22.9453 -3.33854 22.9453 -4.42188  c
22.9453 -5.44271 22.6953 -6.24479 22.1953 -6.82812  c
21.8932 -7.18229 21.5339 -7.42448 21.1172 -7.55469  c
20.7005 -7.68490 20.0703 -7.75000 19.2266 -7.75000  c
18.2109 -7.75000 l
18.2109 -.921875 l
h
26.3086 .0312500 m
26.3086 -1.00000 l
26.8919 -.770833 27.4388 -.656250 27.9492 -.656250  c
28.5221 -.656250 28.9727 -.822917 29.3008 -1.15625  c
29.6289 -1.48958 29.7930 -1.95312 29.7930 -2.54688  c
29.7930 -3.84896 28.8971 -4.50000 27.1055 -4.50000  c
26.8971 -4.50000 26.6836 -4.48438 26.4648 -4.45312  c
26.4648 -8.67188 l
30.8555 -8.67188 l
30.8555 -7.67188 l
27.4805 -7.67188 l
27.4805 -5.37500 l
28.5951 -5.37500 29.4648 -5.11979 30.0898 -4.60938  c
30.7148 -4.09896 31.0273 -3.39062 31.0273 -2.48438  c
31.0273 -1.64062 30.7409 -.979167 30.1680 -.500000  c
29.5951 -.0208333 28.8086 .218750 27.8086 .218750  c
27.3711 .218750 26.8711 .156250 26.3086 .0312500  c
h
36.9590 0.00000 m
36.9590 -2.45312 l
33.0527 -2.45312 l
33.0527 -3.32812 l
36.9590 -8.67188 l
38.0527 -8.67188 l
38.0527 -3.40625 l
39.2090 -3.40625 l
39.2090 -2.45312 l
38.0527 -2.45312 l
38.0527 0.00000 l
36.9590 0.00000 l
h
34.1934 -3.40625 m
37.0371 -3.40625 l
37.0371 -7.25000 l
34.1934 -3.40625 l
h
41.1562 0.00000 m
41.1562 -8.67188 l
42.3750 -8.67188 l
42.3750 -.921875 l
46.2812 -.921875 l
46.2812 0.00000 l
41.1562 0.00000 l
h
47.4297 0.00000 m
47.4297 -1.01562 l
47.7630 -1.79688 48.4401 -2.65104 49.4609 -3.57812  c
50.1328 -4.17188 l
50.9766 -4.94271 51.3984 -5.70833 51.3984 -6.46875  c
51.3984 -6.94792 51.2552 -7.32552 50.9688 -7.60156  c
50.6823 -7.87760 50.2839 -8.01562 49.7734 -8.01562  c
49.1693 -8.01562 48.4609 -7.78646 47.6484 -7.32812  c
47.6484 -8.34375 l
48.4193 -8.70833 49.1797 -8.89062 49.9297 -8.89062  c
50.7422 -8.89062 51.3958 -8.67188 51.8906 -8.23438  c
52.3854 -7.79688 52.6328 -7.21875 52.6328 -6.50000  c
52.6328 -5.97917 52.5078 -5.51562 52.2578 -5.10938  c
52.0078 -4.70312 51.5443 -4.21354 50.8672 -3.64062  c
50.4297 -3.26562 l
49.5026 -2.48438 48.9661 -1.73438 48.8203 -1.01562  c
52.5859 -1.01562 l
52.5859 0.00000 l
47.4297 0.00000 l
h
f
[ 1.72672 0.00000 0.00000 1.72672 38.2083 107.571 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
