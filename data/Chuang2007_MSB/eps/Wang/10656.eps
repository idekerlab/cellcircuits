%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:47:59 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.72856 0.00000 0.00000 1.72856 48.2577 37.7577 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
112.424 112.424 m
156.112 156.112 l
S
newpath
5.41134 53.0840 m
9.66234 37.2191 l
S
newpath
11.9065 82.0792 m
29.9208 100.093 l
S
newpath
18.4017 66.0744 m
89.6101 46.9942 l
S
newpath
74.7809 90.6908 m
18.4017 75.5840 l
S
newpath
59.5792 11.9065 m
11.9065 59.5792 l
S
newpath
37.2191 21.3092 m
89.6101 35.3473 l
S
newpath
31.3957 31.3957 m
80.6043 80.6043 l
S
newpath
36.4160 93.5983 m
21.3092 37.2191 l
S
newpath
53.0840 5.41134 m
37.2191 9.66234 l
S
newpath
75.5840 18.4017 m
90.6908 74.7809 l
S
newpath
66.0744 18.4017 m
45.9256 93.5983 l
S
newpath
82.0792 11.9065 m
95.4336 25.2609 l
S
newpath
74.7809 102.338 m
58.9160 106.589 l
S
newpath
105.520 62.9041 m
102.338 74.7809 l
S
newpath
95.4336 57.0807 m
52.4208 100.093 l
S
.815686 1.00000 .678431 RG
newpath
193.522 172.022 m
193.522 183.896 183.896 193.522 172.022 193.522  c
160.148 193.522 150.522 183.896 150.522 172.022  c
150.522 160.148 160.148 150.522 172.022 150.522  c
183.896 150.522 193.522 160.148 193.522 172.022  c
h
f
0.00000 0.00000 0.00000 RG
newpath
194.522 172.022 m
194.522 184.448 184.448 194.522 172.022 194.522  c
159.596 194.522 149.522 184.448 149.522 172.022  c
149.522 159.596 159.596 149.522 172.022 149.522  c
184.448 149.522 194.522 159.596 194.522 172.022  c
h
193.522 172.022 m
193.522 183.896 183.896 193.522 172.022 193.522  c
160.148 193.522 150.522 183.896 150.522 172.022  c
150.522 160.148 160.148 150.522 172.022 150.522  c
183.896 150.522 193.522 160.148 193.522 172.022  c
h
f*
172.022 172.022 translate
1.00000 1.00000 scale
-27.0908 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.28125 -8.67188 l
2.28125 -4.40625 l
5.78125 -8.67188 l
7.01562 -8.67188 l
3.62500 -4.53125 l
7.62500 0.00000 l
6.06250 0.00000 l
2.28125 -4.39062 l
2.28125 0.00000 l
1.12500 0.00000 l
h
8.95898 0.00000 m
8.95898 -8.67188 l
10.1777 -8.67188 l
10.1777 -5.01562 l
14.3027 -5.01562 l
14.3027 -8.67188 l
15.5371 -8.67188 l
15.5371 0.00000 l
14.3027 0.00000 l
14.3027 -4.09375 l
10.1777 -4.09375 l
10.1777 0.00000 l
8.95898 0.00000 l
h
17.7773 0.00000 m
17.7773 -8.67188 l
20.6523 -8.67188 l
21.5169 -8.67188 22.2122 -8.57552 22.7383 -8.38281  c
23.2643 -8.19010 23.7201 -7.86458 24.1055 -7.40625  c
24.7201 -6.68750 25.0273 -5.73438 25.0273 -4.54688  c
25.0273 -3.09896 24.6471 -1.97917 23.8867 -1.18750  c
23.1263 -.395833 22.0534 0.00000 20.6680 0.00000  c
17.7773 0.00000 l
h
18.9961 -.921875 m
20.5742 -.921875 l
21.6992 -.921875 22.4961 -1.22396 22.9648 -1.82812  c
23.4753 -2.47396 23.7305 -3.33854 23.7305 -4.42188  c
23.7305 -5.44271 23.4805 -6.24479 22.9805 -6.82812  c
22.6784 -7.18229 22.3190 -7.42448 21.9023 -7.55469  c
21.4857 -7.68490 20.8555 -7.75000 20.0117 -7.75000  c
18.9961 -7.75000 l
18.9961 -.921875 l
h
26.7656 0.00000 m
26.7656 -8.67188 l
29.3906 -8.67188 l
30.2240 -8.67188 30.8620 -8.48958 31.3047 -8.12500  c
31.7474 -7.76042 31.9688 -7.22396 31.9688 -6.51562  c
31.9688 -5.35938 31.3854 -4.54167 30.2188 -4.06250  c
33.1094 0.00000 l
31.5938 0.00000 l
29.1250 -3.67188 l
27.9844 -3.67188 l
27.9844 0.00000 l
26.7656 0.00000 l
h
27.9844 -4.59375 m
28.3750 -4.59375 l
29.9271 -4.59375 30.7031 -5.19792 30.7031 -6.40625  c
30.7031 -7.30208 30.0521 -7.75000 28.7500 -7.75000  c
27.9844 -7.75000 l
27.9844 -4.59375 l
h
34.3535 0.00000 m
34.3535 -8.67188 l
36.6035 -8.67188 l
37.4681 -8.67188 38.1322 -8.50781 38.5957 -8.17969  c
39.0592 -7.85156 39.2910 -7.38021 39.2910 -6.76562  c
39.2910 -5.71354 38.6973 -4.96354 37.5098 -4.51562  c
38.9264 -4.08854 39.6348 -3.30729 39.6348 -2.17188  c
39.6348 -1.46354 39.4004 -.924479 38.9316 -.554688  c
38.4629 -.184896 37.7858 0.00000 36.9004 0.00000  c
34.3535 0.00000 l
h
35.5723 -.921875 m
35.8223 -.921875 l
36.7181 -.921875 37.3014 -.979167 37.5723 -1.09375  c
38.0827 -1.30208 38.3379 -1.69792 38.3379 -2.28125  c
38.3379 -2.80208 38.1061 -3.23177 37.6426 -3.57031  c
37.1790 -3.90885 36.6035 -4.07812 35.9160 -4.07812  c
35.5723 -4.07812 l
35.5723 -.921875 l
h
35.5723 -4.85938 m
35.9629 -4.85938 l
36.6191 -4.85938 37.1270 -5.00000 37.4863 -5.28125  c
37.8457 -5.56250 38.0254 -5.95833 38.0254 -6.46875  c
38.0254 -7.32292 37.3639 -7.75000 36.0410 -7.75000  c
35.5723 -7.75000 l
35.5723 -4.85938 l
h
42.9434 .218750 m
42.3704 .218750 41.6309 .0885417 40.7246 -.171875  c
40.7246 -1.39062 l
41.6934 -.932292 42.4954 -.703125 43.1309 -.703125  c
43.6100 -.703125 43.9980 -.830729 44.2949 -1.08594  c
44.5918 -1.34115 44.7402 -1.67708 44.7402 -2.09375  c
44.7402 -2.42708 44.6439 -2.71354 44.4512 -2.95312  c
44.2585 -3.19271 43.9017 -3.45833 43.3809 -3.75000  c
42.7871 -4.09375 l
42.0475 -4.52083 41.5267 -4.91927 41.2246 -5.28906  c
40.9225 -5.65885 40.7715 -6.09375 40.7715 -6.59375  c
40.7715 -7.26042 41.0137 -7.80990 41.4980 -8.24219  c
41.9824 -8.67448 42.5996 -8.89062 43.3496 -8.89062  c
44.0163 -8.89062 44.7194 -8.78125 45.4590 -8.56250  c
45.4590 -7.43750 l
44.5423 -7.79167 43.8600 -7.96875 43.4121 -7.96875  c
42.9850 -7.96875 42.6335 -7.85677 42.3574 -7.63281  c
42.0814 -7.40885 41.9434 -7.12500 41.9434 -6.78125  c
41.9434 -6.48958 42.0449 -6.23177 42.2480 -6.00781  c
42.4512 -5.78385 42.8236 -5.51562 43.3652 -5.20312  c
43.9746 -4.85938 l
44.7246 -4.43229 45.2480 -4.02865 45.5449 -3.64844  c
45.8418 -3.26823 45.9902 -2.81250 45.9902 -2.28125  c
45.9902 -1.53125 45.7142 -.927083 45.1621 -.468750  c
44.6100 -.0104167 43.8704 .218750 42.9434 .218750  c
h
47.8125 -.0625000 m
47.8125 -1.14062 l
48.6458 -.817708 49.2969 -.656250 49.7656 -.656250  c
50.3177 -.656250 50.7682 -.817708 51.1172 -1.14062  c
51.4661 -1.46354 51.6406 -1.88021 51.6406 -2.39062  c
51.6406 -3.60938 50.7865 -4.21875 49.0781 -4.21875  c
48.6094 -4.21875 l
48.6094 -5.00000 l
49.0156 -5.00000 l
50.6198 -5.00000 51.4219 -5.56250 51.4219 -6.68750  c
51.4219 -7.57292 50.8958 -8.01562 49.8438 -8.01562  c
49.2604 -8.01562 48.6250 -7.85417 47.9375 -7.53125  c
47.9375 -8.54688 l
48.6146 -8.77604 49.2760 -8.89062 49.9219 -8.89062  c
51.6927 -8.89062 52.5781 -8.21875 52.5781 -6.87500  c
52.5781 -5.85417 51.9740 -5.13021 50.7656 -4.70312  c
52.1719 -4.38021 52.8750 -3.61458 52.8750 -2.40625  c
52.8750 -1.58333 52.6042 -.940104 52.0625 -.476562  c
51.5208 -.0130208 50.7812 .218750 49.8438 .218750  c
49.3021 .218750 48.6250 .125000 47.8125 -.0625000  c
h
f
[ 1.72856 0.00000 0.00000 1.72856 48.2577 37.7577 ] defaultmatrix matrix concatmatrix setmatrix
.0627451 .494118 .231373 RG
newpath
21.7423 70.8292 m
.656527 91.9150 l
-20.4293 70.8292 l
.656527 49.7435 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.656527 48.3292 m
23.1565 70.8292 l
.656527 93.3292 l
-21.8435 70.8292 l
h
21.7423 70.8292 m
.656527 91.9150 l
-20.4293 70.8292 l
.656527 49.7435 l
h
f*
.656527 70.8292 translate
1.00000 1.00000 scale
-22.9453 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.32812 -8.67188 l
6.68750 -1.96875 l
6.68750 -8.67188 l
7.75000 -8.67188 l
7.75000 0.00000 l
6.54688 0.00000 l
2.17188 -6.70312 l
2.17188 0.00000 l
1.12500 0.00000 l
h
9.99023 0.00000 m
9.99023 -8.67188 l
11.2090 -8.67188 l
11.2090 -5.01562 l
15.3340 -5.01562 l
15.3340 -8.67188 l
16.5684 -8.67188 l
16.5684 0.00000 l
15.3340 0.00000 l
15.3340 -4.09375 l
11.2090 -4.09375 l
11.2090 0.00000 l
9.99023 0.00000 l
h
18.8086 0.00000 m
18.8086 -8.67188 l
21.1680 -8.67188 l
22.2096 -8.67188 22.9596 -8.49479 23.4180 -8.14062  c
23.8763 -7.78646 24.1055 -7.20833 24.1055 -6.40625  c
24.1055 -5.47917 23.7930 -4.75521 23.1680 -4.23438  c
22.5430 -3.71354 21.6784 -3.45312 20.5742 -3.45312  c
20.0273 -3.45312 l
20.0273 0.00000 l
18.8086 0.00000 l
h
20.0273 -4.37500 m
20.5273 -4.37500 l
21.2565 -4.37500 21.8190 -4.54427 22.2148 -4.88281  c
22.6107 -5.22135 22.8086 -5.69792 22.8086 -6.31250  c
22.8086 -6.82292 22.6523 -7.19010 22.3398 -7.41406  c
22.0273 -7.63802 21.5065 -7.75000 20.7773 -7.75000  c
20.0273 -7.75000 l
20.0273 -4.37500 l
h
25.3164 0.00000 m
25.3164 -1.01562 l
25.6497 -1.79688 26.3268 -2.65104 27.3477 -3.57812  c
28.0195 -4.17188 l
28.8633 -4.94271 29.2852 -5.70833 29.2852 -6.46875  c
29.2852 -6.94792 29.1419 -7.32552 28.8555 -7.60156  c
28.5690 -7.87760 28.1706 -8.01562 27.6602 -8.01562  c
27.0560 -8.01562 26.3477 -7.78646 25.5352 -7.32812  c
25.5352 -8.34375 l
26.3060 -8.70833 27.0664 -8.89062 27.8164 -8.89062  c
28.6289 -8.89062 29.2826 -8.67188 29.7773 -8.23438  c
30.2721 -7.79688 30.5195 -7.21875 30.5195 -6.50000  c
30.5195 -5.97917 30.3945 -5.51562 30.1445 -5.10938  c
29.8945 -4.70312 29.4310 -4.21354 28.7539 -3.64062  c
28.3164 -3.26562 l
27.3893 -2.48438 26.8529 -1.73438 26.7070 -1.01562  c
30.4727 -1.01562 l
30.4727 0.00000 l
25.3164 0.00000 l
h
33.0293 0.00000 m
33.0293 -8.67188 l
34.2480 -8.67188 l
34.2480 -.921875 l
38.1543 -.921875 l
38.1543 0.00000 l
33.0293 0.00000 l
h
40.1152 0.00000 m
40.1152 -.875000 l
41.8496 -.875000 l
41.8496 -7.71875 l
40.1152 -7.28125 l
40.1152 -8.17188 l
43.0059 -8.89062 l
43.0059 -.875000 l
44.7402 -.875000 l
44.7402 0.00000 l
40.1152 0.00000 l
h
f
[ 1.72856 0.00000 0.00000 1.72856 48.2577 37.7577 ] defaultmatrix matrix concatmatrix setmatrix
.701961 1.00000 .603922 RG
newpath
36.9858 15.4858 m
36.9858 27.3599 27.3599 36.9858 15.4858 36.9858  c
3.61164 36.9858 -6.01423 27.3599 -6.01423 15.4858  c
-6.01423 3.61164 3.61164 -6.01423 15.4858 -6.01423  c
27.3599 -6.01423 36.9858 3.61164 36.9858 15.4858  c
h
f
0.00000 0.00000 0.00000 RG
newpath
37.9858 15.4858 m
37.9858 27.9122 27.9122 37.9858 15.4858 37.9858  c
3.05936 37.9858 -7.01423 27.9122 -7.01423 15.4858  c
-7.01423 3.05936 3.05936 -7.01423 15.4858 -7.01423  c
27.9122 -7.01423 37.9858 3.05936 37.9858 15.4858  c
h
36.9858 15.4858 m
36.9858 27.3599 27.3599 36.9858 15.4858 36.9858  c
3.61164 36.9858 -6.01423 27.3599 -6.01423 15.4858  c
-6.01423 3.61164 3.61164 -6.01423 15.4858 -6.01423  c
27.3599 -6.01423 36.9858 3.61164 36.9858 15.4858  c
h
f*
15.4858 15.4858 translate
1.00000 1.00000 scale
-19.1689 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -5.01562 l
6.46875 -5.01562 l
6.46875 -8.67188 l
7.70312 -8.67188 l
7.70312 0.00000 l
6.46875 0.00000 l
6.46875 -4.09375 l
2.34375 -4.09375 l
2.34375 0.00000 l
1.12500 0.00000 l
h
9.94336 0.00000 m
9.94336 -8.67188 l
11.1465 -8.67188 l
15.5059 -1.96875 l
15.5059 -8.67188 l
16.5684 -8.67188 l
16.5684 0.00000 l
15.3652 0.00000 l
10.9902 -6.70312 l
10.9902 0.00000 l
9.94336 0.00000 l
h
18.8086 0.00000 m
18.8086 -8.67188 l
21.4336 -8.67188 l
22.2669 -8.67188 22.9049 -8.48958 23.3477 -8.12500  c
23.7904 -7.76042 24.0117 -7.22396 24.0117 -6.51562  c
24.0117 -5.35938 23.4284 -4.54167 22.2617 -4.06250  c
25.1523 0.00000 l
23.6367 0.00000 l
21.1680 -3.67188 l
20.0273 -3.67188 l
20.0273 0.00000 l
18.8086 0.00000 l
h
20.0273 -4.59375 m
20.4180 -4.59375 l
21.9701 -4.59375 22.7461 -5.19792 22.7461 -6.40625  c
22.7461 -7.30208 22.0951 -7.75000 20.7930 -7.75000  c
20.0273 -7.75000 l
20.0273 -4.59375 l
h
26.3965 0.00000 m
26.3965 -8.67188 l
28.7559 -8.67188 l
29.7975 -8.67188 30.5475 -8.49479 31.0059 -8.14062  c
31.4642 -7.78646 31.6934 -7.20833 31.6934 -6.40625  c
31.6934 -5.47917 31.3809 -4.75521 30.7559 -4.23438  c
30.1309 -3.71354 29.2663 -3.45312 28.1621 -3.45312  c
27.6152 -3.45312 l
27.6152 0.00000 l
26.3965 0.00000 l
h
27.6152 -4.37500 m
28.1152 -4.37500 l
28.8444 -4.37500 29.4069 -4.54427 29.8027 -4.88281  c
30.1986 -5.22135 30.3965 -5.69792 30.3965 -6.31250  c
30.3965 -6.82292 30.2402 -7.19010 29.9277 -7.41406  c
29.6152 -7.63802 29.0944 -7.75000 28.3652 -7.75000  c
27.6152 -7.75000 l
27.6152 -4.37500 l
h
33.0293 0.00000 m
33.0293 -8.67188 l
37.8730 -8.67188 l
37.8730 -7.75000 l
34.2480 -7.75000 l
34.2480 -4.84375 l
37.2949 -4.84375 l
37.2949 -3.93750 l
34.2480 -3.93750 l
34.2480 0.00000 l
33.0293 0.00000 l
h
f
[ 1.72856 0.00000 0.00000 1.72856 48.2577 37.7577 ] defaultmatrix matrix concatmatrix setmatrix
.278431 .819608 .341176 RG
newpath
91.9150 .656527 m
70.8292 21.7423 l
49.7435 .656527 l
70.8292 -20.4293 l
h
f
0.00000 0.00000 0.00000 RG
newpath
70.8292 -21.8435 m
93.3292 .656527 l
70.8292 23.1565 l
48.3292 .656527 l
h
91.9150 .656527 m
70.8292 21.7423 l
49.7435 .656527 l
70.8292 -20.4293 l
h
f*
70.8292 .656527 translate
1.00000 1.00000 scale
-22.0166 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
11.2422 .218750 m
10.0443 .218750 9.07812 -.197917 8.34375 -1.03125  c
7.60938 -1.86458 7.24219 -2.96875 7.24219 -4.34375  c
7.24219 -5.71875 7.60938 -6.82031 8.34375 -7.64844  c
9.07812 -8.47656 10.0651 -8.89062 11.3047 -8.89062  c
12.5234 -8.89062 13.5026 -8.47917 14.2422 -7.65625  c
14.9818 -6.83333 15.3516 -5.73438 15.3516 -4.35938  c
15.3516 -2.95312 14.9818 -1.83854 14.2422 -1.01562  c
13.5026 -.192708 12.5026 .218750 11.2422 .218750  c
h
11.2578 -.703125 m
12.1432 -.703125 12.8281 -1.02344 13.3125 -1.66406  c
13.7969 -2.30469 14.0391 -3.20312 14.0391 -4.35938  c
14.0391 -5.49479 13.7969 -6.38021 13.3125 -7.01562  c
12.8281 -7.65104 12.1589 -7.96875 11.3047 -7.96875  c
10.4401 -7.96875 9.76562 -7.64844 9.28125 -7.00781  c
8.79688 -6.36719 8.55469 -5.47917 8.55469 -4.34375  c
8.55469 -3.21875 8.79427 -2.33073 9.27344 -1.67969  c
9.75260 -1.02865 10.4141 -.703125 11.2578 -.703125  c
h
17.0801 0.00000 m
17.0801 -8.67188 l
18.2988 -8.67188 l
18.2988 -.921875 l
22.2051 -.921875 l
22.2051 0.00000 l
17.0801 0.00000 l
h
23.4785 0.00000 m
23.4785 -8.67188 l
26.1035 -8.67188 l
26.9368 -8.67188 27.5749 -8.48958 28.0176 -8.12500  c
28.4603 -7.76042 28.6816 -7.22396 28.6816 -6.51562  c
28.6816 -5.35938 28.0983 -4.54167 26.9316 -4.06250  c
29.8223 0.00000 l
28.3066 0.00000 l
25.8379 -3.67188 l
24.6973 -3.67188 l
24.6973 0.00000 l
23.4785 0.00000 l
h
24.6973 -4.59375 m
25.0879 -4.59375 l
26.6400 -4.59375 27.4160 -5.19792 27.4160 -6.40625  c
27.4160 -7.30208 26.7650 -7.75000 25.4629 -7.75000  c
24.6973 -7.75000 l
24.6973 -4.59375 l
h
30.9414 0.00000 m
30.9414 -1.01562 l
31.2747 -1.79688 31.9518 -2.65104 32.9727 -3.57812  c
33.6445 -4.17188 l
34.4883 -4.94271 34.9102 -5.70833 34.9102 -6.46875  c
34.9102 -6.94792 34.7669 -7.32552 34.4805 -7.60156  c
34.1940 -7.87760 33.7956 -8.01562 33.2852 -8.01562  c
32.6810 -8.01562 31.9727 -7.78646 31.1602 -7.32812  c
31.1602 -8.34375 l
31.9310 -8.70833 32.6914 -8.89062 33.4414 -8.89062  c
34.2539 -8.89062 34.9076 -8.67188 35.4023 -8.23438  c
35.8971 -7.79688 36.1445 -7.21875 36.1445 -6.50000  c
36.1445 -5.97917 36.0195 -5.51562 35.7695 -5.10938  c
35.5195 -4.70312 35.0560 -4.21354 34.3789 -3.64062  c
33.9414 -3.26562 l
33.0143 -2.48438 32.4779 -1.73438 32.3320 -1.01562  c
36.0977 -1.01562 l
36.0977 0.00000 l
30.9414 0.00000 l
h
38.6543 0.00000 m
38.6543 -8.67188 l
43.4980 -8.67188 l
43.4980 -7.75000 l
39.8730 -7.75000 l
39.8730 -4.96875 l
42.9043 -4.96875 l
42.9043 -4.06250 l
39.8730 -4.06250 l
39.8730 -.921875 l
43.7480 -.921875 l
43.7480 0.00000 l
38.6543 0.00000 l
h
f
[ 1.72856 0.00000 0.00000 1.72856 48.2577 37.7577 ] defaultmatrix matrix concatmatrix setmatrix
.737255 1.00000 .627451 RG
newpath
118.014 96.5142 m
118.014 108.388 108.388 118.014 96.5142 118.014  c
84.6401 118.014 75.0142 108.388 75.0142 96.5142  c
75.0142 84.6401 84.6401 75.0142 96.5142 75.0142  c
108.388 75.0142 118.014 84.6401 118.014 96.5142  c
h
f
0.00000 0.00000 0.00000 RG
newpath
119.014 96.5142 m
119.014 108.941 108.941 119.014 96.5142 119.014  c
84.0878 119.014 74.0142 108.941 74.0142 96.5142  c
74.0142 84.0878 84.0878 74.0142 96.5142 74.0142  c
108.941 74.0142 119.014 84.0878 119.014 96.5142  c
h
118.014 96.5142 m
118.014 108.388 108.388 118.014 96.5142 118.014  c
84.6401 118.014 75.0142 108.388 75.0142 96.5142  c
75.0142 84.6401 84.6401 75.0142 96.5142 75.0142  c
108.388 75.0142 118.014 84.6401 118.014 96.5142  c
h
f*
96.5142 96.5142 translate
1.00000 1.00000 scale
-19.8691 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -5.01562 l
6.46875 -5.01562 l
6.46875 -8.67188 l
7.70312 -8.67188 l
7.70312 0.00000 l
6.46875 0.00000 l
6.46875 -4.09375 l
2.34375 -4.09375 l
2.34375 0.00000 l
1.12500 0.00000 l
h
9.94336 0.00000 m
9.94336 -8.67188 l
11.1465 -8.67188 l
15.5059 -1.96875 l
15.5059 -8.67188 l
16.5684 -8.67188 l
16.5684 0.00000 l
15.3652 0.00000 l
10.9902 -6.70312 l
10.9902 0.00000 l
9.94336 0.00000 l
h
18.8086 0.00000 m
18.8086 -8.67188 l
21.4336 -8.67188 l
22.2669 -8.67188 22.9049 -8.48958 23.3477 -8.12500  c
23.7904 -7.76042 24.0117 -7.22396 24.0117 -6.51562  c
24.0117 -5.35938 23.4284 -4.54167 22.2617 -4.06250  c
25.1523 0.00000 l
23.6367 0.00000 l
21.1680 -3.67188 l
20.0273 -3.67188 l
20.0273 0.00000 l
18.8086 0.00000 l
h
20.0273 -4.59375 m
20.4180 -4.59375 l
21.9701 -4.59375 22.7461 -5.19792 22.7461 -6.40625  c
22.7461 -7.30208 22.0951 -7.75000 20.7930 -7.75000  c
20.0273 -7.75000 l
20.0273 -4.59375 l
h
26.3965 0.00000 m
26.3965 -8.67188 l
28.7559 -8.67188 l
29.7975 -8.67188 30.5475 -8.49479 31.0059 -8.14062  c
31.4642 -7.78646 31.6934 -7.20833 31.6934 -6.40625  c
31.6934 -5.47917 31.3809 -4.75521 30.7559 -4.23438  c
30.1309 -3.71354 29.2663 -3.45312 28.1621 -3.45312  c
27.6152 -3.45312 l
27.6152 0.00000 l
26.3965 0.00000 l
h
27.6152 -4.37500 m
28.1152 -4.37500 l
28.8444 -4.37500 29.4069 -4.54427 29.8027 -4.88281  c
30.1986 -5.22135 30.3965 -5.69792 30.3965 -6.31250  c
30.3965 -6.82292 30.2402 -7.19010 29.9277 -7.41406  c
29.6152 -7.63802 29.0944 -7.75000 28.3652 -7.75000  c
27.6152 -7.75000 l
27.6152 -4.37500 l
h
33.0293 0.00000 m
33.0293 -8.67188 l
34.1855 -8.67188 l
34.1855 -4.40625 l
37.6855 -8.67188 l
38.9199 -8.67188 l
35.5293 -4.53125 l
39.5293 0.00000 l
37.9668 0.00000 l
34.1855 -4.39062 l
34.1855 0.00000 l
33.0293 0.00000 l
h
f
[ 1.72856 0.00000 0.00000 1.72856 48.2577 37.7577 ] defaultmatrix matrix concatmatrix setmatrix
.235294 .752941 .317647 RG
newpath
62.2565 111.343 m
41.1708 132.429 l
20.0850 111.343 l
41.1708 90.2577 l
h
f
0.00000 0.00000 0.00000 RG
newpath
41.1708 88.8435 m
63.6708 111.343 l
41.1708 133.843 l
18.6708 111.343 l
h
62.2565 111.343 m
41.1708 132.429 l
20.0850 111.343 l
41.1708 90.2577 l
h
f*
41.1708 111.343 translate
1.00000 1.00000 scale
-18.9141 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
7.58789 0.00000 m
7.58789 -8.67188 l
8.79102 -8.67188 l
13.1504 -1.96875 l
13.1504 -8.67188 l
14.2129 -8.67188 l
14.2129 0.00000 l
13.0098 0.00000 l
8.63477 -6.70312 l
8.63477 0.00000 l
7.58789 0.00000 l
h
16.4531 0.00000 m
16.4531 -8.67188 l
19.0781 -8.67188 l
19.9115 -8.67188 20.5495 -8.48958 20.9922 -8.12500  c
21.4349 -7.76042 21.6562 -7.22396 21.6562 -6.51562  c
21.6562 -5.35938 21.0729 -4.54167 19.9062 -4.06250  c
22.7969 0.00000 l
21.2812 0.00000 l
18.8125 -3.67188 l
17.6719 -3.67188 l
17.6719 0.00000 l
16.4531 0.00000 l
h
17.6719 -4.59375 m
18.0625 -4.59375 l
19.6146 -4.59375 20.3906 -5.19792 20.3906 -6.40625  c
20.3906 -7.30208 19.7396 -7.75000 18.4375 -7.75000  c
17.6719 -7.75000 l
17.6719 -4.59375 l
h
24.0410 0.00000 m
24.0410 -8.67188 l
26.4004 -8.67188 l
27.4421 -8.67188 28.1921 -8.49479 28.6504 -8.14062  c
29.1087 -7.78646 29.3379 -7.20833 29.3379 -6.40625  c
29.3379 -5.47917 29.0254 -4.75521 28.4004 -4.23438  c
27.7754 -3.71354 26.9108 -3.45312 25.8066 -3.45312  c
25.2598 -3.45312 l
25.2598 0.00000 l
24.0410 0.00000 l
h
25.2598 -4.37500 m
25.7598 -4.37500 l
26.4889 -4.37500 27.0514 -4.54427 27.4473 -4.88281  c
27.8431 -5.22135 28.0410 -5.69792 28.0410 -6.31250  c
28.0410 -6.82292 27.8848 -7.19010 27.5723 -7.41406  c
27.2598 -7.63802 26.7389 -7.75000 26.0098 -7.75000  c
25.2598 -7.75000 l
25.2598 -4.37500 l
h
35.0645 -3.31250 m
33.5801 -7.06250 l
32.1113 -3.31250 l
35.0645 -3.31250 l
h
36.3613 0.00000 m
35.4238 -2.40625 l
31.7520 -2.40625 l
30.7988 0.00000 l
29.6426 0.00000 l
33.0957 -8.67188 l
34.3145 -8.67188 l
37.6895 0.00000 l
36.3613 0.00000 l
h
f
[ 1.72856 0.00000 0.00000 1.72856 48.2577 37.7577 ] defaultmatrix matrix concatmatrix setmatrix
.407843 1.00000 .403922 RG
newpath
132.843 41.1708 m
132.843 53.0449 123.218 62.6708 111.343 62.6708  c
99.4694 62.6708 89.8435 53.0449 89.8435 41.1708  c
89.8435 29.2966 99.4694 19.6708 111.343 19.6708  c
123.218 19.6708 132.843 29.2966 132.843 41.1708  c
h
f
0.00000 0.00000 0.00000 RG
newpath
133.843 41.1708 m
133.843 53.5972 123.770 63.6708 111.343 63.6708  c
98.9171 63.6708 88.8435 53.5972 88.8435 41.1708  c
88.8435 28.7444 98.9171 18.6708 111.343 18.6708  c
123.770 18.6708 133.843 28.7444 133.843 41.1708  c
h
132.843 41.1708 m
132.843 53.0449 123.218 62.6708 111.343 62.6708  c
99.4694 62.6708 89.8435 53.0449 89.8435 41.1708  c
89.8435 29.2966 99.4694 19.6708 111.343 19.6708  c
123.218 19.6708 132.843 29.2966 132.843 41.1708  c
h
f*
111.343 41.1708 translate
1.00000 1.00000 scale
-24.1553 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -5.01562 l
6.46875 -5.01562 l
6.46875 -8.67188 l
7.70312 -8.67188 l
7.70312 0.00000 l
6.46875 0.00000 l
6.46875 -4.09375 l
2.34375 -4.09375 l
2.34375 0.00000 l
1.12500 0.00000 l
h
9.94336 0.00000 m
9.94336 -8.67188 l
11.1465 -8.67188 l
15.5059 -1.96875 l
15.5059 -8.67188 l
16.5684 -8.67188 l
16.5684 0.00000 l
15.3652 0.00000 l
10.9902 -6.70312 l
10.9902 0.00000 l
9.94336 0.00000 l
h
18.8086 0.00000 m
18.8086 -8.67188 l
21.4336 -8.67188 l
22.2669 -8.67188 22.9049 -8.48958 23.3477 -8.12500  c
23.7904 -7.76042 24.0117 -7.22396 24.0117 -6.51562  c
24.0117 -5.35938 23.4284 -4.54167 22.2617 -4.06250  c
25.1523 0.00000 l
23.6367 0.00000 l
21.1680 -3.67188 l
20.0273 -3.67188 l
20.0273 0.00000 l
18.8086 0.00000 l
h
20.0273 -4.59375 m
20.4180 -4.59375 l
21.9701 -4.59375 22.7461 -5.19792 22.7461 -6.40625  c
22.7461 -7.30208 22.0951 -7.75000 20.7930 -7.75000  c
20.0273 -7.75000 l
20.0273 -4.59375 l
h
26.3965 0.00000 m
26.3965 -8.67188 l
28.7559 -8.67188 l
29.7975 -8.67188 30.5475 -8.49479 31.0059 -8.14062  c
31.4642 -7.78646 31.6934 -7.20833 31.6934 -6.40625  c
31.6934 -5.47917 31.3809 -4.75521 30.7559 -4.23438  c
30.1309 -3.71354 29.2663 -3.45312 28.1621 -3.45312  c
27.6152 -3.45312 l
27.6152 0.00000 l
26.3965 0.00000 l
h
27.6152 -4.37500 m
28.1152 -4.37500 l
28.8444 -4.37500 29.4069 -4.54427 29.8027 -4.88281  c
30.1986 -5.22135 30.3965 -5.69792 30.3965 -6.31250  c
30.3965 -6.82292 30.2402 -7.19010 29.9277 -7.41406  c
29.6152 -7.63802 29.0944 -7.75000 28.3652 -7.75000  c
27.6152 -7.75000 l
27.6152 -4.37500 l
h
33.0293 0.00000 m
33.0293 -8.67188 l
34.2480 -8.67188 l
34.2480 -5.01562 l
38.3730 -5.01562 l
38.3730 -8.67188 l
39.6074 -8.67188 l
39.6074 0.00000 l
38.3730 0.00000 l
38.3730 -4.09375 l
34.2480 -4.09375 l
34.2480 0.00000 l
33.0293 0.00000 l
h
41.7227 0.00000 m
41.7227 -1.01562 l
42.0560 -1.79688 42.7331 -2.65104 43.7539 -3.57812  c
44.4258 -4.17188 l
45.2695 -4.94271 45.6914 -5.70833 45.6914 -6.46875  c
45.6914 -6.94792 45.5482 -7.32552 45.2617 -7.60156  c
44.9753 -7.87760 44.5768 -8.01562 44.0664 -8.01562  c
43.4622 -8.01562 42.7539 -7.78646 41.9414 -7.32812  c
41.9414 -8.34375 l
42.7122 -8.70833 43.4727 -8.89062 44.2227 -8.89062  c
45.0352 -8.89062 45.6888 -8.67188 46.1836 -8.23438  c
46.6784 -7.79688 46.9258 -7.21875 46.9258 -6.50000  c
46.9258 -5.97917 46.8008 -5.51562 46.5508 -5.10938  c
46.3008 -4.70312 45.8372 -4.21354 45.1602 -3.64062  c
44.7227 -3.26562 l
43.7956 -2.48438 43.2591 -1.73438 43.1133 -1.01562  c
46.8789 -1.01562 l
46.8789 0.00000 l
41.7227 0.00000 l
h
f
[ 1.72856 0.00000 0.00000 1.72856 48.2577 37.7577 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
