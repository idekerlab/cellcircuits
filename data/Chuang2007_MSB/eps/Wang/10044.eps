%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:46:18 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.52481 0.00000 0.00000 1.52481 97.9073 33.2351 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
25.5144 160.269 m
19.4856 163.750 l
S
newpath
45.0000 171.519 m
45.0000 178.481 l
S
newpath
56.2500 129.534 m
81.2444 86.2420 l
S
newpath
19.4856 186.250 m
30.7356 192.745 l
S
newpath
119.380 20.1893 m
97.7156 57.7132 l
S
1.00000 .905882 .705882 RG
newpath
66.5000 149.019 m
66.5000 160.893 56.8741 170.519 45.0000 170.519  c
33.1259 170.519 23.5000 160.893 23.5000 149.019  c
23.5000 137.145 33.1259 127.519 45.0000 127.519  c
56.8741 127.519 66.5000 137.145 66.5000 149.019  c
h
f
0.00000 0.00000 0.00000 RG
newpath
67.5000 149.019 m
67.5000 161.446 57.4264 171.519 45.0000 171.519  c
32.5736 171.519 22.5000 161.446 22.5000 149.019  c
22.5000 136.593 32.5736 126.519 45.0000 126.519  c
57.4264 126.519 67.5000 136.593 67.5000 149.019  c
h
66.5000 149.019 m
66.5000 160.893 56.8741 170.519 45.0000 170.519  c
33.1259 170.519 23.5000 160.893 23.5000 149.019  c
23.5000 137.145 33.1259 127.519 45.0000 127.519  c
56.8741 127.519 66.5000 137.145 66.5000 149.019  c
h
f*
45.0000 149.019 translate
1.00000 1.00000 scale
-19.1455 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.32812 -8.67188 l
6.68750 -1.96875 l
6.68750 -8.67188 l
7.75000 -8.67188 l
7.75000 0.00000 l
6.54688 0.00000 l
2.17188 -6.70312 l
2.17188 0.00000 l
1.12500 0.00000 l
h
13.6934 .218750 m
12.3496 .218750 11.3105 -.177083 10.5762 -.968750  c
9.84180 -1.76042 9.47461 -2.88021 9.47461 -4.32812  c
9.47461 -5.77604 9.84961 -6.89844 10.5996 -7.69531  c
11.3496 -8.49219 12.4017 -8.89062 13.7559 -8.89062  c
14.5371 -8.89062 15.4486 -8.76562 16.4902 -8.51562  c
16.4902 -7.35938 l
15.3027 -7.76562 14.3861 -7.96875 13.7402 -7.96875  c
12.8027 -7.96875 12.0762 -7.65104 11.5605 -7.01562  c
11.0449 -6.38021 10.7871 -5.47917 10.7871 -4.31250  c
10.7871 -3.20833 11.0605 -2.33854 11.6074 -1.70312  c
12.1543 -1.06771 12.9069 -.750000 13.8652 -.750000  c
14.6882 -.750000 15.5684 -1.00000 16.5059 -1.50000  c
16.5059 -.453125 l
15.6517 -.00520833 14.7142 .218750 13.6934 .218750  c
h
18.2930 0.00000 m
18.2930 -8.67188 l
20.5430 -8.67188 l
21.4076 -8.67188 22.0716 -8.50781 22.5352 -8.17969  c
22.9987 -7.85156 23.2305 -7.38021 23.2305 -6.76562  c
23.2305 -5.71354 22.6367 -4.96354 21.4492 -4.51562  c
22.8659 -4.08854 23.5742 -3.30729 23.5742 -2.17188  c
23.5742 -1.46354 23.3398 -.924479 22.8711 -.554688  c
22.4023 -.184896 21.7253 0.00000 20.8398 0.00000  c
18.2930 0.00000 l
h
19.5117 -.921875 m
19.7617 -.921875 l
20.6576 -.921875 21.2409 -.979167 21.5117 -1.09375  c
22.0221 -1.30208 22.2773 -1.69792 22.2773 -2.28125  c
22.2773 -2.80208 22.0456 -3.23177 21.5820 -3.57031  c
21.1185 -3.90885 20.5430 -4.07812 19.8555 -4.07812  c
19.5117 -4.07812 l
19.5117 -.921875 l
h
19.5117 -4.85938 m
19.9023 -4.85938 l
20.5586 -4.85938 21.0664 -5.00000 21.4258 -5.28125  c
21.7852 -5.56250 21.9648 -5.95833 21.9648 -6.46875  c
21.9648 -7.32292 21.3034 -7.75000 19.9805 -7.75000  c
19.5117 -7.75000 l
19.5117 -4.85938 l
h
25.1953 0.00000 m
25.1953 -8.67188 l
27.5547 -8.67188 l
28.5964 -8.67188 29.3464 -8.49479 29.8047 -8.14062  c
30.2630 -7.78646 30.4922 -7.20833 30.4922 -6.40625  c
30.4922 -5.47917 30.1797 -4.75521 29.5547 -4.23438  c
28.9297 -3.71354 28.0651 -3.45312 26.9609 -3.45312  c
26.4141 -3.45312 l
26.4141 0.00000 l
25.1953 0.00000 l
h
26.4141 -4.37500 m
26.9141 -4.37500 l
27.6432 -4.37500 28.2057 -4.54427 28.6016 -4.88281  c
28.9974 -5.22135 29.1953 -5.69792 29.1953 -6.31250  c
29.1953 -6.82292 29.0391 -7.19010 28.7266 -7.41406  c
28.4141 -7.63802 27.8932 -7.75000 27.1641 -7.75000  c
26.4141 -7.75000 l
26.4141 -4.37500 l
h
31.7031 0.00000 m
31.7031 -1.01562 l
32.0365 -1.79688 32.7135 -2.65104 33.7344 -3.57812  c
34.4062 -4.17188 l
35.2500 -4.94271 35.6719 -5.70833 35.6719 -6.46875  c
35.6719 -6.94792 35.5286 -7.32552 35.2422 -7.60156  c
34.9557 -7.87760 34.5573 -8.01562 34.0469 -8.01562  c
33.4427 -8.01562 32.7344 -7.78646 31.9219 -7.32812  c
31.9219 -8.34375 l
32.6927 -8.70833 33.4531 -8.89062 34.2031 -8.89062  c
35.0156 -8.89062 35.6693 -8.67188 36.1641 -8.23438  c
36.6589 -7.79688 36.9062 -7.21875 36.9062 -6.50000  c
36.9062 -5.97917 36.7812 -5.51562 36.5312 -5.10938  c
36.2812 -4.70312 35.8177 -4.21354 35.1406 -3.64062  c
34.7031 -3.26562 l
33.7760 -2.48438 33.2396 -1.73438 33.0938 -1.01562  c
36.8594 -1.01562 l
36.8594 0.00000 l
31.7031 0.00000 l
h
f
[ 1.52481 0.00000 0.00000 1.52481 97.9073 33.2351 ] defaultmatrix matrix concatmatrix setmatrix
.933333 1.00000 .752941 RG
newpath
21.5000 175.000 m
21.5000 186.874 11.8741 196.500 0.00000 196.500  c
-11.8741 196.500 -21.5000 186.874 -21.5000 175.000  c
-21.5000 163.126 -11.8741 153.500 0.00000 153.500  c
11.8741 153.500 21.5000 163.126 21.5000 175.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
22.5000 175.000 m
22.5000 187.426 12.4264 197.500 0.00000 197.500  c
-12.4264 197.500 -22.5000 187.426 -22.5000 175.000  c
-22.5000 162.574 -12.4264 152.500 0.00000 152.500  c
12.4264 152.500 22.5000 162.574 22.5000 175.000  c
h
21.5000 175.000 m
21.5000 186.874 11.8741 196.500 0.00000 196.500  c
-11.8741 196.500 -21.5000 186.874 -21.5000 175.000  c
-21.5000 163.126 -11.8741 153.500 0.00000 153.500  c
11.8741 153.500 21.5000 163.126 21.5000 175.000  c
h
f*
0.00000 175.000 translate
1.00000 1.00000 scale
-17.2676 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
7.58789 0.00000 m
7.58789 -8.67188 l
12.4316 -8.67188 l
12.4316 -7.75000 l
8.80664 -7.75000 l
8.80664 -4.84375 l
11.8535 -4.84375 l
11.8535 -3.93750 l
8.80664 -3.93750 l
8.80664 0.00000 l
7.58789 0.00000 l
h
14.0215 0.00000 m
14.0215 -8.67188 l
16.6465 -8.67188 l
17.4798 -8.67188 18.1178 -8.48958 18.5605 -8.12500  c
19.0033 -7.76042 19.2246 -7.22396 19.2246 -6.51562  c
19.2246 -5.35938 18.6413 -4.54167 17.4746 -4.06250  c
20.3652 0.00000 l
18.8496 0.00000 l
16.3809 -3.67188 l
15.2402 -3.67188 l
15.2402 0.00000 l
14.0215 0.00000 l
h
15.2402 -4.59375 m
15.6309 -4.59375 l
17.1829 -4.59375 17.9590 -5.19792 17.9590 -6.40625  c
17.9590 -7.30208 17.3079 -7.75000 16.0059 -7.75000  c
15.2402 -7.75000 l
15.2402 -4.59375 l
h
23.2969 .218750 m
22.7240 .218750 21.9844 .0885417 21.0781 -.171875  c
21.0781 -1.39062 l
22.0469 -.932292 22.8490 -.703125 23.4844 -.703125  c
23.9635 -.703125 24.3516 -.830729 24.6484 -1.08594  c
24.9453 -1.34115 25.0938 -1.67708 25.0938 -2.09375  c
25.0938 -2.42708 24.9974 -2.71354 24.8047 -2.95312  c
24.6120 -3.19271 24.2552 -3.45833 23.7344 -3.75000  c
23.1406 -4.09375 l
22.4010 -4.52083 21.8802 -4.91927 21.5781 -5.28906  c
21.2760 -5.65885 21.1250 -6.09375 21.1250 -6.59375  c
21.1250 -7.26042 21.3672 -7.80990 21.8516 -8.24219  c
22.3359 -8.67448 22.9531 -8.89062 23.7031 -8.89062  c
24.3698 -8.89062 25.0729 -8.78125 25.8125 -8.56250  c
25.8125 -7.43750 l
24.8958 -7.79167 24.2135 -7.96875 23.7656 -7.96875  c
23.3385 -7.96875 22.9870 -7.85677 22.7109 -7.63281  c
22.4349 -7.40885 22.2969 -7.12500 22.2969 -6.78125  c
22.2969 -6.48958 22.3984 -6.23177 22.6016 -6.00781  c
22.8047 -5.78385 23.1771 -5.51562 23.7188 -5.20312  c
24.3281 -4.85938 l
25.0781 -4.43229 25.6016 -4.02865 25.8984 -3.64844  c
26.1953 -3.26823 26.3438 -2.81250 26.3438 -2.28125  c
26.3438 -1.53125 26.0677 -.927083 25.5156 -.468750  c
24.9635 -.0104167 24.2240 .218750 23.2969 .218750  c
h
27.9473 0.00000 m
27.9473 -1.01562 l
28.2806 -1.79688 28.9577 -2.65104 29.9785 -3.57812  c
30.6504 -4.17188 l
31.4941 -4.94271 31.9160 -5.70833 31.9160 -6.46875  c
31.9160 -6.94792 31.7728 -7.32552 31.4863 -7.60156  c
31.1999 -7.87760 30.8014 -8.01562 30.2910 -8.01562  c
29.6868 -8.01562 28.9785 -7.78646 28.1660 -7.32812  c
28.1660 -8.34375 l
28.9368 -8.70833 29.6973 -8.89062 30.4473 -8.89062  c
31.2598 -8.89062 31.9134 -8.67188 32.4082 -8.23438  c
32.9030 -7.79688 33.1504 -7.21875 33.1504 -6.50000  c
33.1504 -5.97917 33.0254 -5.51562 32.7754 -5.10938  c
32.5254 -4.70312 32.0618 -4.21354 31.3848 -3.64062  c
30.9473 -3.26562 l
30.0202 -2.48438 29.4837 -1.73438 29.3379 -1.01562  c
33.1035 -1.01562 l
33.1035 0.00000 l
27.9473 0.00000 l
h
f
[ 1.52481 0.00000 0.00000 1.52481 97.9073 33.2351 ] defaultmatrix matrix concatmatrix setmatrix
.980392 1.00000 .788235 RG
newpath
152.130 .703728 m
152.130 12.5778 142.504 22.2037 130.630 22.2037  c
118.756 22.2037 109.130 12.5778 109.130 .703728  c
109.130 -11.1704 118.756 -20.7963 130.630 -20.7963  c
142.504 -20.7963 152.130 -11.1704 152.130 .703728  c
h
f
0.00000 0.00000 0.00000 RG
newpath
153.130 .703728 m
153.130 13.1301 143.056 23.2037 130.630 23.2037  c
118.204 23.2037 108.130 13.1301 108.130 .703728  c
108.130 -11.7227 118.204 -21.7963 130.630 -21.7963  c
143.056 -21.7963 153.130 -11.7227 153.130 .703728  c
h
152.130 .703728 m
152.130 12.5778 142.504 22.2037 130.630 22.2037  c
118.756 22.2037 109.130 12.5778 109.130 .703728  c
109.130 -11.1704 118.756 -20.7963 130.630 -20.7963  c
142.504 -20.7963 152.130 -11.1704 152.130 .703728  c
h
f*
130.630 .703728 translate
1.00000 1.00000 scale
-23.8740 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
7.58789 0.00000 m
7.58789 -8.67188 l
8.80664 -8.67188 l
8.80664 -5.01562 l
12.9316 -5.01562 l
12.9316 -8.67188 l
14.1660 -8.67188 l
14.1660 0.00000 l
12.9316 0.00000 l
12.9316 -4.09375 l
8.80664 -4.09375 l
8.80664 0.00000 l
7.58789 0.00000 l
h
16.2812 0.00000 m
16.2812 -1.01562 l
16.6146 -1.79688 17.2917 -2.65104 18.3125 -3.57812  c
18.9844 -4.17188 l
19.8281 -4.94271 20.2500 -5.70833 20.2500 -6.46875  c
20.2500 -6.94792 20.1068 -7.32552 19.8203 -7.60156  c
19.5339 -7.87760 19.1354 -8.01562 18.6250 -8.01562  c
18.0208 -8.01562 17.3125 -7.78646 16.5000 -7.32812  c
16.5000 -8.34375 l
17.2708 -8.70833 18.0312 -8.89062 18.7812 -8.89062  c
19.5938 -8.89062 20.2474 -8.67188 20.7422 -8.23438  c
21.2370 -7.79688 21.4844 -7.21875 21.4844 -6.50000  c
21.4844 -5.97917 21.3594 -5.51562 21.1094 -5.10938  c
20.8594 -4.70312 20.3958 -4.21354 19.7188 -3.64062  c
19.2812 -3.26562 l
18.3542 -2.48438 17.8177 -1.73438 17.6719 -1.01562  c
21.4375 -1.01562 l
21.4375 0.00000 l
16.2812 0.00000 l
h
23.9941 0.00000 m
23.9941 -8.67188 l
26.8691 -8.67188 l
27.7337 -8.67188 28.4290 -8.57552 28.9551 -8.38281  c
29.4811 -8.19010 29.9368 -7.86458 30.3223 -7.40625  c
30.9368 -6.68750 31.2441 -5.73438 31.2441 -4.54688  c
31.2441 -3.09896 30.8639 -1.97917 30.1035 -1.18750  c
29.3431 -.395833 28.2702 0.00000 26.8848 0.00000  c
23.9941 0.00000 l
h
25.2129 -.921875 m
26.7910 -.921875 l
27.9160 -.921875 28.7129 -1.22396 29.1816 -1.82812  c
29.6921 -2.47396 29.9473 -3.33854 29.9473 -4.42188  c
29.9473 -5.44271 29.6973 -6.24479 29.1973 -6.82812  c
28.8952 -7.18229 28.5358 -7.42448 28.1191 -7.55469  c
27.7025 -7.68490 27.0723 -7.75000 26.2285 -7.75000  c
25.2129 -7.75000 l
25.2129 -.921875 l
h
33.0762 -.0625000 m
33.0762 -1.14062 l
33.9095 -.817708 34.5605 -.656250 35.0293 -.656250  c
35.5814 -.656250 36.0319 -.817708 36.3809 -1.14062  c
36.7298 -1.46354 36.9043 -1.88021 36.9043 -2.39062  c
36.9043 -3.60938 36.0501 -4.21875 34.3418 -4.21875  c
33.8730 -4.21875 l
33.8730 -5.00000 l
34.2793 -5.00000 l
35.8835 -5.00000 36.6855 -5.56250 36.6855 -6.68750  c
36.6855 -7.57292 36.1595 -8.01562 35.1074 -8.01562  c
34.5241 -8.01562 33.8887 -7.85417 33.2012 -7.53125  c
33.2012 -8.54688 l
33.8783 -8.77604 34.5397 -8.89062 35.1855 -8.89062  c
36.9564 -8.89062 37.8418 -8.21875 37.8418 -6.87500  c
37.8418 -5.85417 37.2376 -5.13021 36.0293 -4.70312  c
37.4355 -4.38021 38.1387 -3.61458 38.1387 -2.40625  c
38.1387 -1.58333 37.8678 -.940104 37.3262 -.476562  c
36.7845 -.0130208 36.0449 .218750 35.1074 .218750  c
34.5658 .218750 33.8887 .125000 33.0762 -.0625000  c
h
44.2734 .218750 m
42.9297 .218750 41.8906 -.177083 41.1562 -.968750  c
40.4219 -1.76042 40.0547 -2.88021 40.0547 -4.32812  c
40.0547 -5.77604 40.4297 -6.89844 41.1797 -7.69531  c
41.9297 -8.49219 42.9818 -8.89062 44.3359 -8.89062  c
45.1172 -8.89062 46.0286 -8.76562 47.0703 -8.51562  c
47.0703 -7.35938 l
45.8828 -7.76562 44.9661 -7.96875 44.3203 -7.96875  c
43.3828 -7.96875 42.6562 -7.65104 42.1406 -7.01562  c
41.6250 -6.38021 41.3672 -5.47917 41.3672 -4.31250  c
41.3672 -3.20833 41.6406 -2.33854 42.1875 -1.70312  c
42.7344 -1.06771 43.4870 -.750000 44.4453 -.750000  c
45.2682 -.750000 46.1484 -1.00000 47.0859 -1.50000  c
47.0859 -.453125 l
46.2318 -.00520833 45.2943 .218750 44.2734 .218750  c
h
f
[ 1.52481 0.00000 0.00000 1.52481 97.9073 33.2351 ] defaultmatrix matrix concatmatrix setmatrix
.949020 .298039 .200000 RG
newpath
110.566 71.9776 m
89.4800 93.0634 l
68.3942 71.9776 l
89.4800 50.8918 l
h
f
0.00000 0.00000 0.00000 RG
newpath
89.4800 49.4776 m
111.980 71.9776 l
89.4800 94.4776 l
66.9800 71.9776 l
h
110.566 71.9776 m
89.4800 93.0634 l
68.3942 71.9776 l
89.4800 50.8918 l
h
f*
89.4800 71.9776 translate
1.00000 1.00000 scale
-22.2949 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -.921875 l
6.25000 -.921875 l
6.25000 0.00000 l
1.12500 0.00000 l
h
7.44531 -8.67188 m
8.67969 -8.67188 l
8.67969 -3.20312 l
8.67969 -2.32812 8.84115 -1.69271 9.16406 -1.29688  c
9.48698 -.901042 9.99740 -.703125 10.6953 -.703125  c
11.3828 -.703125 11.8698 -.890625 12.1562 -1.26562  c
12.4427 -1.64062 12.5859 -2.27083 12.5859 -3.15625  c
12.5859 -8.67188 l
13.6641 -8.67188 l
13.6641 -3.17188 l
13.6641 -1.99479 13.4219 -1.13542 12.9375 -.593750  c
12.4531 -.0520833 11.6797 .218750 10.6172 .218750  c
9.53385 .218750 8.73438 -.0598958 8.21875 -.617188  c
7.70312 -1.17448 7.44531 -2.04167 7.44531 -3.21875  c
7.44531 -8.67188 l
h
19.5410 .218750 m
18.1973 .218750 17.1582 -.177083 16.4238 -.968750  c
15.6895 -1.76042 15.3223 -2.88021 15.3223 -4.32812  c
15.3223 -5.77604 15.6973 -6.89844 16.4473 -7.69531  c
17.1973 -8.49219 18.2493 -8.89062 19.6035 -8.89062  c
20.3848 -8.89062 21.2962 -8.76562 22.3379 -8.51562  c
22.3379 -7.35938 l
21.1504 -7.76562 20.2337 -7.96875 19.5879 -7.96875  c
18.6504 -7.96875 17.9238 -7.65104 17.4082 -7.01562  c
16.8926 -6.38021 16.6348 -5.47917 16.6348 -4.31250  c
16.6348 -3.20833 16.9082 -2.33854 17.4551 -1.70312  c
18.0020 -1.06771 18.7546 -.750000 19.7129 -.750000  c
20.5358 -.750000 21.4160 -1.00000 22.3535 -1.50000  c
22.3535 -.453125 l
21.4993 -.00520833 20.5618 .218750 19.5410 .218750  c
h
24.8281 0.00000 m
24.9323 -.677083 25.0911 -1.26042 25.3047 -1.75000  c
25.5182 -2.23958 25.8906 -2.91667 26.4219 -3.78125  c
28.7812 -7.59375 l
24.3125 -7.59375 l
24.3125 -8.67188 l
29.8906 -8.67188 l
29.8906 -7.59375 l
27.6615 -4.31250 26.4167 -1.78125 26.1562 0.00000  c
24.8281 0.00000 l
h
31.7285 0.00000 m
31.7285 -8.67188 l
32.9473 -8.67188 l
32.9473 -.921875 l
36.8535 -.921875 l
36.8535 0.00000 l
31.7285 0.00000 l
h
38.0020 0.00000 m
38.0020 -1.01562 l
38.3353 -1.79688 39.0124 -2.65104 40.0332 -3.57812  c
40.7051 -4.17188 l
41.5488 -4.94271 41.9707 -5.70833 41.9707 -6.46875  c
41.9707 -6.94792 41.8275 -7.32552 41.5410 -7.60156  c
41.2546 -7.87760 40.8561 -8.01562 40.3457 -8.01562  c
39.7415 -8.01562 39.0332 -7.78646 38.2207 -7.32812  c
38.2207 -8.34375 l
38.9915 -8.70833 39.7520 -8.89062 40.5020 -8.89062  c
41.3145 -8.89062 41.9681 -8.67188 42.4629 -8.23438  c
42.9577 -7.79688 43.2051 -7.21875 43.2051 -6.50000  c
43.2051 -5.97917 43.0801 -5.51562 42.8301 -5.10938  c
42.5801 -4.70312 42.1165 -4.21354 41.4395 -3.64062  c
41.0020 -3.26562 l
40.0749 -2.48438 39.5384 -1.73438 39.3926 -1.01562  c
43.1582 -1.01562 l
43.1582 0.00000 l
38.0020 0.00000 l
h
f
[ 1.52481 0.00000 0.00000 1.52481 97.9073 33.2351 ] defaultmatrix matrix concatmatrix setmatrix
.345098 .917647 .372549 RG
newpath
66.0858 200.981 m
45.0000 222.067 l
23.9142 200.981 l
45.0000 179.895 l
h
f
0.00000 0.00000 0.00000 RG
newpath
45.0000 178.481 m
67.5000 200.981 l
45.0000 223.481 l
22.5000 200.981 l
h
66.0858 200.981 m
45.0000 222.067 l
23.9142 200.981 l
45.0000 179.895 l
h
f*
45.0000 200.981 translate
1.00000 1.00000 scale
-23.8857 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -5.01562 l
6.46875 -5.01562 l
6.46875 -8.67188 l
7.70312 -8.67188 l
7.70312 0.00000 l
6.46875 0.00000 l
6.46875 -4.09375 l
2.34375 -4.09375 l
2.34375 0.00000 l
1.12500 0.00000 l
h
9.94336 0.00000 m
9.94336 -8.67188 l
11.1465 -8.67188 l
15.5059 -1.96875 l
15.5059 -8.67188 l
16.5684 -8.67188 l
16.5684 0.00000 l
15.3652 0.00000 l
10.9902 -6.70312 l
10.9902 0.00000 l
9.94336 0.00000 l
h
18.8086 0.00000 m
18.8086 -8.67188 l
21.4336 -8.67188 l
22.2669 -8.67188 22.9049 -8.48958 23.3477 -8.12500  c
23.7904 -7.76042 24.0117 -7.22396 24.0117 -6.51562  c
24.0117 -5.35938 23.4284 -4.54167 22.2617 -4.06250  c
25.1523 0.00000 l
23.6367 0.00000 l
21.1680 -3.67188 l
20.0273 -3.67188 l
20.0273 0.00000 l
18.8086 0.00000 l
h
20.0273 -4.59375 m
20.4180 -4.59375 l
21.9701 -4.59375 22.7461 -5.19792 22.7461 -6.40625  c
22.7461 -7.30208 22.0951 -7.75000 20.7930 -7.75000  c
20.0273 -7.75000 l
20.0273 -4.59375 l
h
26.3965 0.00000 m
26.3965 -8.67188 l
28.7559 -8.67188 l
29.7975 -8.67188 30.5475 -8.49479 31.0059 -8.14062  c
31.4642 -7.78646 31.6934 -7.20833 31.6934 -6.40625  c
31.6934 -5.47917 31.3809 -4.75521 30.7559 -4.23438  c
30.1309 -3.71354 29.2663 -3.45312 28.1621 -3.45312  c
27.6152 -3.45312 l
27.6152 0.00000 l
26.3965 0.00000 l
h
27.6152 -4.37500 m
28.1152 -4.37500 l
28.8444 -4.37500 29.4069 -4.54427 29.8027 -4.88281  c
30.1986 -5.22135 30.3965 -5.69792 30.3965 -6.31250  c
30.3965 -6.82292 30.2402 -7.19010 29.9277 -7.41406  c
29.6152 -7.63802 29.0944 -7.75000 28.3652 -7.75000  c
27.6152 -7.75000 l
27.6152 -4.37500 l
h
37.4199 -3.31250 m
35.9355 -7.06250 l
34.4668 -3.31250 l
37.4199 -3.31250 l
h
38.7168 0.00000 m
37.7793 -2.40625 l
34.1074 -2.40625 l
33.1543 0.00000 l
31.9980 0.00000 l
35.4512 -8.67188 l
36.6699 -8.67188 l
40.0449 0.00000 l
38.7168 0.00000 l
h
43.9492 .218750 m
43.0534 .218750 42.3294 -.203125 41.7773 -1.04688  c
41.2253 -1.89062 40.9492 -2.98958 40.9492 -4.34375  c
40.9492 -5.70833 41.2279 -6.80729 41.7852 -7.64062  c
42.3424 -8.47396 43.0742 -8.89062 43.9805 -8.89062  c
44.8867 -8.89062 45.6185 -8.47396 46.1758 -7.64062  c
46.7331 -6.80729 47.0117 -5.71354 47.0117 -4.35938  c
47.0117 -2.97396 46.7331 -1.86458 46.1758 -1.03125  c
45.6185 -.197917 44.8763 .218750 43.9492 .218750  c
h
43.9648 -.656250 m
45.1836 -.656250 45.7930 -1.89583 45.7930 -4.37500  c
45.7930 -6.80208 45.1888 -8.01562 43.9805 -8.01562  c
42.7826 -8.01562 42.1836 -6.79167 42.1836 -4.34375  c
42.1836 -1.88542 42.7773 -.656250 43.9648 -.656250  c
h
f
[ 1.52481 0.00000 0.00000 1.52481 97.9073 33.2351 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
