%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:47:24 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.93520 0.00000 0.00000 1.93520 42.7741 42.6143 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
32.4977 12.7722 m
45.7075 7.30050 l
S
newpath
25.7925 55.3797 m
20.3208 42.1699 l
S
newpath
73.6792 29.8301 m
68.2075 16.6203 l
S
newpath
103.077 59.2278 m
138.723 73.9928 l
S
newpath
48.2925 64.6995 m
61.5023 59.2278 l
S
newpath
9.00719 127.723 m
25.7925 87.1995 l
S
1.00000 .878431 .678431 RG
newpath
33.2104 21.3826 m
33.2104 33.2567 23.5845 42.8826 11.7104 42.8826  c
-.163721 42.8826 -9.78960 33.2567 -9.78960 21.3826  c
-9.78960 9.50845 -.163721 -.117430 11.7104 -.117430  c
23.5845 -.117430 33.2104 9.50845 33.2104 21.3826  c
h
f
0.00000 0.00000 0.00000 RG
newpath
34.2104 21.3826 m
34.2104 33.8090 24.1368 43.8826 11.7104 43.8826  c
-.716006 43.8826 -10.7896 33.8090 -10.7896 21.3826  c
-10.7896 8.95616 -.716006 -1.11743 11.7104 -1.11743  c
24.1368 -1.11743 34.2104 8.95616 34.2104 21.3826  c
h
33.2104 21.3826 m
33.2104 33.2567 23.5845 42.8826 11.7104 42.8826  c
-.163721 42.8826 -9.78960 33.2567 -9.78960 21.3826  c
-9.78960 9.50845 -.163721 -.117430 11.7104 -.117430  c
23.5845 -.117430 33.2104 9.50845 33.2104 21.3826  c
h
f*
11.7104 21.3826 translate
1.00000 1.00000 scale
-20.2998 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -.921875 l
6.25000 -.921875 l
6.25000 0.00000 l
1.12500 0.00000 l
h
7.52344 0.00000 m
7.52344 -8.67188 l
10.3984 -8.67188 l
11.2630 -8.67188 11.9583 -8.57552 12.4844 -8.38281  c
13.0104 -8.19010 13.4661 -7.86458 13.8516 -7.40625  c
14.4661 -6.68750 14.7734 -5.73438 14.7734 -4.54688  c
14.7734 -3.09896 14.3932 -1.97917 13.6328 -1.18750  c
12.8724 -.395833 11.7995 0.00000 10.4141 0.00000  c
7.52344 0.00000 l
h
8.74219 -.921875 m
10.3203 -.921875 l
11.4453 -.921875 12.2422 -1.22396 12.7109 -1.82812  c
13.2214 -2.47396 13.4766 -3.33854 13.4766 -4.42188  c
13.4766 -5.44271 13.2266 -6.24479 12.7266 -6.82812  c
12.4245 -7.18229 12.0651 -7.42448 11.6484 -7.55469  c
11.2318 -7.68490 10.6016 -7.75000 9.75781 -7.75000  c
8.74219 -7.75000 l
8.74219 -.921875 l
h
19.9961 .218750 m
18.7982 .218750 17.8320 -.197917 17.0977 -1.03125  c
16.3633 -1.86458 15.9961 -2.96875 15.9961 -4.34375  c
15.9961 -5.71875 16.3633 -6.82031 17.0977 -7.64844  c
17.8320 -8.47656 18.8190 -8.89062 20.0586 -8.89062  c
21.2773 -8.89062 22.2565 -8.47917 22.9961 -7.65625  c
23.7357 -6.83333 24.1055 -5.73438 24.1055 -4.35938  c
24.1055 -2.95312 23.7357 -1.83854 22.9961 -1.01562  c
22.2565 -.192708 21.2565 .218750 19.9961 .218750  c
h
20.0117 -.703125 m
20.8971 -.703125 21.5820 -1.02344 22.0664 -1.66406  c
22.5508 -2.30469 22.7930 -3.20312 22.7930 -4.35938  c
22.7930 -5.49479 22.5508 -6.38021 22.0664 -7.01562  c
21.5820 -7.65104 20.9128 -7.96875 20.0586 -7.96875  c
19.1940 -7.96875 18.5195 -7.64844 18.0352 -7.00781  c
17.5508 -6.36719 17.3086 -5.47917 17.3086 -4.34375  c
17.3086 -3.21875 17.5482 -2.33073 18.0273 -1.67969  c
18.5065 -1.02865 19.1680 -.703125 20.0117 -.703125  c
h
29.5371 .218750 m
28.1934 .218750 27.1543 -.177083 26.4199 -.968750  c
25.6855 -1.76042 25.3184 -2.88021 25.3184 -4.32812  c
25.3184 -5.77604 25.6934 -6.89844 26.4434 -7.69531  c
27.1934 -8.49219 28.2454 -8.89062 29.5996 -8.89062  c
30.3809 -8.89062 31.2923 -8.76562 32.3340 -8.51562  c
32.3340 -7.35938 l
31.1465 -7.76562 30.2298 -7.96875 29.5840 -7.96875  c
28.6465 -7.96875 27.9199 -7.65104 27.4043 -7.01562  c
26.8887 -6.38021 26.6309 -5.47917 26.6309 -4.31250  c
26.6309 -3.20833 26.9043 -2.33854 27.4512 -1.70312  c
27.9980 -1.06771 28.7507 -.750000 29.7090 -.750000  c
30.5319 -.750000 31.4121 -1.00000 32.3496 -1.50000  c
32.3496 -.453125 l
31.4954 -.00520833 30.5579 .218750 29.5371 .218750  c
h
34.8242 0.00000 m
34.8242 -.875000 l
36.5586 -.875000 l
36.5586 -7.71875 l
34.8242 -7.28125 l
34.8242 -8.17188 l
37.7148 -8.89062 l
37.7148 -.875000 l
39.4492 -.875000 l
39.4492 0.00000 l
34.8242 0.00000 l
h
f
[ 1.93520 0.00000 0.00000 1.93520 42.7741 42.6143 ] defaultmatrix matrix concatmatrix setmatrix
.854902 1.00000 .705882 RG
newpath
103.790 50.6174 m
103.790 62.4916 94.1637 72.1174 82.2896 72.1174  c
70.4155 72.1174 60.7896 62.4916 60.7896 50.6174  c
60.7896 38.7433 70.4155 29.1174 82.2896 29.1174  c
94.1637 29.1174 103.790 38.7433 103.790 50.6174  c
h
f
0.00000 0.00000 0.00000 RG
newpath
104.790 50.6174 m
104.790 63.0438 94.7160 73.1174 82.2896 73.1174  c
69.8632 73.1174 59.7896 63.0438 59.7896 50.6174  c
59.7896 38.1910 69.8632 28.1174 82.2896 28.1174  c
94.7160 28.1174 104.790 38.1910 104.790 50.6174  c
h
103.790 50.6174 m
103.790 62.4916 94.1637 72.1174 82.2896 72.1174  c
70.4155 72.1174 60.7896 62.4916 60.7896 50.6174  c
60.7896 38.7433 70.4155 29.1174 82.2896 29.1174  c
94.1637 29.1174 103.790 38.7433 103.790 50.6174  c
h
f*
82.2896 50.6174 translate
1.00000 1.00000 scale
-21.4424 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -5.01562 l
6.46875 -5.01562 l
6.46875 -8.67188 l
7.70312 -8.67188 l
7.70312 0.00000 l
6.46875 0.00000 l
6.46875 -4.09375 l
2.34375 -4.09375 l
2.34375 0.00000 l
1.12500 0.00000 l
h
13.4277 .218750 m
12.2298 .218750 11.2637 -.197917 10.5293 -1.03125  c
9.79492 -1.86458 9.42773 -2.96875 9.42773 -4.34375  c
9.42773 -5.71875 9.79492 -6.82031 10.5293 -7.64844  c
11.2637 -8.47656 12.2507 -8.89062 13.4902 -8.89062  c
14.7090 -8.89062 15.6882 -8.47917 16.4277 -7.65625  c
17.1673 -6.83333 17.5371 -5.73438 17.5371 -4.35938  c
17.5371 -2.95312 17.1673 -1.83854 16.4277 -1.01562  c
15.6882 -.192708 14.6882 .218750 13.4277 .218750  c
h
13.4434 -.703125 m
14.3288 -.703125 15.0137 -1.02344 15.4980 -1.66406  c
15.9824 -2.30469 16.2246 -3.20312 16.2246 -4.35938  c
16.2246 -5.49479 15.9824 -6.38021 15.4980 -7.01562  c
15.0137 -7.65104 14.3444 -7.96875 13.4902 -7.96875  c
12.6257 -7.96875 11.9512 -7.64844 11.4668 -7.00781  c
10.9824 -6.36719 10.7402 -5.47917 10.7402 -4.34375  c
10.7402 -3.21875 10.9798 -2.33073 11.4590 -1.67969  c
11.9382 -1.02865 12.5996 -.703125 13.4434 -.703125  c
h
22.7500 .218750 m
21.5521 .218750 20.5859 -.197917 19.8516 -1.03125  c
19.1172 -1.86458 18.7500 -2.96875 18.7500 -4.34375  c
18.7500 -5.71875 19.1172 -6.82031 19.8516 -7.64844  c
20.5859 -8.47656 21.5729 -8.89062 22.8125 -8.89062  c
24.0312 -8.89062 25.0104 -8.47917 25.7500 -7.65625  c
26.4896 -6.83333 26.8594 -5.73438 26.8594 -4.35938  c
26.8594 -2.95312 26.4896 -1.83854 25.7500 -1.01562  c
25.0104 -.192708 24.0104 .218750 22.7500 .218750  c
h
22.7656 -.703125 m
23.6510 -.703125 24.3359 -1.02344 24.8203 -1.66406  c
25.3047 -2.30469 25.5469 -3.20312 25.5469 -4.35938  c
25.5469 -5.49479 25.3047 -6.38021 24.8203 -7.01562  c
24.3359 -7.65104 23.6667 -7.96875 22.8125 -7.96875  c
21.9479 -7.96875 21.2734 -7.64844 20.7891 -7.00781  c
20.3047 -6.36719 20.0625 -5.47917 20.0625 -4.34375  c
20.0625 -3.21875 20.3021 -2.33073 20.7812 -1.67969  c
21.2604 -1.02865 21.9219 -.703125 22.7656 -.703125  c
h
28.5879 0.00000 m
28.5879 -8.67188 l
29.7441 -8.67188 l
29.7441 -4.40625 l
33.2441 -8.67188 l
34.4785 -8.67188 l
31.0879 -4.53125 l
35.0879 0.00000 l
33.5254 0.00000 l
29.7441 -4.39062 l
29.7441 0.00000 l
28.5879 0.00000 l
h
36.2969 0.00000 m
36.2969 -1.01562 l
36.6302 -1.79688 37.3073 -2.65104 38.3281 -3.57812  c
39.0000 -4.17188 l
39.8438 -4.94271 40.2656 -5.70833 40.2656 -6.46875  c
40.2656 -6.94792 40.1224 -7.32552 39.8359 -7.60156  c
39.5495 -7.87760 39.1510 -8.01562 38.6406 -8.01562  c
38.0365 -8.01562 37.3281 -7.78646 36.5156 -7.32812  c
36.5156 -8.34375 l
37.2865 -8.70833 38.0469 -8.89062 38.7969 -8.89062  c
39.6094 -8.89062 40.2630 -8.67188 40.7578 -8.23438  c
41.2526 -7.79688 41.5000 -7.21875 41.5000 -6.50000  c
41.5000 -5.97917 41.3750 -5.51562 41.1250 -5.10938  c
40.8750 -4.70312 40.4115 -4.21354 39.7344 -3.64062  c
39.2969 -3.26562 l
38.3698 -2.48438 37.8333 -1.73438 37.6875 -1.01562  c
41.4531 -1.01562 l
41.4531 0.00000 l
36.2969 0.00000 l
h
f
[ 1.93520 0.00000 0.00000 1.93520 42.7741 42.6143 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .811765 .611765 RG
newpath
181.010 82.6032 m
181.010 94.4773 171.384 104.103 159.510 104.103  c
147.636 104.103 138.010 94.4773 138.010 82.6032  c
138.010 70.7291 147.636 61.1032 159.510 61.1032  c
171.384 61.1032 181.010 70.7291 181.010 82.6032  c
h
f
0.00000 0.00000 0.00000 RG
newpath
182.010 82.6032 m
182.010 95.0296 171.936 105.103 159.510 105.103  c
147.084 105.103 137.010 95.0296 137.010 82.6032  c
137.010 70.1768 147.084 60.1032 159.510 60.1032  c
171.936 60.1032 182.010 70.1768 182.010 82.6032  c
h
181.010 82.6032 m
181.010 94.4773 171.384 104.103 159.510 104.103  c
147.636 104.103 138.010 94.4773 138.010 82.6032  c
138.010 70.7291 147.636 61.1032 159.510 61.1032  c
171.384 61.1032 181.010 70.7291 181.010 82.6032  c
h
f*
159.510 82.6032 translate
1.00000 1.00000 scale
-22.0752 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.82812 -8.67188 l
5.23438 -1.96875 l
7.70312 -8.67188 l
9.21875 -8.67188 l
9.21875 0.00000 l
8.07812 0.00000 l
8.07812 -7.06250 l
5.68750 -.578125 l
4.50000 -.578125 l
2.17188 -7.07812 l
2.17188 0.00000 l
1.12500 0.00000 l
h
15.1641 .218750 m
13.8203 .218750 12.7812 -.177083 12.0469 -.968750  c
11.3125 -1.76042 10.9453 -2.88021 10.9453 -4.32812  c
10.9453 -5.77604 11.3203 -6.89844 12.0703 -7.69531  c
12.8203 -8.49219 13.8724 -8.89062 15.2266 -8.89062  c
16.0078 -8.89062 16.9193 -8.76562 17.9609 -8.51562  c
17.9609 -7.35938 l
16.7734 -7.76562 15.8568 -7.96875 15.2109 -7.96875  c
14.2734 -7.96875 13.5469 -7.65104 13.0312 -7.01562  c
12.5156 -6.38021 12.2578 -5.47917 12.2578 -4.31250  c
12.2578 -3.20833 12.5312 -2.33854 13.0781 -1.70312  c
13.6250 -1.06771 14.3776 -.750000 15.3359 -.750000  c
16.1589 -.750000 17.0391 -1.00000 17.9766 -1.50000  c
17.9766 -.453125 l
17.1224 -.00520833 16.1849 .218750 15.1641 .218750  c
h
19.7637 0.00000 m
19.7637 -8.67188 l
21.4668 -8.67188 l
23.8730 -1.96875 l
26.3418 -8.67188 l
27.8574 -8.67188 l
27.8574 0.00000 l
26.7168 0.00000 l
26.7168 -7.06250 l
24.3262 -.578125 l
23.1387 -.578125 l
20.8105 -7.07812 l
20.8105 0.00000 l
19.7637 0.00000 l
h
30.7871 0.00000 m
30.7871 -.875000 l
32.5215 -.875000 l
32.5215 -7.71875 l
30.7871 -7.28125 l
30.7871 -8.17188 l
33.6777 -8.89062 l
33.6777 -.875000 l
35.4121 -.875000 l
35.4121 0.00000 l
30.7871 0.00000 l
h
40.3281 .218750 m
39.4323 .218750 38.7083 -.203125 38.1562 -1.04688  c
37.6042 -1.89062 37.3281 -2.98958 37.3281 -4.34375  c
37.3281 -5.70833 37.6068 -6.80729 38.1641 -7.64062  c
38.7214 -8.47396 39.4531 -8.89062 40.3594 -8.89062  c
41.2656 -8.89062 41.9974 -8.47396 42.5547 -7.64062  c
43.1120 -6.80729 43.3906 -5.71354 43.3906 -4.35938  c
43.3906 -2.97396 43.1120 -1.86458 42.5547 -1.03125  c
41.9974 -.197917 41.2552 .218750 40.3281 .218750  c
h
40.3438 -.656250 m
41.5625 -.656250 42.1719 -1.89583 42.1719 -4.37500  c
42.1719 -6.80208 41.5677 -8.01562 40.3594 -8.01562  c
39.1615 -8.01562 38.5625 -6.79167 38.5625 -4.34375  c
38.5625 -1.88542 39.1562 -.656250 40.3438 -.656250  c
h
f
[ 1.93520 0.00000 0.00000 1.93520 42.7741 42.6143 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .901961 .701961 RG
newpath
21.8968 148.510 m
21.8968 160.384 12.2709 170.010 .396812 170.010  c
-11.4773 170.010 -21.1032 160.384 -21.1032 148.510  c
-21.1032 136.636 -11.4773 127.010 .396812 127.010  c
12.2709 127.010 21.8968 136.636 21.8968 148.510  c
h
f
0.00000 0.00000 0.00000 RG
newpath
22.8968 148.510 m
22.8968 160.936 12.8232 171.010 .396812 171.010  c
-12.0296 171.010 -22.1032 160.936 -22.1032 148.510  c
-22.1032 136.084 -12.0296 126.010 .396812 126.010  c
12.8232 126.010 22.8968 136.084 22.8968 148.510  c
h
21.8968 148.510 m
21.8968 160.384 12.2709 170.010 .396812 170.010  c
-11.4773 170.010 -21.1032 160.384 -21.1032 148.510  c
-21.1032 136.636 -11.4773 127.010 .396812 127.010  c
12.2709 127.010 21.8968 136.636 21.8968 148.510  c
h
f*
.396812 148.510 translate
1.00000 1.00000 scale
-17.8652 4.42090 translate
newpath
5.51562 -3.31250 m
4.03125 -7.06250 l
2.56250 -3.31250 l
5.51562 -3.31250 l
h
6.81250 0.00000 m
5.87500 -2.40625 l
2.20312 -2.40625 l
1.25000 0.00000 l
.0937500 0.00000 l
3.54688 -8.67188 l
4.76562 -8.67188 l
8.14062 0.00000 l
6.81250 0.00000 l
h
9.40430 0.00000 m
9.40430 -8.67188 l
12.0293 -8.67188 l
12.8626 -8.67188 13.5007 -8.48958 13.9434 -8.12500  c
14.3861 -7.76042 14.6074 -7.22396 14.6074 -6.51562  c
14.6074 -5.35938 14.0241 -4.54167 12.8574 -4.06250  c
15.7480 0.00000 l
14.2324 0.00000 l
11.7637 -3.67188 l
10.6230 -3.67188 l
10.6230 0.00000 l
9.40430 0.00000 l
h
10.6230 -4.59375 m
11.0137 -4.59375 l
12.5658 -4.59375 13.3418 -5.19792 13.3418 -6.40625  c
13.3418 -7.30208 12.6908 -7.75000 11.3887 -7.75000  c
10.6230 -7.75000 l
10.6230 -4.59375 l
h
16.9766 0.00000 m
16.9766 -8.67188 l
18.2109 -8.67188 l
18.2109 0.00000 l
16.9766 0.00000 l
h
20.4492 0.00000 m
20.4492 -8.67188 l
21.6680 -8.67188 l
21.6680 -5.01562 l
25.7930 -5.01562 l
25.7930 -8.67188 l
27.0273 -8.67188 l
27.0273 0.00000 l
25.7930 0.00000 l
25.7930 -4.09375 l
21.6680 -4.09375 l
21.6680 0.00000 l
20.4492 0.00000 l
h
29.1426 0.00000 m
29.1426 -1.01562 l
29.4759 -1.79688 30.1530 -2.65104 31.1738 -3.57812  c
31.8457 -4.17188 l
32.6895 -4.94271 33.1113 -5.70833 33.1113 -6.46875  c
33.1113 -6.94792 32.9681 -7.32552 32.6816 -7.60156  c
32.3952 -7.87760 31.9967 -8.01562 31.4863 -8.01562  c
30.8822 -8.01562 30.1738 -7.78646 29.3613 -7.32812  c
29.3613 -8.34375 l
30.1322 -8.70833 30.8926 -8.89062 31.6426 -8.89062  c
32.4551 -8.89062 33.1087 -8.67188 33.6035 -8.23438  c
34.0983 -7.79688 34.3457 -7.21875 34.3457 -6.50000  c
34.3457 -5.97917 34.2207 -5.51562 33.9707 -5.10938  c
33.7207 -4.70312 33.2572 -4.21354 32.5801 -3.64062  c
32.1426 -3.26562 l
31.2155 -2.48438 30.6790 -1.73438 30.5332 -1.01562  c
34.2988 -1.01562 l
34.2988 0.00000 l
29.1426 0.00000 l
h
f
[ 1.93520 0.00000 0.00000 1.93520 42.7741 42.6143 ] defaultmatrix matrix concatmatrix setmatrix
.992157 .380392 .200000 RG
newpath
53.4684 71.2896 m
32.3826 92.3754 l
11.2968 71.2896 l
32.3826 50.2038 l
h
f
0.00000 0.00000 0.00000 RG
newpath
32.3826 48.7896 m
54.8826 71.2896 l
32.3826 93.7896 l
9.88257 71.2896 l
h
53.4684 71.2896 m
32.3826 92.3754 l
11.2968 71.2896 l
32.3826 50.2038 l
h
f*
32.3826 71.2896 translate
1.00000 1.00000 scale
-22.9951 4.42090 translate
newpath
1.04688 -8.67188 m
2.28125 -8.67188 l
2.28125 -3.20312 l
2.28125 -2.32812 2.44271 -1.69271 2.76562 -1.29688  c
3.08854 -.901042 3.59896 -.703125 4.29688 -.703125  c
4.98438 -.703125 5.47135 -.890625 5.75781 -1.26562  c
6.04427 -1.64062 6.18750 -2.27083 6.18750 -3.15625  c
6.18750 -8.67188 l
7.26562 -8.67188 l
7.26562 -3.17188 l
7.26562 -1.99479 7.02344 -1.13542 6.53906 -.593750  c
6.05469 -.0520833 5.28125 .218750 4.21875 .218750  c
3.13542 .218750 2.33594 -.0598958 1.82031 -.617188  c
1.30469 -1.17448 1.04688 -2.04167 1.04688 -3.21875  c
1.04688 -8.67188 l
h
11.5020 0.00000 m
11.5020 -7.75000 l
8.42383 -7.75000 l
8.42383 -8.67188 l
15.7988 -8.67188 l
15.7988 -7.75000 l
12.7207 -7.75000 l
12.7207 0.00000 l
11.5020 0.00000 l
h
17.0273 0.00000 m
17.0273 -8.67188 l
19.3867 -8.67188 l
20.4284 -8.67188 21.1784 -8.49479 21.6367 -8.14062  c
22.0951 -7.78646 22.3242 -7.20833 22.3242 -6.40625  c
22.3242 -5.47917 22.0117 -4.75521 21.3867 -4.23438  c
20.7617 -3.71354 19.8971 -3.45312 18.7930 -3.45312  c
18.2461 -3.45312 l
18.2461 0.00000 l
17.0273 0.00000 l
h
18.2461 -4.37500 m
18.7461 -4.37500 l
19.4753 -4.37500 20.0378 -4.54427 20.4336 -4.88281  c
20.8294 -5.22135 21.0273 -5.69792 21.0273 -6.31250  c
21.0273 -6.82292 20.8711 -7.19010 20.5586 -7.41406  c
20.2461 -7.63802 19.7253 -7.75000 18.9961 -7.75000  c
18.2461 -7.75000 l
18.2461 -4.37500 l
h
24.3477 0.00000 m
24.3477 -.875000 l
26.0820 -.875000 l
26.0820 -7.71875 l
24.3477 -7.28125 l
24.3477 -8.17188 l
27.2383 -8.89062 l
27.2383 -.875000 l
28.9727 -.875000 l
28.9727 0.00000 l
24.3477 0.00000 l
h
34.6387 0.00000 m
34.6387 -2.45312 l
30.7324 -2.45312 l
30.7324 -3.32812 l
34.6387 -8.67188 l
35.7324 -8.67188 l
35.7324 -3.40625 l
36.8887 -3.40625 l
36.8887 -2.45312 l
35.7324 -2.45312 l
35.7324 0.00000 l
34.6387 0.00000 l
h
31.8730 -3.40625 m
34.7168 -3.40625 l
34.7168 -7.25000 l
31.8730 -3.40625 l
h
43.2266 -3.31250 m
41.7422 -7.06250 l
40.2734 -3.31250 l
43.2266 -3.31250 l
h
44.5234 0.00000 m
43.5859 -2.40625 l
39.9141 -2.40625 l
38.9609 0.00000 l
37.8047 0.00000 l
41.2578 -8.67188 l
42.4766 -8.67188 l
45.8516 0.00000 l
44.5234 0.00000 l
h
f
[ 1.93520 0.00000 0.00000 1.93520 42.7741 42.6143 ] defaultmatrix matrix concatmatrix setmatrix
.968627 .337255 .200000 RG
newpath
82.7032 .710402 m
61.6174 21.7962 l
40.5316 .710402 l
61.6174 -20.3754 l
h
f
0.00000 0.00000 0.00000 RG
newpath
61.6174 -21.7896 m
84.1174 .710402 l
61.6174 23.2104 l
39.1174 .710402 l
h
82.7032 .710402 m
61.6174 21.7962 l
40.5316 .710402 l
61.6174 -20.3754 l
h
f*
61.6174 .710402 translate
1.00000 1.00000 scale
-22.6582 4.42090 translate
newpath
.562500 0.00000 m
.562500 -.984375 l
5.21875 -7.75000 l
.843750 -7.75000 l
.843750 -8.67188 l
6.68750 -8.67188 l
6.68750 -7.75000 l
2.03125 -.984375 l
6.68750 -.984375 l
6.68750 0.00000 l
.562500 0.00000 l
h
8.37891 0.00000 m
8.37891 -8.67188 l
9.58203 -8.67188 l
13.9414 -1.96875 l
13.9414 -8.67188 l
15.0039 -8.67188 l
15.0039 0.00000 l
13.8008 0.00000 l
9.42578 -6.70312 l
9.42578 0.00000 l
8.37891 0.00000 l
h
17.2441 0.00000 m
17.2441 -8.67188 l
22.0879 -8.67188 l
22.0879 -7.75000 l
18.4629 -7.75000 l
18.4629 -4.84375 l
21.5098 -4.84375 l
21.5098 -3.93750 l
18.4629 -3.93750 l
18.4629 0.00000 l
17.2441 0.00000 l
h
23.5527 0.00000 m
23.5527 -1.01562 l
23.8861 -1.79688 24.5632 -2.65104 25.5840 -3.57812  c
26.2559 -4.17188 l
27.0996 -4.94271 27.5215 -5.70833 27.5215 -6.46875  c
27.5215 -6.94792 27.3783 -7.32552 27.0918 -7.60156  c
26.8053 -7.87760 26.4069 -8.01562 25.8965 -8.01562  c
25.2923 -8.01562 24.5840 -7.78646 23.7715 -7.32812  c
23.7715 -8.34375 l
24.5423 -8.70833 25.3027 -8.89062 26.0527 -8.89062  c
26.8652 -8.89062 27.5189 -8.67188 28.0137 -8.23438  c
28.5085 -7.79688 28.7559 -7.21875 28.7559 -6.50000  c
28.7559 -5.97917 28.6309 -5.51562 28.3809 -5.10938  c
28.1309 -4.70312 27.6673 -4.21354 26.9902 -3.64062  c
26.5527 -3.26562 l
25.6257 -2.48438 25.0892 -1.73438 24.9434 -1.01562  c
28.7090 -1.01562 l
28.7090 0.00000 l
23.5527 0.00000 l
h
31.5938 .0312500 m
31.5938 -1.00000 l
32.1771 -.770833 32.7240 -.656250 33.2344 -.656250  c
33.8073 -.656250 34.2578 -.822917 34.5859 -1.15625  c
34.9141 -1.48958 35.0781 -1.95312 35.0781 -2.54688  c
35.0781 -3.84896 34.1823 -4.50000 32.3906 -4.50000  c
32.1823 -4.50000 31.9688 -4.48438 31.7500 -4.45312  c
31.7500 -8.67188 l
36.1406 -8.67188 l
36.1406 -7.67188 l
32.7656 -7.67188 l
32.7656 -5.37500 l
33.8802 -5.37500 34.7500 -5.11979 35.3750 -4.60938  c
36.0000 -4.09896 36.3125 -3.39062 36.3125 -2.48438  c
36.3125 -1.64062 36.0260 -.979167 35.4531 -.500000  c
34.8802 -.0208333 34.0938 .218750 33.0938 .218750  c
32.6562 .218750 32.1562 .156250 31.5938 .0312500  c
h
41.4941 .218750 m
40.5983 .218750 39.8743 -.203125 39.3223 -1.04688  c
38.7702 -1.89062 38.4941 -2.98958 38.4941 -4.34375  c
38.4941 -5.70833 38.7728 -6.80729 39.3301 -7.64062  c
39.8874 -8.47396 40.6191 -8.89062 41.5254 -8.89062  c
42.4316 -8.89062 43.1634 -8.47396 43.7207 -7.64062  c
44.2780 -6.80729 44.5566 -5.71354 44.5566 -4.35938  c
44.5566 -2.97396 44.2780 -1.86458 43.7207 -1.03125  c
43.1634 -.197917 42.4212 .218750 41.4941 .218750  c
h
41.5098 -.656250 m
42.7285 -.656250 43.3379 -1.89583 43.3379 -4.37500  c
43.3379 -6.80208 42.7337 -8.01562 41.5254 -8.01562  c
40.3275 -8.01562 39.7285 -6.79167 39.7285 -4.34375  c
39.7285 -1.88542 40.3223 -.656250 41.5098 -.656250  c
h
f
[ 1.93520 0.00000 0.00000 1.93520 42.7741 42.6143 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
