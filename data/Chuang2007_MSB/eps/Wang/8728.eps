%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:47:37 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.69152 0.00000 0.00000 1.69152 37.6303 45.9436 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
65.2289 99.8882 m
17.2357 115.482 l
S
newpath
104.831 79.7102 m
148.852 47.7267 l
S
newpath
86.6277 115.435 m
86.6277 126.565 l
S
newpath
108.894 89.7039 m
169.123 80.9633 l
S
newpath
122.336 20.5497 m
96.5818 72.7570 l
S
newpath
42.7137 153.378 m
73.4025 111.138 l
S
newpath
54.6443 82.5433 m
65.2289 85.9824 l
S
newpath
9.72169 134.032 m
23.7774 153.378 l
S
newpath
33.2455 98.0904 m
33.2455 143.910 l
S
newpath
65.2289 156.018 m
50.2277 160.892 l
S
1.00000 .580392 .380392 RG
newpath
108.128 92.9353 m
108.128 104.809 98.5018 114.435 86.6277 114.435  c
74.7536 114.435 65.1277 104.809 65.1277 92.9353  c
65.1277 81.0612 74.7536 71.4353 86.6277 71.4353  c
98.5018 71.4353 108.128 81.0612 108.128 92.9353  c
h
f
0.00000 0.00000 0.00000 RG
newpath
109.128 92.9353 m
109.128 105.362 99.0541 115.435 86.6277 115.435  c
74.2013 115.435 64.1277 105.362 64.1277 92.9353  c
64.1277 80.5089 74.2013 70.4353 86.6277 70.4353  c
99.0541 70.4353 109.128 80.5089 109.128 92.9353  c
h
108.128 92.9353 m
108.128 104.809 98.5018 114.435 86.6277 114.435  c
74.7536 114.435 65.1277 104.809 65.1277 92.9353  c
65.1277 81.0612 74.7536 71.4353 86.6277 71.4353  c
98.5018 71.4353 108.128 81.0612 108.128 92.9353  c
h
f*
86.6277 92.9353 translate
1.00000 1.00000 scale
-15.5801 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
12.9121 .218750 m
11.7142 .218750 10.7480 -.197917 10.0137 -1.03125  c
9.27930 -1.86458 8.91211 -2.96875 8.91211 -4.34375  c
8.91211 -5.71875 9.27930 -6.82031 10.0137 -7.64844  c
10.7480 -8.47656 11.7350 -8.89062 12.9746 -8.89062  c
14.1934 -8.89062 15.1725 -8.47917 15.9121 -7.65625  c
16.6517 -6.83333 17.0215 -5.73438 17.0215 -4.35938  c
17.0215 -2.95312 16.6517 -1.83854 15.9121 -1.01562  c
15.1725 -.192708 14.1725 .218750 12.9121 .218750  c
h
12.9277 -.703125 m
13.8132 -.703125 14.4980 -1.02344 14.9824 -1.66406  c
15.4668 -2.30469 15.7090 -3.20312 15.7090 -4.35938  c
15.7090 -5.49479 15.4668 -6.38021 14.9824 -7.01562  c
14.4980 -7.65104 13.8288 -7.96875 12.9746 -7.96875  c
12.1100 -7.96875 11.4355 -7.64844 10.9512 -7.00781  c
10.4668 -6.36719 10.2246 -5.47917 10.2246 -4.34375  c
10.2246 -3.21875 10.4642 -2.33073 10.9434 -1.67969  c
11.4225 -1.02865 12.0840 -.703125 12.9277 -.703125  c
h
18.7500 0.00000 m
18.7500 -8.67188 l
21.1094 -8.67188 l
22.1510 -8.67188 22.9010 -8.49479 23.3594 -8.14062  c
23.8177 -7.78646 24.0469 -7.20833 24.0469 -6.40625  c
24.0469 -5.47917 23.7344 -4.75521 23.1094 -4.23438  c
22.4844 -3.71354 21.6198 -3.45312 20.5156 -3.45312  c
19.9688 -3.45312 l
19.9688 0.00000 l
18.7500 0.00000 l
h
19.9688 -4.37500 m
20.4688 -4.37500 l
21.1979 -4.37500 21.7604 -4.54427 22.1562 -4.88281  c
22.5521 -5.22135 22.7500 -5.69792 22.7500 -6.31250  c
22.7500 -6.82292 22.5938 -7.19010 22.2812 -7.41406  c
21.9688 -7.63802 21.4479 -7.75000 20.7188 -7.75000  c
19.9688 -7.75000 l
19.9688 -4.37500 l
h
25.3828 0.00000 m
25.3828 -8.67188 l
27.6328 -8.67188 l
28.4974 -8.67188 29.1615 -8.50781 29.6250 -8.17969  c
30.0885 -7.85156 30.3203 -7.38021 30.3203 -6.76562  c
30.3203 -5.71354 29.7266 -4.96354 28.5391 -4.51562  c
29.9557 -4.08854 30.6641 -3.30729 30.6641 -2.17188  c
30.6641 -1.46354 30.4297 -.924479 29.9609 -.554688  c
29.4922 -.184896 28.8151 0.00000 27.9297 0.00000  c
25.3828 0.00000 l
h
26.6016 -.921875 m
26.8516 -.921875 l
27.7474 -.921875 28.3307 -.979167 28.6016 -1.09375  c
29.1120 -1.30208 29.3672 -1.69792 29.3672 -2.28125  c
29.3672 -2.80208 29.1354 -3.23177 28.6719 -3.57031  c
28.2083 -3.90885 27.6328 -4.07812 26.9453 -4.07812  c
26.6016 -4.07812 l
26.6016 -.921875 l
h
26.6016 -4.85938 m
26.9922 -4.85938 l
27.6484 -4.85938 28.1562 -5.00000 28.5156 -5.28125  c
28.8750 -5.56250 29.0547 -5.95833 29.0547 -6.46875  c
29.0547 -7.32292 28.3932 -7.75000 27.0703 -7.75000  c
26.6016 -7.75000 l
26.6016 -4.85938 l
h
f
[ 1.69152 0.00000 0.00000 1.69152 37.6303 45.9436 ] defaultmatrix matrix concatmatrix setmatrix
.937255 .270588 .200000 RG
newpath
21.3393 121.000 m
.253517 142.086 l
-20.8323 121.000 l
.253517 99.9142 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.253517 98.5000 m
22.7535 121.000 l
.253517 143.500 l
-22.2465 121.000 l
h
21.3393 121.000 m
.253517 142.086 l
-20.8323 121.000 l
.253517 99.9142 l
h
f*
.253517 121.000 translate
1.00000 1.00000 scale
-15.1553 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
15.2285 -.234375 m
14.1764 .0677083 13.2598 .218750 12.4785 .218750  c
11.0931 .218750 10.0332 -.174479 9.29883 -.960938  c
8.56445 -1.74740 8.19727 -2.87500 8.19727 -4.34375  c
8.19727 -5.78125 8.56966 -6.89844 9.31445 -7.69531  c
10.0592 -8.49219 11.1087 -8.89062 12.4629 -8.89062  c
13.3379 -8.89062 14.2546 -8.76042 15.2129 -8.50000  c
15.2129 -7.35938 l
14.0150 -7.76562 13.0983 -7.96875 12.4629 -7.96875  c
11.5254 -7.96875 10.7988 -7.65104 10.2832 -7.01562  c
9.76758 -6.38021 9.50977 -5.48438 9.50977 -4.32812  c
9.50977 -3.18229 9.78581 -2.29167 10.3379 -1.65625  c
10.8900 -1.02083 11.6660 -.703125 12.6660 -.703125  c
13.0827 -.703125 13.5254 -.776042 13.9941 -.921875  c
13.9941 -3.75000 l
15.2285 -3.75000 l
15.2285 -.234375 l
h
19.0723 .218750 m
18.4993 .218750 17.7598 .0885417 16.8535 -.171875  c
16.8535 -1.39062 l
17.8223 -.932292 18.6243 -.703125 19.2598 -.703125  c
19.7389 -.703125 20.1270 -.830729 20.4238 -1.08594  c
20.7207 -1.34115 20.8691 -1.67708 20.8691 -2.09375  c
20.8691 -2.42708 20.7728 -2.71354 20.5801 -2.95312  c
20.3874 -3.19271 20.0306 -3.45833 19.5098 -3.75000  c
18.9160 -4.09375 l
18.1764 -4.52083 17.6556 -4.91927 17.3535 -5.28906  c
17.0514 -5.65885 16.9004 -6.09375 16.9004 -6.59375  c
16.9004 -7.26042 17.1426 -7.80990 17.6270 -8.24219  c
18.1113 -8.67448 18.7285 -8.89062 19.4785 -8.89062  c
20.1452 -8.89062 20.8483 -8.78125 21.5879 -8.56250  c
21.5879 -7.43750 l
20.6712 -7.79167 19.9889 -7.96875 19.5410 -7.96875  c
19.1139 -7.96875 18.7624 -7.85677 18.4863 -7.63281  c
18.2103 -7.40885 18.0723 -7.12500 18.0723 -6.78125  c
18.0723 -6.48958 18.1738 -6.23177 18.3770 -6.00781  c
18.5801 -5.78385 18.9525 -5.51562 19.4941 -5.20312  c
20.1035 -4.85938 l
20.8535 -4.43229 21.3770 -4.02865 21.6738 -3.64844  c
21.9707 -3.26823 22.1191 -2.81250 22.1191 -2.28125  c
22.1191 -1.53125 21.8431 -.927083 21.2910 -.468750  c
20.7389 -.0104167 19.9993 .218750 19.0723 .218750  c
h
27.2383 0.00000 m
27.2383 -2.45312 l
23.3320 -2.45312 l
23.3320 -3.32812 l
27.2383 -8.67188 l
28.3320 -8.67188 l
28.3320 -3.40625 l
29.4883 -3.40625 l
29.4883 -2.45312 l
28.3320 -2.45312 l
28.3320 0.00000 l
27.2383 0.00000 l
h
24.4727 -3.40625 m
27.3164 -3.40625 l
27.3164 -7.25000 l
24.4727 -3.40625 l
h
f
[ 1.69152 0.00000 0.00000 1.69152 37.6303 45.9436 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .721569 .521569 RG
newpath
54.7455 75.5904 m
54.7455 87.4645 45.1196 97.0904 33.2455 97.0904  c
21.3714 97.0904 11.7455 87.4645 11.7455 75.5904  c
11.7455 63.7163 21.3714 54.0904 33.2455 54.0904  c
45.1196 54.0904 54.7455 63.7163 54.7455 75.5904  c
h
f
0.00000 0.00000 0.00000 RG
newpath
55.7455 75.5904 m
55.7455 88.0168 45.6719 98.0904 33.2455 98.0904  c
20.8191 98.0904 10.7455 88.0168 10.7455 75.5904  c
10.7455 63.1640 20.8191 53.0904 33.2455 53.0904  c
45.6719 53.0904 55.7455 63.1640 55.7455 75.5904  c
h
54.7455 75.5904 m
54.7455 87.4645 45.1196 97.0904 33.2455 97.0904  c
21.3714 97.0904 11.7455 87.4645 11.7455 75.5904  c
11.7455 63.7163 21.3714 54.0904 33.2455 54.0904  c
45.1196 54.0904 54.7455 63.7163 54.7455 75.5904  c
h
f*
33.2455 75.5904 translate
1.00000 1.00000 scale
-19.9922 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -5.01562 l
6.46875 -5.01562 l
6.46875 -8.67188 l
7.70312 -8.67188 l
7.70312 0.00000 l
6.46875 0.00000 l
6.46875 -4.09375 l
2.34375 -4.09375 l
2.34375 0.00000 l
1.12500 0.00000 l
h
9.94336 0.00000 m
9.94336 -8.67188 l
11.1465 -8.67188 l
15.5059 -1.96875 l
15.5059 -8.67188 l
16.5684 -8.67188 l
16.5684 0.00000 l
15.3652 0.00000 l
10.9902 -6.70312 l
10.9902 0.00000 l
9.94336 0.00000 l
h
18.8086 0.00000 m
18.8086 -8.67188 l
23.6523 -8.67188 l
23.6523 -7.75000 l
20.0273 -7.75000 l
20.0273 -4.84375 l
23.0742 -4.84375 l
23.0742 -3.93750 l
20.0273 -3.93750 l
20.0273 0.00000 l
18.8086 0.00000 l
h
28.6328 0.00000 m
28.6328 -2.45312 l
24.7266 -2.45312 l
24.7266 -3.32812 l
28.6328 -8.67188 l
29.7266 -8.67188 l
29.7266 -3.40625 l
30.8828 -3.40625 l
30.8828 -2.45312 l
29.7266 -2.45312 l
29.7266 0.00000 l
28.6328 0.00000 l
h
25.8672 -3.40625 m
28.7109 -3.40625 l
28.7109 -7.25000 l
25.8672 -3.40625 l
h
37.2207 -3.31250 m
35.7363 -7.06250 l
34.2676 -3.31250 l
37.2207 -3.31250 l
h
38.5176 0.00000 m
37.5801 -2.40625 l
33.9082 -2.40625 l
32.9551 0.00000 l
31.7988 0.00000 l
35.2520 -8.67188 l
36.4707 -8.67188 l
39.8457 0.00000 l
38.5176 0.00000 l
h
f
[ 1.69152 0.00000 0.00000 1.69152 37.6303 45.9436 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .403922 .203922 RG
newpath
108.128 149.065 m
108.128 160.939 98.5018 170.565 86.6277 170.565  c
74.7536 170.565 65.1277 160.939 65.1277 149.065  c
65.1277 137.191 74.7536 127.565 86.6277 127.565  c
98.5018 127.565 108.128 137.191 108.128 149.065  c
h
f
0.00000 0.00000 0.00000 RG
newpath
109.128 149.065 m
109.128 161.491 99.0541 171.565 86.6277 171.565  c
74.2013 171.565 64.1277 161.491 64.1277 149.065  c
64.1277 136.638 74.2013 126.565 86.6277 126.565  c
99.0541 126.565 109.128 136.638 109.128 149.065  c
h
108.128 149.065 m
108.128 160.939 98.5018 170.565 86.6277 170.565  c
74.7536 170.565 65.1277 160.939 65.1277 149.065  c
65.1277 137.191 74.7536 127.565 86.6277 127.565  c
98.5018 127.565 108.128 137.191 108.128 149.065  c
h
f*
86.6277 149.065 translate
1.00000 1.00000 scale
-16.4648 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
12.9121 .218750 m
11.7142 .218750 10.7480 -.197917 10.0137 -1.03125  c
9.27930 -1.86458 8.91211 -2.96875 8.91211 -4.34375  c
8.91211 -5.71875 9.27930 -6.82031 10.0137 -7.64844  c
10.7480 -8.47656 11.7350 -8.89062 12.9746 -8.89062  c
14.1934 -8.89062 15.1725 -8.47917 15.9121 -7.65625  c
16.6517 -6.83333 17.0215 -5.73438 17.0215 -4.35938  c
17.0215 -2.95312 16.6517 -1.83854 15.9121 -1.01562  c
15.1725 -.192708 14.1725 .218750 12.9121 .218750  c
h
12.9277 -.703125 m
13.8132 -.703125 14.4980 -1.02344 14.9824 -1.66406  c
15.4668 -2.30469 15.7090 -3.20312 15.7090 -4.35938  c
15.7090 -5.49479 15.4668 -6.38021 14.9824 -7.01562  c
14.4980 -7.65104 13.8288 -7.96875 12.9746 -7.96875  c
12.1100 -7.96875 11.4355 -7.64844 10.9512 -7.00781  c
10.4668 -6.36719 10.2246 -5.47917 10.2246 -4.34375  c
10.2246 -3.21875 10.4642 -2.33073 10.9434 -1.67969  c
11.4225 -1.02865 12.0840 -.703125 12.9277 -.703125  c
h
18.7500 0.00000 m
18.7500 -8.67188 l
21.1094 -8.67188 l
22.1510 -8.67188 22.9010 -8.49479 23.3594 -8.14062  c
23.8177 -7.78646 24.0469 -7.20833 24.0469 -6.40625  c
24.0469 -5.47917 23.7344 -4.75521 23.1094 -4.23438  c
22.4844 -3.71354 21.6198 -3.45312 20.5156 -3.45312  c
19.9688 -3.45312 l
19.9688 0.00000 l
18.7500 0.00000 l
h
19.9688 -4.37500 m
20.4688 -4.37500 l
21.1979 -4.37500 21.7604 -4.54427 22.1562 -4.88281  c
22.5521 -5.22135 22.7500 -5.69792 22.7500 -6.31250  c
22.7500 -6.82292 22.5938 -7.19010 22.2812 -7.41406  c
21.9688 -7.63802 21.4479 -7.75000 20.7188 -7.75000  c
19.9688 -7.75000 l
19.9688 -4.37500 l
h
31.8984 -.234375 m
30.8464 .0677083 29.9297 .218750 29.1484 .218750  c
27.7630 .218750 26.7031 -.174479 25.9688 -.960938  c
25.2344 -1.74740 24.8672 -2.87500 24.8672 -4.34375  c
24.8672 -5.78125 25.2396 -6.89844 25.9844 -7.69531  c
26.7292 -8.49219 27.7786 -8.89062 29.1328 -8.89062  c
30.0078 -8.89062 30.9245 -8.76042 31.8828 -8.50000  c
31.8828 -7.35938 l
30.6849 -7.76562 29.7682 -7.96875 29.1328 -7.96875  c
28.1953 -7.96875 27.4688 -7.65104 26.9531 -7.01562  c
26.4375 -6.38021 26.1797 -5.48438 26.1797 -4.32812  c
26.1797 -3.18229 26.4557 -2.29167 27.0078 -1.65625  c
27.5599 -1.02083 28.3359 -.703125 29.3359 -.703125  c
29.7526 -.703125 30.1953 -.776042 30.6641 -.921875  c
30.6641 -3.75000 l
31.8984 -3.75000 l
31.8984 -.234375 l
h
f
[ 1.69152 0.00000 0.00000 1.69152 37.6303 45.9436 ] defaultmatrix matrix concatmatrix setmatrix
.980392 .364706 .200000 RG
newpath
54.3313 166.410 m
33.2455 187.495 l
12.1597 166.410 l
33.2455 145.324 l
h
f
0.00000 0.00000 0.00000 RG
newpath
33.2455 143.910 m
55.7455 166.410 l
33.2455 188.910 l
10.7455 166.410 l
h
54.3313 166.410 m
33.2455 187.495 l
12.1597 166.410 l
33.2455 145.324 l
h
f*
33.2455 166.410 translate
1.00000 1.00000 scale
-19.3740 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
12.9121 .218750 m
11.7142 .218750 10.7480 -.197917 10.0137 -1.03125  c
9.27930 -1.86458 8.91211 -2.96875 8.91211 -4.34375  c
8.91211 -5.71875 9.27930 -6.82031 10.0137 -7.64844  c
10.7480 -8.47656 11.7350 -8.89062 12.9746 -8.89062  c
14.1934 -8.89062 15.1725 -8.47917 15.9121 -7.65625  c
16.6517 -6.83333 17.0215 -5.73438 17.0215 -4.35938  c
17.0215 -2.95312 16.6517 -1.83854 15.9121 -1.01562  c
15.1725 -.192708 14.1725 .218750 12.9121 .218750  c
h
12.9277 -.703125 m
13.8132 -.703125 14.4980 -1.02344 14.9824 -1.66406  c
15.4668 -2.30469 15.7090 -3.20312 15.7090 -4.35938  c
15.7090 -5.49479 15.4668 -6.38021 14.9824 -7.01562  c
14.4980 -7.65104 13.8288 -7.96875 12.9746 -7.96875  c
12.1100 -7.96875 11.4355 -7.64844 10.9512 -7.00781  c
10.4668 -6.36719 10.2246 -5.47917 10.2246 -4.34375  c
10.2246 -3.21875 10.4642 -2.33073 10.9434 -1.67969  c
11.4225 -1.02865 12.0840 -.703125 12.9277 -.703125  c
h
18.7500 0.00000 m
18.7500 -8.67188 l
21.1094 -8.67188 l
22.1510 -8.67188 22.9010 -8.49479 23.3594 -8.14062  c
23.8177 -7.78646 24.0469 -7.20833 24.0469 -6.40625  c
24.0469 -5.47917 23.7344 -4.75521 23.1094 -4.23438  c
22.4844 -3.71354 21.6198 -3.45312 20.5156 -3.45312  c
19.9688 -3.45312 l
19.9688 0.00000 l
18.7500 0.00000 l
h
19.9688 -4.37500 m
20.4688 -4.37500 l
21.1979 -4.37500 21.7604 -4.54427 22.1562 -4.88281  c
22.5521 -5.22135 22.7500 -5.69792 22.7500 -6.31250  c
22.7500 -6.82292 22.5938 -7.19010 22.2812 -7.41406  c
21.9688 -7.63802 21.4479 -7.75000 20.7188 -7.75000  c
19.9688 -7.75000 l
19.9688 -4.37500 l
h
25.3828 0.00000 m
25.3828 -8.67188 l
27.6328 -8.67188 l
28.4974 -8.67188 29.1615 -8.50781 29.6250 -8.17969  c
30.0885 -7.85156 30.3203 -7.38021 30.3203 -6.76562  c
30.3203 -5.71354 29.7266 -4.96354 28.5391 -4.51562  c
29.9557 -4.08854 30.6641 -3.30729 30.6641 -2.17188  c
30.6641 -1.46354 30.4297 -.924479 29.9609 -.554688  c
29.4922 -.184896 28.8151 0.00000 27.9297 0.00000  c
25.3828 0.00000 l
h
26.6016 -.921875 m
26.8516 -.921875 l
27.7474 -.921875 28.3307 -.979167 28.6016 -1.09375  c
29.1120 -1.30208 29.3672 -1.69792 29.3672 -2.28125  c
29.3672 -2.80208 29.1354 -3.23177 28.6719 -3.57031  c
28.2083 -3.90885 27.6328 -4.07812 26.9453 -4.07812  c
26.6016 -4.07812 l
26.6016 -.921875 l
h
26.6016 -4.85938 m
26.9922 -4.85938 l
27.6484 -4.85938 28.1562 -5.00000 28.5156 -5.28125  c
28.8750 -5.56250 29.0547 -5.95833 29.0547 -6.46875  c
29.0547 -7.32292 28.3932 -7.75000 27.0703 -7.75000  c
26.6016 -7.75000 l
26.6016 -4.85938 l
h
32.1602 0.00000 m
32.1602 -1.01562 l
32.4935 -1.79688 33.1706 -2.65104 34.1914 -3.57812  c
34.8633 -4.17188 l
35.7070 -4.94271 36.1289 -5.70833 36.1289 -6.46875  c
36.1289 -6.94792 35.9857 -7.32552 35.6992 -7.60156  c
35.4128 -7.87760 35.0143 -8.01562 34.5039 -8.01562  c
33.8997 -8.01562 33.1914 -7.78646 32.3789 -7.32812  c
32.3789 -8.34375 l
33.1497 -8.70833 33.9102 -8.89062 34.6602 -8.89062  c
35.4727 -8.89062 36.1263 -8.67188 36.6211 -8.23438  c
37.1159 -7.79688 37.3633 -7.21875 37.3633 -6.50000  c
37.3633 -5.97917 37.2383 -5.51562 36.9883 -5.10938  c
36.7383 -4.70312 36.2747 -4.21354 35.5977 -3.64062  c
35.1602 -3.26562 l
34.2331 -2.48438 33.6966 -1.73438 33.5508 -1.01562  c
37.3164 -1.01562 l
37.3164 0.00000 l
32.1602 0.00000 l
h
f
[ 1.69152 0.00000 0.00000 1.69152 37.6303 45.9436 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .705882 .505882 RG
newpath
188.555 34.5015 m
188.555 46.3756 178.929 56.0015 167.055 56.0015  c
155.181 56.0015 145.555 46.3756 145.555 34.5015  c
145.555 22.6274 155.181 13.0015 167.055 13.0015  c
178.929 13.0015 188.555 22.6274 188.555 34.5015  c
h
f
0.00000 0.00000 0.00000 RG
newpath
189.555 34.5015 m
189.555 46.9279 179.481 57.0015 167.055 57.0015  c
154.629 57.0015 144.555 46.9279 144.555 34.5015  c
144.555 22.0751 154.629 12.0015 167.055 12.0015  c
179.481 12.0015 189.555 22.0751 189.555 34.5015  c
h
188.555 34.5015 m
188.555 46.3756 178.929 56.0015 167.055 56.0015  c
155.181 56.0015 145.555 46.3756 145.555 34.5015  c
145.555 22.6274 155.181 13.0015 167.055 13.0015  c
178.929 13.0015 188.555 22.6274 188.555 34.5015  c
h
f*
167.055 34.5015 translate
1.00000 1.00000 scale
-25.5293 4.42090 translate
newpath
5.51562 -3.31250 m
4.03125 -7.06250 l
2.56250 -3.31250 l
5.51562 -3.31250 l
h
6.81250 0.00000 m
5.87500 -2.40625 l
2.20312 -2.40625 l
1.25000 0.00000 l
.0937500 0.00000 l
3.54688 -8.67188 l
4.76562 -8.67188 l
8.14062 0.00000 l
6.81250 0.00000 l
h
9.40430 0.00000 m
9.40430 -8.67188 l
12.2793 -8.67188 l
13.1439 -8.67188 13.8392 -8.57552 14.3652 -8.38281  c
14.8913 -8.19010 15.3470 -7.86458 15.7324 -7.40625  c
16.3470 -6.68750 16.6543 -5.73438 16.6543 -4.54688  c
16.6543 -3.09896 16.2741 -1.97917 15.5137 -1.18750  c
14.7533 -.395833 13.6803 0.00000 12.2949 0.00000  c
9.40430 0.00000 l
h
10.6230 -.921875 m
12.2012 -.921875 l
13.3262 -.921875 14.1230 -1.22396 14.5918 -1.82812  c
15.1022 -2.47396 15.3574 -3.33854 15.3574 -4.42188  c
15.3574 -5.44271 15.1074 -6.24479 14.6074 -6.82812  c
14.3053 -7.18229 13.9460 -7.42448 13.5293 -7.55469  c
13.1126 -7.68490 12.4824 -7.75000 11.6387 -7.75000  c
10.6230 -7.75000 l
10.6230 -.921875 l
h
22.7832 -3.31250 m
21.2988 -7.06250 l
19.8301 -3.31250 l
22.7832 -3.31250 l
h
24.0801 0.00000 m
23.1426 -2.40625 l
19.4707 -2.40625 l
18.5176 0.00000 l
17.3613 0.00000 l
20.8145 -8.67188 l
22.0332 -8.67188 l
25.4082 0.00000 l
24.0801 0.00000 l
h
26.6719 0.00000 m
26.6719 -8.67188 l
28.3750 -8.67188 l
30.7812 -1.96875 l
33.2500 -8.67188 l
34.7656 -8.67188 l
34.7656 0.00000 l
33.6250 0.00000 l
33.6250 -7.06250 l
31.2344 -.578125 l
30.0469 -.578125 l
27.7188 -7.07812 l
27.7188 0.00000 l
26.6719 0.00000 l
h
37.6953 0.00000 m
37.6953 -.875000 l
39.4297 -.875000 l
39.4297 -7.71875 l
37.6953 -7.28125 l
37.6953 -8.17188 l
40.5859 -8.89062 l
40.5859 -.875000 l
42.3203 -.875000 l
42.3203 0.00000 l
37.6953 0.00000 l
h
44.8301 -.0468750 m
44.8301 -1.03125 l
45.5697 -.781250 46.1947 -.656250 46.7051 -.656250  c
47.4238 -.656250 47.9863 -.960938 48.3926 -1.57031  c
48.7988 -2.17969 49.0020 -3.03125 49.0020 -4.12500  c
48.4186 -3.39583 47.7520 -3.03125 47.0020 -3.03125  c
46.2728 -3.03125 45.6556 -3.29948 45.1504 -3.83594  c
44.6452 -4.37240 44.3926 -5.03125 44.3926 -5.81250  c
44.3926 -6.69792 44.6608 -7.43229 45.1973 -8.01562  c
45.7337 -8.59896 46.4134 -8.89062 47.2363 -8.89062  c
48.1842 -8.89062 48.9290 -8.51302 49.4707 -7.75781  c
50.0124 -7.00260 50.2832 -5.96875 50.2832 -4.65625  c
50.2832 -3.16667 49.9525 -1.98177 49.2910 -1.10156  c
48.6296 -.221354 47.7311 .218750 46.5957 .218750  c
46.1478 .218750 45.5592 .130208 44.8301 -.0468750  c
h
45.5332 -6.03125 m
45.5332 -5.36458 45.6842 -4.83854 45.9863 -4.45312  c
46.2884 -4.06771 46.6999 -3.87500 47.2207 -3.87500  c
47.7103 -3.87500 48.1270 -4.03906 48.4707 -4.36719  c
48.8145 -4.69531 48.9863 -5.09375 48.9863 -5.56250  c
48.9863 -6.30208 48.8197 -6.89844 48.4863 -7.35156  c
48.1530 -7.80469 47.7155 -8.03125 47.1738 -8.03125  c
46.6634 -8.03125 46.2624 -7.85156 45.9707 -7.49219  c
45.6790 -7.13281 45.5332 -6.64583 45.5332 -6.03125  c
h
f
[ 1.69152 0.00000 0.00000 1.69152 37.6303 45.9436 ] defaultmatrix matrix concatmatrix setmatrix
.960784 .321569 .200000 RG
newpath
209.857 78.1118 m
188.772 99.1976 l
167.686 78.1118 l
188.772 57.0260 l
h
f
0.00000 0.00000 0.00000 RG
newpath
188.772 55.6118 m
211.272 78.1118 l
188.772 100.612 l
166.272 78.1118 l
h
209.857 78.1118 m
188.772 99.1976 l
167.686 78.1118 l
188.772 57.0260 l
h
f*
188.772 78.1118 translate
1.00000 1.00000 scale
-22.0723 4.42090 translate
newpath
3.18750 0.00000 m
3.18750 -7.75000 l
.109375 -7.75000 l
.109375 -8.67188 l
7.48438 -8.67188 l
7.48438 -7.75000 l
4.40625 -7.75000 l
4.40625 0.00000 l
3.18750 0.00000 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
11.3379 -8.67188 l
12.1712 -8.67188 12.8092 -8.48958 13.2520 -8.12500  c
13.6947 -7.76042 13.9160 -7.22396 13.9160 -6.51562  c
13.9160 -5.35938 13.3327 -4.54167 12.1660 -4.06250  c
15.0566 0.00000 l
13.5410 0.00000 l
11.0723 -3.67188 l
9.93164 -3.67188 l
9.93164 0.00000 l
8.71289 0.00000 l
h
9.93164 -4.59375 m
10.3223 -4.59375 l
11.8743 -4.59375 12.6504 -5.19792 12.6504 -6.40625  c
12.6504 -7.30208 11.9993 -7.75000 10.6973 -7.75000  c
9.93164 -7.75000 l
9.93164 -4.59375 l
h
16.2852 0.00000 m
16.2852 -8.67188 l
17.5195 -8.67188 l
17.5195 0.00000 l
16.2852 0.00000 l
h
19.7578 0.00000 m
19.7578 -8.67188 l
21.4609 -8.67188 l
23.8672 -1.96875 l
26.3359 -8.67188 l
27.8516 -8.67188 l
27.8516 0.00000 l
26.7109 0.00000 l
26.7109 -7.06250 l
24.3203 -.578125 l
23.1328 -.578125 l
20.8047 -7.07812 l
20.8047 0.00000 l
19.7578 0.00000 l
h
30.1875 -.0625000 m
30.1875 -1.14062 l
31.0208 -.817708 31.6719 -.656250 32.1406 -.656250  c
32.6927 -.656250 33.1432 -.817708 33.4922 -1.14062  c
33.8411 -1.46354 34.0156 -1.88021 34.0156 -2.39062  c
34.0156 -3.60938 33.1615 -4.21875 31.4531 -4.21875  c
30.9844 -4.21875 l
30.9844 -5.00000 l
31.3906 -5.00000 l
32.9948 -5.00000 33.7969 -5.56250 33.7969 -6.68750  c
33.7969 -7.57292 33.2708 -8.01562 32.2188 -8.01562  c
31.6354 -8.01562 31.0000 -7.85417 30.3125 -7.53125  c
30.3125 -8.54688 l
30.9896 -8.77604 31.6510 -8.89062 32.2969 -8.89062  c
34.0677 -8.89062 34.9531 -8.21875 34.9531 -6.87500  c
34.9531 -5.85417 34.3490 -5.13021 33.1406 -4.70312  c
34.5469 -4.38021 35.2500 -3.61458 35.2500 -2.40625  c
35.2500 -1.58333 34.9792 -.940104 34.4375 -.476562  c
33.8958 -.0130208 33.1562 .218750 32.2188 .218750  c
31.6771 .218750 31.0000 .125000 30.1875 -.0625000  c
h
38.3691 0.00000 m
38.4733 -.677083 38.6322 -1.26042 38.8457 -1.75000  c
39.0592 -2.23958 39.4316 -2.91667 39.9629 -3.78125  c
42.3223 -7.59375 l
37.8535 -7.59375 l
37.8535 -8.67188 l
43.4316 -8.67188 l
43.4316 -7.59375 l
41.2025 -4.31250 39.9577 -1.78125 39.6973 0.00000  c
38.3691 0.00000 l
h
f
[ 1.69152 0.00000 0.00000 1.69152 37.6303 45.9436 ] defaultmatrix matrix concatmatrix setmatrix
.835294 1.00000 .690196 RG
newpath
153.790 .371342 m
153.790 12.2455 144.164 21.8713 132.290 21.8713  c
120.416 21.8713 110.790 12.2455 110.790 .371342  c
110.790 -11.5028 120.416 -21.1287 132.290 -21.1287  c
144.164 -21.1287 153.790 -11.5028 153.790 .371342  c
h
f
0.00000 0.00000 0.00000 RG
newpath
154.790 .371342 m
154.790 12.7977 144.716 22.8713 132.290 22.8713  c
119.864 22.8713 109.790 12.7977 109.790 .371342  c
109.790 -12.0551 119.864 -22.1287 132.290 -22.1287  c
144.716 -22.1287 154.790 -12.0551 154.790 .371342  c
h
153.790 .371342 m
153.790 12.2455 144.164 21.8713 132.290 21.8713  c
120.416 21.8713 110.790 12.2455 110.790 .371342  c
110.790 -11.5028 120.416 -21.1287 132.290 -21.1287  c
144.164 -21.1287 153.790 -11.5028 153.790 .371342  c
h
f*
132.290 .371342 translate
1.00000 1.00000 scale
-20.2119 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.28125 -8.67188 l
2.28125 -4.40625 l
5.78125 -8.67188 l
7.01562 -8.67188 l
3.62500 -4.53125 l
7.62500 0.00000 l
6.06250 0.00000 l
2.28125 -4.39062 l
2.28125 0.00000 l
1.12500 0.00000 l
h
12.6621 .218750 m
11.3184 .218750 10.2793 -.177083 9.54492 -.968750  c
8.81055 -1.76042 8.44336 -2.88021 8.44336 -4.32812  c
8.44336 -5.77604 8.81836 -6.89844 9.56836 -7.69531  c
10.3184 -8.49219 11.3704 -8.89062 12.7246 -8.89062  c
13.5059 -8.89062 14.4173 -8.76562 15.4590 -8.51562  c
15.4590 -7.35938 l
14.2715 -7.76562 13.3548 -7.96875 12.7090 -7.96875  c
11.7715 -7.96875 11.0449 -7.65104 10.5293 -7.01562  c
10.0137 -6.38021 9.75586 -5.47917 9.75586 -4.31250  c
9.75586 -3.20833 10.0293 -2.33854 10.5762 -1.70312  c
11.1230 -1.06771 11.8757 -.750000 12.8340 -.750000  c
13.6569 -.750000 14.5371 -1.00000 15.4746 -1.50000  c
15.4746 -.453125 l
14.6204 -.00520833 13.6829 .218750 12.6621 .218750  c
h
17.2617 0.00000 m
17.2617 -8.67188 l
18.4648 -8.67188 l
22.8242 -1.96875 l
22.8242 -8.67188 l
23.8867 -8.67188 l
23.8867 0.00000 l
22.6836 0.00000 l
18.3086 -6.70312 l
18.3086 0.00000 l
17.2617 0.00000 l
h
26.1270 0.00000 m
26.1270 -8.67188 l
27.2832 -8.67188 l
27.2832 -4.40625 l
30.7832 -8.67188 l
32.0176 -8.67188 l
28.6270 -4.53125 l
32.6270 0.00000 l
31.0645 0.00000 l
27.2832 -4.39062 l
27.2832 0.00000 l
26.1270 0.00000 l
h
34.0547 -.0625000 m
34.0547 -1.14062 l
34.8880 -.817708 35.5391 -.656250 36.0078 -.656250  c
36.5599 -.656250 37.0104 -.817708 37.3594 -1.14062  c
37.7083 -1.46354 37.8828 -1.88021 37.8828 -2.39062  c
37.8828 -3.60938 37.0286 -4.21875 35.3203 -4.21875  c
34.8516 -4.21875 l
34.8516 -5.00000 l
35.2578 -5.00000 l
36.8620 -5.00000 37.6641 -5.56250 37.6641 -6.68750  c
37.6641 -7.57292 37.1380 -8.01562 36.0859 -8.01562  c
35.5026 -8.01562 34.8672 -7.85417 34.1797 -7.53125  c
34.1797 -8.54688 l
34.8568 -8.77604 35.5182 -8.89062 36.1641 -8.89062  c
37.9349 -8.89062 38.8203 -8.21875 38.8203 -6.87500  c
38.8203 -5.85417 38.2161 -5.13021 37.0078 -4.70312  c
38.4141 -4.38021 39.1172 -3.61458 39.1172 -2.40625  c
39.1172 -1.58333 38.8464 -.940104 38.3047 -.476562  c
37.7630 -.0130208 37.0234 .218750 36.0859 .218750  c
35.5443 .218750 34.8672 .125000 34.0547 -.0625000  c
h
f
[ 1.69152 0.00000 0.00000 1.69152 37.6303 45.9436 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
