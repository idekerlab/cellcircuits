%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:48:05 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.25878 0.00000 0.00000 1.25878 93.5283 27.0919 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
78.2300 20.4632 m
53.2356 63.7548 l
S
newpath
154.494 241.291 m
120.610 203.924 l
S
newpath
61.2525 145.540 m
98.4152 181.119 l
S
newpath
50.3488 151.836 m
61.0136 195.411 l
S
newpath
14.2644 112.236 m
25.5144 118.731 l
S
newpath
45.0000 100.519 m
45.0000 107.481 l
S
newpath
30.7356 86.2548 m
14.2644 95.7644 l
S
.701961 1.00000 .600000 RG
newpath
110.980 .977617 m
110.980 12.8517 101.354 22.4776 89.4800 22.4776  c
77.6059 22.4776 67.9800 12.8517 67.9800 .977617  c
67.9800 -10.8965 77.6059 -20.5224 89.4800 -20.5224  c
101.354 -20.5224 110.980 -10.8965 110.980 .977617  c
h
f
0.00000 0.00000 0.00000 RG
newpath
111.980 .977617 m
111.980 13.4040 101.906 23.4776 89.4800 23.4776  c
77.0536 23.4776 66.9800 13.4040 66.9800 .977617  c
66.9800 -11.4488 77.0536 -21.5224 89.4800 -21.5224  c
101.906 -21.5224 111.980 -11.4488 111.980 .977617  c
h
110.980 .977617 m
110.980 12.8517 101.354 22.4776 89.4800 22.4776  c
77.6059 22.4776 67.9800 12.8517 67.9800 .977617  c
67.9800 -10.8965 77.6059 -20.5224 89.4800 -20.5224  c
101.354 -20.5224 110.980 -10.8965 110.980 .977617  c
h
f*
89.4800 .977617 translate
1.00000 1.00000 scale
-17.1445 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
13.1309 .218750 m
11.7871 .218750 10.7480 -.177083 10.0137 -.968750  c
9.27930 -1.76042 8.91211 -2.88021 8.91211 -4.32812  c
8.91211 -5.77604 9.28711 -6.89844 10.0371 -7.69531  c
10.7871 -8.49219 11.8392 -8.89062 13.1934 -8.89062  c
13.9746 -8.89062 14.8861 -8.76562 15.9277 -8.51562  c
15.9277 -7.35938 l
14.7402 -7.76562 13.8236 -7.96875 13.1777 -7.96875  c
12.2402 -7.96875 11.5137 -7.65104 10.9980 -7.01562  c
10.4824 -6.38021 10.2246 -5.47917 10.2246 -4.31250  c
10.2246 -3.20833 10.4980 -2.33854 11.0449 -1.70312  c
11.5918 -1.06771 12.3444 -.750000 13.3027 -.750000  c
14.1257 -.750000 15.0059 -1.00000 15.9434 -1.50000  c
15.9434 -.453125 l
15.0892 -.00520833 14.1517 .218750 13.1309 .218750  c
h
17.7305 0.00000 m
17.7305 -8.67188 l
18.9336 -8.67188 l
23.2930 -1.96875 l
23.2930 -8.67188 l
24.3555 -8.67188 l
24.3555 0.00000 l
23.1523 0.00000 l
18.7773 -6.70312 l
18.7773 0.00000 l
17.7305 0.00000 l
h
26.5957 0.00000 m
26.5957 -8.67188 l
27.8145 -8.67188 l
27.8145 -5.01562 l
31.9395 -5.01562 l
31.9395 -8.67188 l
33.1738 -8.67188 l
33.1738 0.00000 l
31.9395 0.00000 l
31.9395 -4.09375 l
27.8145 -4.09375 l
27.8145 0.00000 l
26.5957 0.00000 l
h
f
[ 1.25878 0.00000 0.00000 1.25878 93.5283 27.0919 ] defaultmatrix matrix concatmatrix setmatrix
.250980 .780392 .325490 RG
newpath
130.996 192.124 m
109.910 213.210 l
88.8244 192.124 l
109.910 171.038 l
h
f
0.00000 0.00000 0.00000 RG
newpath
109.910 169.624 m
132.410 192.124 l
109.910 214.624 l
87.4102 192.124 l
h
130.996 192.124 m
109.910 213.210 l
88.8244 192.124 l
109.910 171.038 l
h
f*
109.910 192.124 translate
1.00000 1.00000 scale
-14.8975 4.42090 translate
newpath
7.64062 -.234375 m
6.58854 .0677083 5.67188 .218750 4.89062 .218750  c
3.50521 .218750 2.44531 -.174479 1.71094 -.960938  c
.976562 -1.74740 .609375 -2.87500 .609375 -4.34375  c
.609375 -5.78125 .981771 -6.89844 1.72656 -7.69531  c
2.47135 -8.49219 3.52083 -8.89062 4.87500 -8.89062  c
5.75000 -8.89062 6.66667 -8.76042 7.62500 -8.50000  c
7.62500 -7.35938 l
6.42708 -7.76562 5.51042 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.48438 1.92188 -4.32812  c
1.92188 -3.18229 2.19792 -2.29167 2.75000 -1.65625  c
3.30208 -1.02083 4.07812 -.703125 5.07812 -.703125  c
5.49479 -.703125 5.93750 -.776042 6.40625 -.921875  c
6.40625 -3.75000 l
7.64062 -3.75000 l
7.64062 -.234375 l
h
9.79688 0.00000 m
9.79688 -8.67188 l
12.0469 -8.67188 l
12.9115 -8.67188 13.5755 -8.50781 14.0391 -8.17969  c
14.5026 -7.85156 14.7344 -7.38021 14.7344 -6.76562  c
14.7344 -5.71354 14.1406 -4.96354 12.9531 -4.51562  c
14.3698 -4.08854 15.0781 -3.30729 15.0781 -2.17188  c
15.0781 -1.46354 14.8438 -.924479 14.3750 -.554688  c
13.9062 -.184896 13.2292 0.00000 12.3438 0.00000  c
9.79688 0.00000 l
h
11.0156 -.921875 m
11.2656 -.921875 l
12.1615 -.921875 12.7448 -.979167 13.0156 -1.09375  c
13.5260 -1.30208 13.7812 -1.69792 13.7812 -2.28125  c
13.7812 -2.80208 13.5495 -3.23177 13.0859 -3.57031  c
12.6224 -3.90885 12.0469 -4.07812 11.3594 -4.07812  c
11.0156 -4.07812 l
11.0156 -.921875 l
h
11.0156 -4.85938 m
11.4062 -4.85938 l
12.0625 -4.85938 12.5703 -5.00000 12.9297 -5.28125  c
13.2891 -5.56250 13.4688 -5.95833 13.4688 -6.46875  c
13.4688 -7.32292 12.8073 -7.75000 11.4844 -7.75000  c
11.0156 -7.75000 l
11.0156 -4.85938 l
h
16.6992 0.00000 m
16.6992 -8.67188 l
19.0586 -8.67188 l
20.1003 -8.67188 20.8503 -8.49479 21.3086 -8.14062  c
21.7669 -7.78646 21.9961 -7.20833 21.9961 -6.40625  c
21.9961 -5.47917 21.6836 -4.75521 21.0586 -4.23438  c
20.4336 -3.71354 19.5690 -3.45312 18.4648 -3.45312  c
17.9180 -3.45312 l
17.9180 0.00000 l
16.6992 0.00000 l
h
17.9180 -4.37500 m
18.4180 -4.37500 l
19.1471 -4.37500 19.7096 -4.54427 20.1055 -4.88281  c
20.5013 -5.22135 20.6992 -5.69792 20.6992 -6.31250  c
20.6992 -6.82292 20.5430 -7.19010 20.2305 -7.41406  c
19.9180 -7.63802 19.3971 -7.75000 18.6680 -7.75000  c
17.9180 -7.75000 l
17.9180 -4.37500 l
h
23.2070 0.00000 m
23.2070 -1.01562 l
23.5404 -1.79688 24.2174 -2.65104 25.2383 -3.57812  c
25.9102 -4.17188 l
26.7539 -4.94271 27.1758 -5.70833 27.1758 -6.46875  c
27.1758 -6.94792 27.0326 -7.32552 26.7461 -7.60156  c
26.4596 -7.87760 26.0612 -8.01562 25.5508 -8.01562  c
24.9466 -8.01562 24.2383 -7.78646 23.4258 -7.32812  c
23.4258 -8.34375 l
24.1966 -8.70833 24.9570 -8.89062 25.7070 -8.89062  c
26.5195 -8.89062 27.1732 -8.67188 27.6680 -8.23438  c
28.1628 -7.79688 28.4102 -7.21875 28.4102 -6.50000  c
28.4102 -5.97917 28.2852 -5.51562 28.0352 -5.10938  c
27.7852 -4.70312 27.3216 -4.21354 26.6445 -3.64062  c
26.2070 -3.26562 l
25.2799 -2.48438 24.7435 -1.73438 24.5977 -1.01562  c
28.3633 -1.01562 l
28.3633 0.00000 l
23.2070 0.00000 l
h
f
[ 1.25878 0.00000 0.00000 1.25878 93.5283 27.0919 ] defaultmatrix matrix concatmatrix setmatrix
.576471 1.00000 .517647 RG
newpath
87.8625 217.266 m
87.8625 229.140 78.2366 238.766 66.3625 238.766  c
54.4884 238.766 44.8625 229.140 44.8625 217.266  c
44.8625 205.392 54.4884 195.766 66.3625 195.766  c
78.2366 195.766 87.8625 205.392 87.8625 217.266  c
h
f
0.00000 0.00000 0.00000 RG
newpath
88.8625 217.266 m
88.8625 229.693 78.7889 239.766 66.3625 239.766  c
53.9361 239.766 43.8625 229.693 43.8625 217.266  c
43.8625 204.840 53.9361 194.766 66.3625 194.766  c
78.7889 194.766 88.8625 204.840 88.8625 217.266  c
h
87.8625 217.266 m
87.8625 229.140 78.2366 238.766 66.3625 238.766  c
54.4884 238.766 44.8625 229.140 44.8625 217.266  c
44.8625 205.392 54.4884 195.766 66.3625 195.766  c
78.2366 195.766 87.8625 205.392 87.8625 217.266  c
h
f*
66.3625 217.266 translate
1.00000 1.00000 scale
-21.9111 4.42090 translate
newpath
.562500 0.00000 m
.562500 -.984375 l
5.21875 -7.75000 l
.843750 -7.75000 l
.843750 -8.67188 l
6.68750 -8.67188 l
6.68750 -7.75000 l
2.03125 -.984375 l
6.68750 -.984375 l
6.68750 0.00000 l
.562500 0.00000 l
h
8.37891 0.00000 m
8.37891 -8.67188 l
10.6289 -8.67188 l
11.4935 -8.67188 12.1576 -8.50781 12.6211 -8.17969  c
13.0846 -7.85156 13.3164 -7.38021 13.3164 -6.76562  c
13.3164 -5.71354 12.7227 -4.96354 11.5352 -4.51562  c
12.9518 -4.08854 13.6602 -3.30729 13.6602 -2.17188  c
13.6602 -1.46354 13.4258 -.924479 12.9570 -.554688  c
12.4883 -.184896 11.8112 0.00000 10.9258 0.00000  c
8.37891 0.00000 l
h
9.59766 -.921875 m
9.84766 -.921875 l
10.7435 -.921875 11.3268 -.979167 11.5977 -1.09375  c
12.1081 -1.30208 12.3633 -1.69792 12.3633 -2.28125  c
12.3633 -2.80208 12.1315 -3.23177 11.6680 -3.57031  c
11.2044 -3.90885 10.6289 -4.07812 9.94141 -4.07812  c
9.59766 -4.07812 l
9.59766 -.921875 l
h
9.59766 -4.85938 m
9.98828 -4.85938 l
10.6445 -4.85938 11.1523 -5.00000 11.5117 -5.28125  c
11.8711 -5.56250 12.0508 -5.95833 12.0508 -6.46875  c
12.0508 -7.32292 11.3893 -7.75000 10.0664 -7.75000  c
9.59766 -7.75000 l
9.59766 -4.85938 l
h
17.3438 0.00000 m
17.3438 -7.75000 l
14.2656 -7.75000 l
14.2656 -8.67188 l
21.6406 -8.67188 l
21.6406 -7.75000 l
18.5625 -7.75000 l
18.5625 0.00000 l
17.3438 0.00000 l
h
22.8691 0.00000 m
22.8691 -8.67188 l
25.1191 -8.67188 l
25.9837 -8.67188 26.6478 -8.50781 27.1113 -8.17969  c
27.5749 -7.85156 27.8066 -7.38021 27.8066 -6.76562  c
27.8066 -5.71354 27.2129 -4.96354 26.0254 -4.51562  c
27.4421 -4.08854 28.1504 -3.30729 28.1504 -2.17188  c
28.1504 -1.46354 27.9160 -.924479 27.4473 -.554688  c
26.9785 -.184896 26.3014 0.00000 25.4160 0.00000  c
22.8691 0.00000 l
h
24.0879 -.921875 m
24.3379 -.921875 l
25.2337 -.921875 25.8171 -.979167 26.0879 -1.09375  c
26.5983 -1.30208 26.8535 -1.69792 26.8535 -2.28125  c
26.8535 -2.80208 26.6217 -3.23177 26.1582 -3.57031  c
25.6947 -3.90885 25.1191 -4.07812 24.4316 -4.07812  c
24.0879 -4.07812 l
24.0879 -.921875 l
h
24.0879 -4.85938 m
24.4785 -4.85938 l
25.1348 -4.85938 25.6426 -5.00000 26.0020 -5.28125  c
26.3613 -5.56250 26.5410 -5.95833 26.5410 -6.46875  c
26.5410 -7.32292 25.8796 -7.75000 24.5566 -7.75000  c
24.0879 -7.75000 l
24.0879 -4.85938 l
h
30.4590 0.00000 m
30.4590 -.875000 l
32.1934 -.875000 l
32.1934 -7.71875 l
30.4590 -7.28125 l
30.4590 -8.17188 l
33.3496 -8.89062 l
33.3496 -.875000 l
35.0840 -.875000 l
35.0840 0.00000 l
30.4590 0.00000 l
h
38.2969 -4.50000 m
38.8490 -5.20833 39.5417 -5.56250 40.3750 -5.56250  c
41.1354 -5.56250 41.7578 -5.31250 42.2422 -4.81250  c
42.7266 -4.31250 42.9688 -3.67188 42.9688 -2.89062  c
42.9688 -1.98438 42.6979 -1.23958 42.1562 -.656250  c
41.6146 -.0729167 40.9271 .218750 40.0938 .218750  c
39.1354 .218750 38.3854 -.166667 37.8438 -.937500  c
37.3021 -1.70833 37.0312 -2.77604 37.0312 -4.14062  c
37.0312 -5.65104 37.3411 -6.82031 37.9609 -7.64844  c
38.5807 -8.47656 39.4531 -8.89062 40.5781 -8.89062  c
41.0990 -8.89062 41.7448 -8.78125 42.5156 -8.56250  c
42.5156 -7.56250 l
41.7031 -7.87500 41.0365 -8.03125 40.5156 -8.03125  c
39.0365 -8.03125 38.2969 -6.85417 38.2969 -4.50000  c
h
41.7969 -2.62500 m
41.7969 -3.28125 41.6510 -3.79688 41.3594 -4.17188  c
41.0677 -4.54688 40.6562 -4.73438 40.1250 -4.73438  c
39.6458 -4.73438 39.2292 -4.57031 38.8750 -4.24219  c
38.5208 -3.91406 38.3438 -3.52083 38.3438 -3.06250  c
38.3438 -2.33333 38.5104 -1.75000 38.8438 -1.31250  c
39.1771 -.875000 39.6198 -.656250 40.1719 -.656250  c
40.6719 -.656250 41.0677 -.833333 41.3594 -1.18750  c
41.6510 -1.54167 41.7969 -2.02083 41.7969 -2.62500  c
h
f
[ 1.25878 0.00000 0.00000 1.25878 93.5283 27.0919 ] defaultmatrix matrix concatmatrix setmatrix
.682353 1.00000 .588235 RG
newpath
66.5000 129.981 m
66.5000 141.855 56.8741 151.481 45.0000 151.481  c
33.1259 151.481 23.5000 141.855 23.5000 129.981  c
23.5000 118.107 33.1259 108.481 45.0000 108.481  c
56.8741 108.481 66.5000 118.107 66.5000 129.981  c
h
f
0.00000 0.00000 0.00000 RG
newpath
67.5000 129.981 m
67.5000 142.407 57.4264 152.481 45.0000 152.481  c
32.5736 152.481 22.5000 142.407 22.5000 129.981  c
22.5000 117.554 32.5736 107.481 45.0000 107.481  c
57.4264 107.481 67.5000 117.554 67.5000 129.981  c
h
66.5000 129.981 m
66.5000 141.855 56.8741 151.481 45.0000 151.481  c
33.1259 151.481 23.5000 141.855 23.5000 129.981  c
23.5000 118.107 33.1259 108.481 45.0000 108.481  c
56.8741 108.481 66.5000 118.107 66.5000 129.981  c
h
f*
45.0000 129.981 translate
1.00000 1.00000 scale
-15.3926 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -.921875 l
6.25000 -.921875 l
6.25000 0.00000 l
1.12500 0.00000 l
h
9.21094 .218750 m
8.63802 .218750 7.89844 .0885417 6.99219 -.171875  c
6.99219 -1.39062 l
7.96094 -.932292 8.76302 -.703125 9.39844 -.703125  c
9.87760 -.703125 10.2656 -.830729 10.5625 -1.08594  c
10.8594 -1.34115 11.0078 -1.67708 11.0078 -2.09375  c
11.0078 -2.42708 10.9115 -2.71354 10.7188 -2.95312  c
10.5260 -3.19271 10.1693 -3.45833 9.64844 -3.75000  c
9.05469 -4.09375 l
8.31510 -4.52083 7.79427 -4.91927 7.49219 -5.28906  c
7.19010 -5.65885 7.03906 -6.09375 7.03906 -6.59375  c
7.03906 -7.26042 7.28125 -7.80990 7.76562 -8.24219  c
8.25000 -8.67448 8.86719 -8.89062 9.61719 -8.89062  c
10.2839 -8.89062 10.9870 -8.78125 11.7266 -8.56250  c
11.7266 -7.43750 l
10.8099 -7.79167 10.1276 -7.96875 9.67969 -7.96875  c
9.25260 -7.96875 8.90104 -7.85677 8.62500 -7.63281  c
8.34896 -7.40885 8.21094 -7.12500 8.21094 -6.78125  c
8.21094 -6.48958 8.31250 -6.23177 8.51562 -6.00781  c
8.71875 -5.78385 9.09115 -5.51562 9.63281 -5.20312  c
10.2422 -4.85938 l
10.9922 -4.43229 11.5156 -4.02865 11.8125 -3.64844  c
12.1094 -3.26823 12.2578 -2.81250 12.2578 -2.28125  c
12.2578 -1.53125 11.9818 -.927083 11.4297 -.468750  c
10.8776 -.0104167 10.1380 .218750 9.21094 .218750  c
h
13.9863 0.00000 m
13.9863 -8.67188 l
15.6895 -8.67188 l
18.0957 -1.96875 l
20.5645 -8.67188 l
22.0801 -8.67188 l
22.0801 0.00000 l
20.9395 0.00000 l
20.9395 -7.06250 l
18.5488 -.578125 l
17.3613 -.578125 l
15.0332 -7.07812 l
15.0332 0.00000 l
13.9863 0.00000 l
h
24.1973 0.00000 m
24.1973 -1.01562 l
24.5306 -1.79688 25.2077 -2.65104 26.2285 -3.57812  c
26.9004 -4.17188 l
27.7441 -4.94271 28.1660 -5.70833 28.1660 -6.46875  c
28.1660 -6.94792 28.0228 -7.32552 27.7363 -7.60156  c
27.4499 -7.87760 27.0514 -8.01562 26.5410 -8.01562  c
25.9368 -8.01562 25.2285 -7.78646 24.4160 -7.32812  c
24.4160 -8.34375 l
25.1868 -8.70833 25.9473 -8.89062 26.6973 -8.89062  c
27.5098 -8.89062 28.1634 -8.67188 28.6582 -8.23438  c
29.1530 -7.79688 29.4004 -7.21875 29.4004 -6.50000  c
29.4004 -5.97917 29.2754 -5.51562 29.0254 -5.10938  c
28.7754 -4.70312 28.3118 -4.21354 27.6348 -3.64062  c
27.1973 -3.26562 l
26.2702 -2.48438 25.7337 -1.73438 25.5879 -1.01562  c
29.3535 -1.01562 l
29.3535 0.00000 l
24.1973 0.00000 l
h
f
[ 1.25878 0.00000 0.00000 1.25878 93.5283 27.0919 ] defaultmatrix matrix concatmatrix setmatrix
.278431 .819608 .341176 RG
newpath
66.0858 78.0192 m
45.0000 99.1050 l
23.9142 78.0192 l
45.0000 56.9335 l
h
f
0.00000 0.00000 0.00000 RG
newpath
45.0000 55.5192 m
67.5000 78.0192 l
45.0000 100.519 l
22.5000 78.0192 l
h
66.0858 78.0192 m
45.0000 99.1050 l
23.9142 78.0192 l
45.0000 56.9335 l
h
f*
45.0000 78.0192 translate
1.00000 1.00000 scale
-22.0166 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
11.2422 .218750 m
10.0443 .218750 9.07812 -.197917 8.34375 -1.03125  c
7.60938 -1.86458 7.24219 -2.96875 7.24219 -4.34375  c
7.24219 -5.71875 7.60938 -6.82031 8.34375 -7.64844  c
9.07812 -8.47656 10.0651 -8.89062 11.3047 -8.89062  c
12.5234 -8.89062 13.5026 -8.47917 14.2422 -7.65625  c
14.9818 -6.83333 15.3516 -5.73438 15.3516 -4.35938  c
15.3516 -2.95312 14.9818 -1.83854 14.2422 -1.01562  c
13.5026 -.192708 12.5026 .218750 11.2422 .218750  c
h
11.2578 -.703125 m
12.1432 -.703125 12.8281 -1.02344 13.3125 -1.66406  c
13.7969 -2.30469 14.0391 -3.20312 14.0391 -4.35938  c
14.0391 -5.49479 13.7969 -6.38021 13.3125 -7.01562  c
12.8281 -7.65104 12.1589 -7.96875 11.3047 -7.96875  c
10.4401 -7.96875 9.76562 -7.64844 9.28125 -7.00781  c
8.79688 -6.36719 8.55469 -5.47917 8.55469 -4.34375  c
8.55469 -3.21875 8.79427 -2.33073 9.27344 -1.67969  c
9.75260 -1.02865 10.4141 -.703125 11.2578 -.703125  c
h
17.0801 0.00000 m
17.0801 -8.67188 l
18.2988 -8.67188 l
18.2988 -.921875 l
22.2051 -.921875 l
22.2051 0.00000 l
17.0801 0.00000 l
h
23.4785 0.00000 m
23.4785 -8.67188 l
26.1035 -8.67188 l
26.9368 -8.67188 27.5749 -8.48958 28.0176 -8.12500  c
28.4603 -7.76042 28.6816 -7.22396 28.6816 -6.51562  c
28.6816 -5.35938 28.0983 -4.54167 26.9316 -4.06250  c
29.8223 0.00000 l
28.3066 0.00000 l
25.8379 -3.67188 l
24.6973 -3.67188 l
24.6973 0.00000 l
23.4785 0.00000 l
h
24.6973 -4.59375 m
25.0879 -4.59375 l
26.6400 -4.59375 27.4160 -5.19792 27.4160 -6.40625  c
27.4160 -7.30208 26.7650 -7.75000 25.4629 -7.75000  c
24.6973 -7.75000 l
24.6973 -4.59375 l
h
30.9414 0.00000 m
30.9414 -1.01562 l
31.2747 -1.79688 31.9518 -2.65104 32.9727 -3.57812  c
33.6445 -4.17188 l
34.4883 -4.94271 34.9102 -5.70833 34.9102 -6.46875  c
34.9102 -6.94792 34.7669 -7.32552 34.4805 -7.60156  c
34.1940 -7.87760 33.7956 -8.01562 33.2852 -8.01562  c
32.6810 -8.01562 31.9727 -7.78646 31.1602 -7.32812  c
31.1602 -8.34375 l
31.9310 -8.70833 32.6914 -8.89062 33.4414 -8.89062  c
34.2539 -8.89062 34.9076 -8.67188 35.4023 -8.23438  c
35.8971 -7.79688 36.1445 -7.21875 36.1445 -6.50000  c
36.1445 -5.97917 36.0195 -5.51562 35.7695 -5.10938  c
35.5195 -4.70312 35.0560 -4.21354 34.3789 -3.64062  c
33.9414 -3.26562 l
33.0143 -2.48438 32.4779 -1.73438 32.3320 -1.01562  c
36.0977 -1.01562 l
36.0977 0.00000 l
30.9414 0.00000 l
h
38.6543 0.00000 m
38.6543 -8.67188 l
43.4980 -8.67188 l
43.4980 -7.75000 l
39.8730 -7.75000 l
39.8730 -4.96875 l
42.9043 -4.96875 l
42.9043 -4.06250 l
39.8730 -4.06250 l
39.8730 -.921875 l
43.7480 -.921875 l
43.7480 0.00000 l
38.6543 0.00000 l
h
f
[ 1.25878 0.00000 0.00000 1.25878 93.5283 27.0919 ] defaultmatrix matrix concatmatrix setmatrix
.0627451 .494118 .231373 RG
newpath
21.0858 104.000 m
0.00000 125.086 l
-21.0858 104.000 l
0.00000 82.9142 l
h
f
0.00000 0.00000 0.00000 RG
newpath
0.00000 81.5000 m
22.5000 104.000 l
0.00000 126.500 l
-22.5000 104.000 l
h
21.0858 104.000 m
0.00000 125.086 l
-21.0858 104.000 l
0.00000 82.9142 l
h
f*
0.00000 104.000 translate
1.00000 1.00000 scale
-22.9453 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.32812 -8.67188 l
6.68750 -1.96875 l
6.68750 -8.67188 l
7.75000 -8.67188 l
7.75000 0.00000 l
6.54688 0.00000 l
2.17188 -6.70312 l
2.17188 0.00000 l
1.12500 0.00000 l
h
9.99023 0.00000 m
9.99023 -8.67188 l
11.2090 -8.67188 l
11.2090 -5.01562 l
15.3340 -5.01562 l
15.3340 -8.67188 l
16.5684 -8.67188 l
16.5684 0.00000 l
15.3340 0.00000 l
15.3340 -4.09375 l
11.2090 -4.09375 l
11.2090 0.00000 l
9.99023 0.00000 l
h
18.8086 0.00000 m
18.8086 -8.67188 l
21.1680 -8.67188 l
22.2096 -8.67188 22.9596 -8.49479 23.4180 -8.14062  c
23.8763 -7.78646 24.1055 -7.20833 24.1055 -6.40625  c
24.1055 -5.47917 23.7930 -4.75521 23.1680 -4.23438  c
22.5430 -3.71354 21.6784 -3.45312 20.5742 -3.45312  c
20.0273 -3.45312 l
20.0273 0.00000 l
18.8086 0.00000 l
h
20.0273 -4.37500 m
20.5273 -4.37500 l
21.2565 -4.37500 21.8190 -4.54427 22.2148 -4.88281  c
22.6107 -5.22135 22.8086 -5.69792 22.8086 -6.31250  c
22.8086 -6.82292 22.6523 -7.19010 22.3398 -7.41406  c
22.0273 -7.63802 21.5065 -7.75000 20.7773 -7.75000  c
20.0273 -7.75000 l
20.0273 -4.37500 l
h
25.3164 0.00000 m
25.3164 -1.01562 l
25.6497 -1.79688 26.3268 -2.65104 27.3477 -3.57812  c
28.0195 -4.17188 l
28.8633 -4.94271 29.2852 -5.70833 29.2852 -6.46875  c
29.2852 -6.94792 29.1419 -7.32552 28.8555 -7.60156  c
28.5690 -7.87760 28.1706 -8.01562 27.6602 -8.01562  c
27.0560 -8.01562 26.3477 -7.78646 25.5352 -7.32812  c
25.5352 -8.34375 l
26.3060 -8.70833 27.0664 -8.89062 27.8164 -8.89062  c
28.6289 -8.89062 29.2826 -8.67188 29.7773 -8.23438  c
30.2721 -7.79688 30.5195 -7.21875 30.5195 -6.50000  c
30.5195 -5.97917 30.3945 -5.51562 30.1445 -5.10938  c
29.8945 -4.70312 29.4310 -4.21354 28.7539 -3.64062  c
28.3164 -3.26562 l
27.3893 -2.48438 26.8529 -1.73438 26.7070 -1.01562  c
30.4727 -1.01562 l
30.4727 0.00000 l
25.3164 0.00000 l
h
33.0293 0.00000 m
33.0293 -8.67188 l
34.2480 -8.67188 l
34.2480 -.921875 l
38.1543 -.921875 l
38.1543 0.00000 l
33.0293 0.00000 l
h
40.1152 0.00000 m
40.1152 -.875000 l
41.8496 -.875000 l
41.8496 -7.71875 l
40.1152 -7.28125 l
40.1152 -8.17188 l
43.0059 -8.89062 l
43.0059 -.875000 l
44.7402 -.875000 l
44.7402 0.00000 l
40.1152 0.00000 l
h
f
[ 1.25878 0.00000 0.00000 1.25878 93.5283 27.0919 ] defaultmatrix matrix concatmatrix setmatrix
.337255 .909804 .368627 RG
newpath
186.280 253.091 m
165.194 274.177 l
144.109 253.091 l
165.194 232.005 l
h
f
0.00000 0.00000 0.00000 RG
newpath
165.194 230.591 m
187.694 253.091 l
165.194 275.591 l
142.694 253.091 l
h
186.280 253.091 m
165.194 274.177 l
144.109 253.091 l
165.194 232.005 l
h
f*
165.194 253.091 translate
1.00000 1.00000 scale
-18.9844 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.37500 -8.67188 l
4.23958 -8.67188 4.90365 -8.50781 5.36719 -8.17969  c
5.83073 -7.85156 6.06250 -7.38021 6.06250 -6.76562  c
6.06250 -5.71354 5.46875 -4.96354 4.28125 -4.51562  c
5.69792 -4.08854 6.40625 -3.30729 6.40625 -2.17188  c
6.40625 -1.46354 6.17188 -.924479 5.70312 -.554688  c
5.23438 -.184896 4.55729 0.00000 3.67188 0.00000  c
1.12500 0.00000 l
h
2.34375 -.921875 m
2.59375 -.921875 l
3.48958 -.921875 4.07292 -.979167 4.34375 -1.09375  c
4.85417 -1.30208 5.10938 -1.69792 5.10938 -2.28125  c
5.10938 -2.80208 4.87760 -3.23177 4.41406 -3.57031  c
3.95052 -3.90885 3.37500 -4.07812 2.68750 -4.07812  c
2.34375 -4.07812 l
2.34375 -.921875 l
h
2.34375 -4.85938 m
2.73438 -4.85938 l
3.39062 -4.85938 3.89844 -5.00000 4.25781 -5.28125  c
4.61719 -5.56250 4.79688 -5.95833 4.79688 -6.46875  c
4.79688 -7.32292 4.13542 -7.75000 2.81250 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.85938 l
h
10.0898 0.00000 m
10.0898 -7.75000 l
7.01172 -7.75000 l
7.01172 -8.67188 l
14.3867 -8.67188 l
14.3867 -7.75000 l
11.3086 -7.75000 l
11.3086 0.00000 l
10.0898 0.00000 l
h
15.6152 0.00000 m
15.6152 -8.67188 l
17.8652 -8.67188 l
18.7298 -8.67188 19.3939 -8.50781 19.8574 -8.17969  c
20.3210 -7.85156 20.5527 -7.38021 20.5527 -6.76562  c
20.5527 -5.71354 19.9590 -4.96354 18.7715 -4.51562  c
20.1882 -4.08854 20.8965 -3.30729 20.8965 -2.17188  c
20.8965 -1.46354 20.6621 -.924479 20.1934 -.554688  c
19.7246 -.184896 19.0475 0.00000 18.1621 0.00000  c
15.6152 0.00000 l
h
16.8340 -.921875 m
17.0840 -.921875 l
17.9798 -.921875 18.5632 -.979167 18.8340 -1.09375  c
19.3444 -1.30208 19.5996 -1.69792 19.5996 -2.28125  c
19.5996 -2.80208 19.3678 -3.23177 18.9043 -3.57031  c
18.4408 -3.90885 17.8652 -4.07812 17.1777 -4.07812  c
16.8340 -4.07812 l
16.8340 -.921875 l
h
16.8340 -4.85938 m
17.2246 -4.85938 l
17.8809 -4.85938 18.3887 -5.00000 18.7480 -5.28125  c
19.1074 -5.56250 19.2871 -5.95833 19.2871 -6.46875  c
19.2871 -7.32292 18.6257 -7.75000 17.3027 -7.75000  c
16.8340 -7.75000 l
16.8340 -4.85938 l
h
22.5176 0.00000 m
22.5176 -8.67188 l
25.3926 -8.67188 l
26.2572 -8.67188 26.9525 -8.57552 27.4785 -8.38281  c
28.0046 -8.19010 28.4603 -7.86458 28.8457 -7.40625  c
29.4603 -6.68750 29.7676 -5.73438 29.7676 -4.54688  c
29.7676 -3.09896 29.3874 -1.97917 28.6270 -1.18750  c
27.8665 -.395833 26.7936 0.00000 25.4082 0.00000  c
22.5176 0.00000 l
h
23.7363 -.921875 m
25.3145 -.921875 l
26.4395 -.921875 27.2363 -1.22396 27.7051 -1.82812  c
28.2155 -2.47396 28.4707 -3.33854 28.4707 -4.42188  c
28.4707 -5.44271 28.2207 -6.24479 27.7207 -6.82812  c
27.4186 -7.18229 27.0592 -7.42448 26.6426 -7.55469  c
26.2259 -7.68490 25.5957 -7.75000 24.7520 -7.75000  c
23.7363 -7.75000 l
23.7363 -.921875 l
h
31.3809 0.00000 m
31.3809 -1.01562 l
31.7142 -1.79688 32.3913 -2.65104 33.4121 -3.57812  c
34.0840 -4.17188 l
34.9277 -4.94271 35.3496 -5.70833 35.3496 -6.46875  c
35.3496 -6.94792 35.2064 -7.32552 34.9199 -7.60156  c
34.6335 -7.87760 34.2350 -8.01562 33.7246 -8.01562  c
33.1204 -8.01562 32.4121 -7.78646 31.5996 -7.32812  c
31.5996 -8.34375 l
32.3704 -8.70833 33.1309 -8.89062 33.8809 -8.89062  c
34.6934 -8.89062 35.3470 -8.67188 35.8418 -8.23438  c
36.3366 -7.79688 36.5840 -7.21875 36.5840 -6.50000  c
36.5840 -5.97917 36.4590 -5.51562 36.2090 -5.10938  c
35.9590 -4.70312 35.4954 -4.21354 34.8184 -3.64062  c
34.3809 -3.26562 l
33.4538 -2.48438 32.9173 -1.73438 32.7715 -1.01562  c
36.5371 -1.01562 l
36.5371 0.00000 l
31.3809 0.00000 l
h
f
[ 1.25878 0.00000 0.00000 1.25878 93.5283 27.0919 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
