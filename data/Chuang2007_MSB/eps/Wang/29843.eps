%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:46:59 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.01765 0.00000 0.00000 1.01765 74.4140 21.9164 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
196.144 39.4830 m
224.675 15.4568 l
S
newpath
98.7703 121.481 m
70.2391 145.508 l
S
newpath
161.723 68.4691 m
133.191 92.4953 l
S
newpath
51.1071 182.418 m
47.9216 219.582 l
S
newpath
37.5596 301.201 m
42.8243 264.275 l
S
newpath
10.3020 109.263 m
38.5356 142.790 l
S
1.00000 1.00000 1.00000 RG
newpath
263.385 .963774 m
263.385 12.8379 253.759 22.4638 241.885 22.4638  c
230.011 22.4638 220.385 12.8379 220.385 .963774  c
220.385 -10.9103 230.011 -20.5362 241.885 -20.5362  c
253.759 -20.5362 263.385 -10.9103 263.385 .963774  c
h
f
0.00000 0.00000 0.00000 RG
newpath
264.385 .963774 m
264.385 13.3902 254.312 23.4638 241.885 23.4638  c
229.459 23.4638 219.385 13.3902 219.385 .963774  c
219.385 -11.4626 229.459 -21.5362 241.885 -21.5362  c
254.312 -21.5362 264.385 -11.4626 264.385 .963774  c
h
263.385 .963774 m
263.385 12.8379 253.759 22.4638 241.885 22.4638  c
230.011 22.4638 220.385 12.8379 220.385 .963774  c
220.385 -10.9103 230.011 -20.5362 241.885 -20.5362  c
253.759 -20.5362 263.385 -10.9103 263.385 .963774  c
h
f*
241.885 .963774 translate
1.00000 1.00000 scale
-18.0264 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
7.58789 0.00000 m
7.58789 -8.67188 l
12.4316 -8.67188 l
12.4316 -7.75000 l
8.80664 -7.75000 l
8.80664 -4.96875 l
11.8379 -4.96875 l
11.8379 -4.06250 l
8.80664 -4.06250 l
8.80664 -.921875 l
12.6816 -.921875 l
12.6816 0.00000 l
7.58789 0.00000 l
h
14.0918 0.00000 m
14.0918 -8.67188 l
15.2949 -8.67188 l
19.6543 -1.96875 l
19.6543 -8.67188 l
20.7168 -8.67188 l
20.7168 0.00000 l
19.5137 0.00000 l
15.1387 -6.70312 l
15.1387 0.00000 l
14.0918 0.00000 l
h
22.9570 0.00000 m
22.9570 -8.67188 l
25.3164 -8.67188 l
26.3581 -8.67188 27.1081 -8.49479 27.5664 -8.14062  c
28.0247 -7.78646 28.2539 -7.20833 28.2539 -6.40625  c
28.2539 -5.47917 27.9414 -4.75521 27.3164 -4.23438  c
26.6914 -3.71354 25.8268 -3.45312 24.7227 -3.45312  c
24.1758 -3.45312 l
24.1758 0.00000 l
22.9570 0.00000 l
h
24.1758 -4.37500 m
24.6758 -4.37500 l
25.4049 -4.37500 25.9674 -4.54427 26.3633 -4.88281  c
26.7591 -5.22135 26.9570 -5.69792 26.9570 -6.31250  c
26.9570 -6.82292 26.8008 -7.19010 26.4883 -7.41406  c
26.1758 -7.63802 25.6549 -7.75000 24.9258 -7.75000  c
24.1758 -7.75000 l
24.1758 -4.37500 l
h
30.2773 0.00000 m
30.2773 -.875000 l
32.0117 -.875000 l
32.0117 -7.71875 l
30.2773 -7.28125 l
30.2773 -8.17188 l
33.1680 -8.89062 l
33.1680 -.875000 l
34.9023 -.875000 l
34.9023 0.00000 l
30.2773 0.00000 l
h
f
[ 1.01765 0.00000 0.00000 1.01765 74.4140 21.9164 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .662745 .462745 RG
newpath
137.481 106.988 m
137.481 118.862 127.855 128.488 115.981 128.488  c
104.107 128.488 94.4809 118.862 94.4809 106.988  c
94.4809 95.1143 104.107 85.4884 115.981 85.4884  c
127.855 85.4884 137.481 95.1143 137.481 106.988  c
h
f
0.00000 0.00000 0.00000 RG
newpath
138.481 106.988 m
138.481 119.415 128.407 129.488 115.981 129.488  c
103.554 129.488 93.4809 119.415 93.4809 106.988  c
93.4809 94.5620 103.554 84.4884 115.981 84.4884  c
128.407 84.4884 138.481 94.5620 138.481 106.988  c
h
137.481 106.988 m
137.481 118.862 127.855 128.488 115.981 128.488  c
104.107 128.488 94.4809 118.862 94.4809 106.988  c
94.4809 95.1143 104.107 85.4884 115.981 85.4884  c
127.855 85.4884 137.481 95.1143 137.481 106.988  c
h
f*
115.981 106.988 translate
1.00000 1.00000 scale
-21.0117 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
7.50977 -8.67188 m
8.74414 -8.67188 l
8.74414 -3.20312 l
8.74414 -2.32812 8.90560 -1.69271 9.22852 -1.29688  c
9.55143 -.901042 10.0618 -.703125 10.7598 -.703125  c
11.4473 -.703125 11.9342 -.890625 12.2207 -1.26562  c
12.5072 -1.64062 12.6504 -2.27083 12.6504 -3.15625  c
12.6504 -8.67188 l
13.7285 -8.67188 l
13.7285 -3.17188 l
13.7285 -1.99479 13.4863 -1.13542 13.0020 -.593750  c
12.5176 -.0520833 11.7441 .218750 10.6816 .218750  c
9.59831 .218750 8.79883 -.0598958 8.28320 -.617188  c
7.76758 -1.17448 7.50977 -2.04167 7.50977 -3.21875  c
7.50977 -8.67188 l
h
15.9023 0.00000 m
15.9023 -8.67188 l
17.6055 -8.67188 l
20.0117 -1.96875 l
22.4805 -8.67188 l
23.9961 -8.67188 l
23.9961 0.00000 l
22.8555 0.00000 l
22.8555 -7.06250 l
20.4648 -.578125 l
19.2773 -.578125 l
16.9492 -7.07812 l
16.9492 0.00000 l
15.9023 0.00000 l
h
29.7227 .218750 m
28.5247 .218750 27.5586 -.197917 26.8242 -1.03125  c
26.0898 -1.86458 25.7227 -2.96875 25.7227 -4.34375  c
25.7227 -5.71875 26.0898 -6.82031 26.8242 -7.64844  c
27.5586 -8.47656 28.5456 -8.89062 29.7852 -8.89062  c
31.0039 -8.89062 31.9831 -8.47917 32.7227 -7.65625  c
33.4622 -6.83333 33.8320 -5.73438 33.8320 -4.35938  c
33.8320 -2.95312 33.4622 -1.83854 32.7227 -1.01562  c
31.9831 -.192708 30.9831 .218750 29.7227 .218750  c
h
29.7383 -.703125 m
30.6237 -.703125 31.3086 -1.02344 31.7930 -1.66406  c
32.2773 -2.30469 32.5195 -3.20312 32.5195 -4.35938  c
32.5195 -5.49479 32.2773 -6.38021 31.7930 -7.01562  c
31.3086 -7.65104 30.6393 -7.96875 29.7852 -7.96875  c
28.9206 -7.96875 28.2461 -7.64844 27.7617 -7.00781  c
27.2773 -6.36719 27.0352 -5.47917 27.0352 -4.34375  c
27.0352 -3.21875 27.2747 -2.33073 27.7539 -1.67969  c
28.2331 -1.02865 28.8945 -.703125 29.7383 -.703125  c
h
36.2480 0.00000 m
36.2480 -.875000 l
37.9824 -.875000 l
37.9824 -7.71875 l
36.2480 -7.28125 l
36.2480 -8.17188 l
39.1387 -8.89062 l
39.1387 -.875000 l
40.8730 -.875000 l
40.8730 0.00000 l
36.2480 0.00000 l
h
f
[ 1.01765 0.00000 0.00000 1.01765 74.4140 21.9164 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .678431 .478431 RG
newpath
67.5000 242.000 m
67.5000 253.874 57.8741 263.500 46.0000 263.500  c
34.1259 263.500 24.5000 253.874 24.5000 242.000  c
24.5000 230.126 34.1259 220.500 46.0000 220.500  c
57.8741 220.500 67.5000 230.126 67.5000 242.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
68.5000 242.000 m
68.5000 254.426 58.4264 264.500 46.0000 264.500  c
33.5736 264.500 23.5000 254.426 23.5000 242.000  c
23.5000 229.574 33.5736 219.500 46.0000 219.500  c
58.4264 219.500 68.5000 229.574 68.5000 242.000  c
h
67.5000 242.000 m
67.5000 253.874 57.8741 263.500 46.0000 263.500  c
34.1259 263.500 24.5000 253.874 24.5000 242.000  c
24.5000 230.126 34.1259 220.500 46.0000 220.500  c
57.8741 220.500 67.5000 230.126 67.5000 242.000  c
h
f*
46.0000 242.000 translate
1.00000 1.00000 scale
-22.7432 4.42090 translate
newpath
3.18750 0.00000 m
3.18750 -7.75000 l
.109375 -7.75000 l
.109375 -8.67188 l
7.48438 -8.67188 l
7.48438 -7.75000 l
4.40625 -7.75000 l
4.40625 0.00000 l
3.18750 0.00000 l
h
10.4004 .218750 m
9.82747 .218750 9.08789 .0885417 8.18164 -.171875  c
8.18164 -1.39062 l
9.15039 -.932292 9.95247 -.703125 10.5879 -.703125  c
11.0671 -.703125 11.4551 -.830729 11.7520 -1.08594  c
12.0488 -1.34115 12.1973 -1.67708 12.1973 -2.09375  c
12.1973 -2.42708 12.1009 -2.71354 11.9082 -2.95312  c
11.7155 -3.19271 11.3587 -3.45833 10.8379 -3.75000  c
10.2441 -4.09375 l
9.50456 -4.52083 8.98372 -4.91927 8.68164 -5.28906  c
8.37956 -5.65885 8.22852 -6.09375 8.22852 -6.59375  c
8.22852 -7.26042 8.47070 -7.80990 8.95508 -8.24219  c
9.43945 -8.67448 10.0566 -8.89062 10.8066 -8.89062  c
11.4733 -8.89062 12.1764 -8.78125 12.9160 -8.56250  c
12.9160 -7.43750 l
11.9993 -7.79167 11.3171 -7.96875 10.8691 -7.96875  c
10.4421 -7.96875 10.0905 -7.85677 9.81445 -7.63281  c
9.53841 -7.40885 9.40039 -7.12500 9.40039 -6.78125  c
9.40039 -6.48958 9.50195 -6.23177 9.70508 -6.00781  c
9.90820 -5.78385 10.2806 -5.51562 10.8223 -5.20312  c
11.4316 -4.85938 l
12.1816 -4.43229 12.7051 -4.02865 13.0020 -3.64844  c
13.2988 -3.26823 13.4473 -2.81250 13.4473 -2.28125  c
13.4473 -1.53125 13.1712 -.927083 12.6191 -.468750  c
12.0671 -.0104167 11.3275 .218750 10.4004 .218750  c
h
21.6914 -.234375 m
20.6393 .0677083 19.7227 .218750 18.9414 .218750  c
17.5560 .218750 16.4961 -.174479 15.7617 -.960938  c
15.0273 -1.74740 14.6602 -2.87500 14.6602 -4.34375  c
14.6602 -5.78125 15.0326 -6.89844 15.7773 -7.69531  c
16.5221 -8.49219 17.5716 -8.89062 18.9258 -8.89062  c
19.8008 -8.89062 20.7174 -8.76042 21.6758 -8.50000  c
21.6758 -7.35938 l
20.4779 -7.76562 19.5612 -7.96875 18.9258 -7.96875  c
17.9883 -7.96875 17.2617 -7.65104 16.7461 -7.01562  c
16.2305 -6.38021 15.9727 -5.48438 15.9727 -4.32812  c
15.9727 -3.18229 16.2487 -2.29167 16.8008 -1.65625  c
17.3529 -1.02083 18.1289 -.703125 19.1289 -.703125  c
19.5456 -.703125 19.9883 -.776042 20.4570 -.921875  c
20.4570 -3.75000 l
21.6914 -3.75000 l
21.6914 -.234375 l
h
24.5352 0.00000 m
24.5352 -.875000 l
26.2695 -.875000 l
26.2695 -7.71875 l
24.5352 -7.28125 l
24.5352 -8.17188 l
27.4258 -8.89062 l
27.4258 -.875000 l
29.1602 -.875000 l
29.1602 0.00000 l
24.5352 0.00000 l
h
34.0762 .218750 m
33.1803 .218750 32.4564 -.203125 31.9043 -1.04688  c
31.3522 -1.89062 31.0762 -2.98958 31.0762 -4.34375  c
31.0762 -5.70833 31.3548 -6.80729 31.9121 -7.64062  c
32.4694 -8.47396 33.2012 -8.89062 34.1074 -8.89062  c
35.0137 -8.89062 35.7454 -8.47396 36.3027 -7.64062  c
36.8600 -6.80729 37.1387 -5.71354 37.1387 -4.35938  c
37.1387 -2.97396 36.8600 -1.86458 36.3027 -1.03125  c
35.7454 -.197917 35.0033 .218750 34.0762 .218750  c
h
34.0918 -.656250 m
35.3105 -.656250 35.9199 -1.89583 35.9199 -4.37500  c
35.9199 -6.80208 35.3158 -8.01562 34.1074 -8.01562  c
32.9095 -8.01562 32.3105 -6.79167 32.3105 -4.34375  c
32.3105 -1.88542 32.9043 -.656250 34.0918 -.656250  c
h
39.7109 0.00000 m
39.7109 -.875000 l
41.4453 -.875000 l
41.4453 -7.71875 l
39.7109 -7.28125 l
39.7109 -8.17188 l
42.6016 -8.89062 l
42.6016 -.875000 l
44.3359 -.875000 l
44.3359 0.00000 l
39.7109 0.00000 l
h
f
[ 1.01765 0.00000 0.00000 1.01765 74.4140 21.9164 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .949020 .749020 RG
newpath
74.5286 160.001 m
74.5286 171.875 64.9027 181.501 53.0286 181.501  c
41.1545 181.501 31.5286 171.875 31.5286 160.001  c
31.5286 148.127 41.1545 138.501 53.0286 138.501  c
64.9027 138.501 74.5286 148.127 74.5286 160.001  c
h
f
0.00000 0.00000 0.00000 RG
newpath
75.5286 160.001 m
75.5286 172.427 65.4550 182.501 53.0286 182.501  c
40.6022 182.501 30.5286 172.427 30.5286 160.001  c
30.5286 147.574 40.6022 137.501 53.0286 137.501  c
65.4550 137.501 75.5286 147.574 75.5286 160.001  c
h
74.5286 160.001 m
74.5286 171.875 64.9027 181.501 53.0286 181.501  c
41.1545 181.501 31.5286 171.875 31.5286 160.001  c
31.5286 148.127 41.1545 138.501 53.0286 138.501  c
64.9027 138.501 74.5286 148.127 74.5286 160.001  c
h
f*
53.0286 160.001 translate
1.00000 1.00000 scale
-18.6240 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.82812 -8.67188 l
5.23438 -1.96875 l
7.70312 -8.67188 l
9.21875 -8.67188 l
9.21875 0.00000 l
8.07812 0.00000 l
8.07812 -7.06250 l
5.68750 -.578125 l
4.50000 -.578125 l
2.17188 -7.07812 l
2.17188 0.00000 l
1.12500 0.00000 l
h
11.4609 0.00000 m
11.4609 -8.67188 l
14.3359 -8.67188 l
15.2005 -8.67188 15.8958 -8.57552 16.4219 -8.38281  c
16.9479 -8.19010 17.4036 -7.86458 17.7891 -7.40625  c
18.4036 -6.68750 18.7109 -5.73438 18.7109 -4.54688  c
18.7109 -3.09896 18.3307 -1.97917 17.5703 -1.18750  c
16.8099 -.395833 15.7370 0.00000 14.3516 0.00000  c
11.4609 0.00000 l
h
12.6797 -.921875 m
14.2578 -.921875 l
15.3828 -.921875 16.1797 -1.22396 16.6484 -1.82812  c
17.1589 -2.47396 17.4141 -3.33854 17.4141 -4.42188  c
17.4141 -5.44271 17.1641 -6.24479 16.6641 -6.82812  c
16.3620 -7.18229 16.0026 -7.42448 15.5859 -7.55469  c
15.1693 -7.68490 14.5391 -7.75000 13.6953 -7.75000  c
12.6797 -7.75000 l
12.6797 -.921875 l
h
20.4492 0.00000 m
20.4492 -8.67188 l
22.1523 -8.67188 l
24.5586 -1.96875 l
27.0273 -8.67188 l
28.5430 -8.67188 l
28.5430 0.00000 l
27.4023 0.00000 l
27.4023 -7.06250 l
25.0117 -.578125 l
23.8242 -.578125 l
21.4961 -7.07812 l
21.4961 0.00000 l
20.4492 0.00000 l
h
30.6602 0.00000 m
30.6602 -1.01562 l
30.9935 -1.79688 31.6706 -2.65104 32.6914 -3.57812  c
33.3633 -4.17188 l
34.2070 -4.94271 34.6289 -5.70833 34.6289 -6.46875  c
34.6289 -6.94792 34.4857 -7.32552 34.1992 -7.60156  c
33.9128 -7.87760 33.5143 -8.01562 33.0039 -8.01562  c
32.3997 -8.01562 31.6914 -7.78646 30.8789 -7.32812  c
30.8789 -8.34375 l
31.6497 -8.70833 32.4102 -8.89062 33.1602 -8.89062  c
33.9727 -8.89062 34.6263 -8.67188 35.1211 -8.23438  c
35.6159 -7.79688 35.8633 -7.21875 35.8633 -6.50000  c
35.8633 -5.97917 35.7383 -5.51562 35.4883 -5.10938  c
35.2383 -4.70312 34.7747 -4.21354 34.0977 -3.64062  c
33.6602 -3.26562 l
32.7331 -2.48438 32.1966 -1.73438 32.0508 -1.01562  c
35.8164 -1.01562 l
35.8164 0.00000 l
30.6602 0.00000 l
h
f
[ 1.01765 0.00000 0.00000 1.01765 74.4140 21.9164 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .945098 .745098 RG
newpath
200.433 53.9761 m
200.433 65.8502 190.807 75.4761 178.933 75.4761  c
167.059 75.4761 157.433 65.8502 157.433 53.9761  c
157.433 42.1020 167.059 32.4761 178.933 32.4761  c
190.807 32.4761 200.433 42.1020 200.433 53.9761  c
h
f
0.00000 0.00000 0.00000 RG
newpath
201.433 53.9761 m
201.433 66.4025 191.360 76.4761 178.933 76.4761  c
166.507 76.4761 156.433 66.4025 156.433 53.9761  c
156.433 41.5497 166.507 31.4761 178.933 31.4761  c
191.360 31.4761 201.433 41.5497 201.433 53.9761  c
h
200.433 53.9761 m
200.433 65.8502 190.807 75.4761 178.933 75.4761  c
167.059 75.4761 157.433 65.8502 157.433 53.9761  c
157.433 42.1020 167.059 32.4761 178.933 32.4761  c
190.807 32.4761 200.433 42.1020 200.433 53.9761  c
h
f*
178.933 53.9761 translate
1.00000 1.00000 scale
-21.0117 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
7.50977 -8.67188 m
8.74414 -8.67188 l
8.74414 -3.20312 l
8.74414 -2.32812 8.90560 -1.69271 9.22852 -1.29688  c
9.55143 -.901042 10.0618 -.703125 10.7598 -.703125  c
11.4473 -.703125 11.9342 -.890625 12.2207 -1.26562  c
12.5072 -1.64062 12.6504 -2.27083 12.6504 -3.15625  c
12.6504 -8.67188 l
13.7285 -8.67188 l
13.7285 -3.17188 l
13.7285 -1.99479 13.4863 -1.13542 13.0020 -.593750  c
12.5176 -.0520833 11.7441 .218750 10.6816 .218750  c
9.59831 .218750 8.79883 -.0598958 8.28320 -.617188  c
7.76758 -1.17448 7.50977 -2.04167 7.50977 -3.21875  c
7.50977 -8.67188 l
h
15.9023 0.00000 m
15.9023 -8.67188 l
17.6055 -8.67188 l
20.0117 -1.96875 l
22.4805 -8.67188 l
23.9961 -8.67188 l
23.9961 0.00000 l
22.8555 0.00000 l
22.8555 -7.06250 l
20.4648 -.578125 l
19.2773 -.578125 l
16.9492 -7.07812 l
16.9492 0.00000 l
15.9023 0.00000 l
h
29.7227 .218750 m
28.5247 .218750 27.5586 -.197917 26.8242 -1.03125  c
26.0898 -1.86458 25.7227 -2.96875 25.7227 -4.34375  c
25.7227 -5.71875 26.0898 -6.82031 26.8242 -7.64844  c
27.5586 -8.47656 28.5456 -8.89062 29.7852 -8.89062  c
31.0039 -8.89062 31.9831 -8.47917 32.7227 -7.65625  c
33.4622 -6.83333 33.8320 -5.73438 33.8320 -4.35938  c
33.8320 -2.95312 33.4622 -1.83854 32.7227 -1.01562  c
31.9831 -.192708 30.9831 .218750 29.7227 .218750  c
h
29.7383 -.703125 m
30.6237 -.703125 31.3086 -1.02344 31.7930 -1.66406  c
32.2773 -2.30469 32.5195 -3.20312 32.5195 -4.35938  c
32.5195 -5.49479 32.2773 -6.38021 31.7930 -7.01562  c
31.3086 -7.65104 30.6393 -7.96875 29.7852 -7.96875  c
28.9206 -7.96875 28.2461 -7.64844 27.7617 -7.00781  c
27.2773 -6.36719 27.0352 -5.47917 27.0352 -4.34375  c
27.0352 -3.21875 27.2747 -2.33073 27.7539 -1.67969  c
28.2331 -1.02865 28.8945 -.703125 29.7383 -.703125  c
h
35.6543 -.0625000 m
35.6543 -1.14062 l
36.4876 -.817708 37.1387 -.656250 37.6074 -.656250  c
38.1595 -.656250 38.6100 -.817708 38.9590 -1.14062  c
39.3079 -1.46354 39.4824 -1.88021 39.4824 -2.39062  c
39.4824 -3.60938 38.6283 -4.21875 36.9199 -4.21875  c
36.4512 -4.21875 l
36.4512 -5.00000 l
36.8574 -5.00000 l
38.4616 -5.00000 39.2637 -5.56250 39.2637 -6.68750  c
39.2637 -7.57292 38.7376 -8.01562 37.6855 -8.01562  c
37.1022 -8.01562 36.4668 -7.85417 35.7793 -7.53125  c
35.7793 -8.54688 l
36.4564 -8.77604 37.1178 -8.89062 37.7637 -8.89062  c
39.5345 -8.89062 40.4199 -8.21875 40.4199 -6.87500  c
40.4199 -5.85417 39.8158 -5.13021 38.6074 -4.70312  c
40.0137 -4.38021 40.7168 -3.61458 40.7168 -2.40625  c
40.7168 -1.58333 40.4460 -.940104 39.9043 -.476562  c
39.3626 -.0130208 38.6230 .218750 37.6855 .218750  c
37.1439 .218750 36.4668 .125000 35.6543 -.0625000  c
h
f
[ 1.01765 0.00000 0.00000 1.01765 74.4140 21.9164 ] defaultmatrix matrix concatmatrix setmatrix
.745098 1.00000 .627451 RG
newpath
55.8839 323.476 m
55.8839 335.350 46.2580 344.976 34.3839 344.976  c
22.5098 344.976 12.8839 335.350 12.8839 323.476  c
12.8839 311.602 22.5098 301.976 34.3839 301.976  c
46.2580 301.976 55.8839 311.602 55.8839 323.476  c
h
f
0.00000 0.00000 0.00000 RG
newpath
56.8839 323.476 m
56.8839 335.903 46.8103 345.976 34.3839 345.976  c
21.9575 345.976 11.8839 335.903 11.8839 323.476  c
11.8839 311.050 21.9575 300.976 34.3839 300.976  c
46.8103 300.976 56.8839 311.050 56.8839 323.476  c
h
55.8839 323.476 m
55.8839 335.350 46.2580 344.976 34.3839 344.976  c
22.5098 344.976 12.8839 335.350 12.8839 323.476  c
12.8839 311.602 22.5098 301.976 34.3839 301.976  c
46.2580 301.976 55.8839 311.602 55.8839 323.476  c
h
f*
34.3839 323.476 translate
1.00000 1.00000 scale
-15.2900 4.42090 translate
newpath
5.51562 -3.31250 m
4.03125 -7.06250 l
2.56250 -3.31250 l
5.51562 -3.31250 l
h
6.81250 0.00000 m
5.87500 -2.40625 l
2.20312 -2.40625 l
1.25000 0.00000 l
.0937500 0.00000 l
3.54688 -8.67188 l
4.76562 -8.67188 l
8.14062 0.00000 l
6.81250 0.00000 l
h
13.7949 -3.31250 m
12.3105 -7.06250 l
10.8418 -3.31250 l
13.7949 -3.31250 l
h
15.0918 0.00000 m
14.1543 -2.40625 l
10.4824 -2.40625 l
9.52930 0.00000 l
8.37305 0.00000 l
11.8262 -8.67188 l
13.0449 -8.67188 l
16.4199 0.00000 l
15.0918 0.00000 l
h
19.7461 0.00000 m
19.7461 -7.75000 l
16.6680 -7.75000 l
16.6680 -8.67188 l
24.0430 -8.67188 l
24.0430 -7.75000 l
20.9648 -7.75000 l
20.9648 0.00000 l
19.7461 0.00000 l
h
25.2715 0.00000 m
25.2715 -8.67188 l
30.1152 -8.67188 l
30.1152 -7.75000 l
26.4902 -7.75000 l
26.4902 -4.84375 l
29.5371 -4.84375 l
29.5371 -3.93750 l
26.4902 -3.93750 l
26.4902 0.00000 l
25.2715 0.00000 l
h
f
[ 1.01765 0.00000 0.00000 1.01765 74.4140 21.9164 ] defaultmatrix matrix concatmatrix setmatrix
.960784 .317647 .200000 RG
newpath
21.1021 97.0484 m
.0163040 118.134 l
-21.0695 97.0484 l
.0163040 75.9626 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.0163040 74.5484 m
22.5163 97.0484 l
.0163040 119.548 l
-22.4837 97.0484 l
h
21.1021 97.0484 m
.0163040 118.134 l
-21.0695 97.0484 l
.0163040 75.9626 l
h
f*
.0163040 97.0484 translate
1.00000 1.00000 scale
-17.2881 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -5.01562 l
6.46875 -5.01562 l
6.46875 -8.67188 l
7.70312 -8.67188 l
7.70312 0.00000 l
6.46875 0.00000 l
6.46875 -4.09375 l
2.34375 -4.09375 l
2.34375 0.00000 l
1.12500 0.00000 l
h
9.92773 0.00000 m
9.92773 -8.67188 l
11.1621 -8.67188 l
11.1621 0.00000 l
9.92773 0.00000 l
h
13.4004 0.00000 m
13.4004 -8.67188 l
18.2441 -8.67188 l
18.2441 -7.75000 l
14.6191 -7.75000 l
14.6191 -4.84375 l
17.6660 -4.84375 l
17.6660 -3.93750 l
14.6191 -3.93750 l
14.6191 0.00000 l
13.4004 0.00000 l
h
20.5215 0.00000 m
20.5215 -.875000 l
22.2559 -.875000 l
22.2559 -7.71875 l
20.5215 -7.28125 l
20.5215 -8.17188 l
23.4121 -8.89062 l
23.4121 -.875000 l
25.1465 -.875000 l
25.1465 0.00000 l
20.5215 0.00000 l
h
31.8125 -3.31250 m
30.3281 -7.06250 l
28.8594 -3.31250 l
31.8125 -3.31250 l
h
33.1094 0.00000 m
32.1719 -2.40625 l
28.5000 -2.40625 l
27.5469 0.00000 l
26.3906 0.00000 l
29.8438 -8.67188 l
31.0625 -8.67188 l
34.4375 0.00000 l
33.1094 0.00000 l
h
f
[ 1.01765 0.00000 0.00000 1.01765 74.4140 21.9164 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
