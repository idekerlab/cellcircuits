%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 10:46:49 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.4023 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
106.589 68.9160 m
101.269 88.7690 l
S
newpath
22.3899 75.0058 m
93.5983 55.9256 l
S
newpath
57.0807 105.434 m
100.093 62.4208 l
S
newpath
86.7391 26.5664 m
100.093 39.9208 l
S
newpath
37.2191 31.3092 m
93.5983 46.4160 l
S
newpath
186.678 11.3130 m
126.058 43.3855 l
S
newpath
196.514 48.0215 m
133.041 50.3685 l
S
newpath
22.3899 86.6527 m
78.7690 101.759 l
S
newpath
62.9041 115.520 m
78.7690 111.269 l
S
newpath
31.3957 41.3957 m
85.2642 95.2642 l
S
newpath
9.66234 47.2191 m
6.47996 59.0959 l
S
newpath
21.3092 47.2191 m
35.3473 99.6101 l
S
newpath
49.0959 16.4800 m
37.2191 19.6623 l
S
newpath
25.2609 105.434 m
16.5664 96.7391 l
S
.996078 .392157 .200000 RG
newpath
132.429 51.1708 m
111.343 72.2565 l
90.2577 51.1708 l
111.343 30.0850 l
h
f
0.00000 0.00000 0.00000 RG
newpath
111.343 28.6708 m
133.843 51.1708 l
111.343 73.6708 l
88.8435 51.1708 l
h
132.429 51.1708 m
111.343 72.2565 l
90.2577 51.1708 l
111.343 30.0850 l
h
f*
111.343 51.1708 translate
1.00000 1.00000 scale
-16.6377 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
7.57227 0.00000 m
7.57227 -8.67188 l
8.80664 -8.67188 l
8.80664 0.00000 l
7.57227 0.00000 l
h
11.0449 0.00000 m
11.0449 -8.67188 l
12.2480 -8.67188 l
16.6074 -1.96875 l
16.6074 -8.67188 l
17.6699 -8.67188 l
17.6699 0.00000 l
16.4668 0.00000 l
12.0918 -6.70312 l
12.0918 0.00000 l
11.0449 0.00000 l
h
20.0039 -.0625000 m
20.0039 -1.14062 l
20.8372 -.817708 21.4883 -.656250 21.9570 -.656250  c
22.5091 -.656250 22.9596 -.817708 23.3086 -1.14062  c
23.6576 -1.46354 23.8320 -1.88021 23.8320 -2.39062  c
23.8320 -3.60938 22.9779 -4.21875 21.2695 -4.21875  c
20.8008 -4.21875 l
20.8008 -5.00000 l
21.2070 -5.00000 l
22.8112 -5.00000 23.6133 -5.56250 23.6133 -6.68750  c
23.6133 -7.57292 23.0872 -8.01562 22.0352 -8.01562  c
21.4518 -8.01562 20.8164 -7.85417 20.1289 -7.53125  c
20.1289 -8.54688 l
20.8060 -8.77604 21.4674 -8.89062 22.1133 -8.89062  c
23.8841 -8.89062 24.7695 -8.21875 24.7695 -6.87500  c
24.7695 -5.85417 24.1654 -5.13021 22.9570 -4.70312  c
24.3633 -4.38021 25.0664 -3.61458 25.0664 -2.40625  c
25.0664 -1.58333 24.7956 -.940104 24.2539 -.476562  c
23.7122 -.0130208 22.9727 .218750 22.0352 .218750  c
21.4935 .218750 20.8164 .125000 20.0039 -.0625000  c
h
27.4980 0.00000 m
27.4980 -8.67188 l
29.7480 -8.67188 l
30.6126 -8.67188 31.2767 -8.50781 31.7402 -8.17969  c
32.2038 -7.85156 32.4355 -7.38021 32.4355 -6.76562  c
32.4355 -5.71354 31.8418 -4.96354 30.6543 -4.51562  c
32.0710 -4.08854 32.7793 -3.30729 32.7793 -2.17188  c
32.7793 -1.46354 32.5449 -.924479 32.0762 -.554688  c
31.6074 -.184896 30.9303 0.00000 30.0449 0.00000  c
27.4980 0.00000 l
h
28.7168 -.921875 m
28.9668 -.921875 l
29.8626 -.921875 30.4460 -.979167 30.7168 -1.09375  c
31.2272 -1.30208 31.4824 -1.69792 31.4824 -2.28125  c
31.4824 -2.80208 31.2507 -3.23177 30.7871 -3.57031  c
30.3236 -3.90885 29.7480 -4.07812 29.0605 -4.07812  c
28.7168 -4.07812 l
28.7168 -.921875 l
h
28.7168 -4.85938 m
29.1074 -4.85938 l
29.7637 -4.85938 30.2715 -5.00000 30.6309 -5.28125  c
30.9902 -5.56250 31.1699 -5.95833 31.1699 -6.46875  c
31.1699 -7.32292 30.5085 -7.75000 29.1855 -7.75000  c
28.7168 -7.75000 l
28.7168 -4.85938 l
h
f
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.4023 ] defaultmatrix matrix concatmatrix setmatrix
.960784 .325490 .200000 RG
newpath
117.600 106.514 m
96.5142 127.600 l
75.4285 106.514 l
96.5142 85.4285 l
h
f
0.00000 0.00000 0.00000 RG
newpath
96.5142 84.0142 m
119.014 106.514 l
96.5142 129.014 l
74.0142 106.514 l
h
117.600 106.514 m
96.5142 127.600 l
75.4285 106.514 l
96.5142 85.4285 l
h
f*
96.5142 106.514 translate
1.00000 1.00000 scale
-23.0303 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -5.01562 l
6.46875 -5.01562 l
6.46875 -8.67188 l
7.70312 -8.67188 l
7.70312 0.00000 l
6.46875 0.00000 l
6.46875 -4.09375 l
2.34375 -4.09375 l
2.34375 0.00000 l
1.12500 0.00000 l
h
11.6309 .218750 m
11.0579 .218750 10.3184 .0885417 9.41211 -.171875  c
9.41211 -1.39062 l
10.3809 -.932292 11.1829 -.703125 11.8184 -.703125  c
12.2975 -.703125 12.6855 -.830729 12.9824 -1.08594  c
13.2793 -1.34115 13.4277 -1.67708 13.4277 -2.09375  c
13.4277 -2.42708 13.3314 -2.71354 13.1387 -2.95312  c
12.9460 -3.19271 12.5892 -3.45833 12.0684 -3.75000  c
11.4746 -4.09375 l
10.7350 -4.52083 10.2142 -4.91927 9.91211 -5.28906  c
9.61003 -5.65885 9.45898 -6.09375 9.45898 -6.59375  c
9.45898 -7.26042 9.70117 -7.80990 10.1855 -8.24219  c
10.6699 -8.67448 11.2871 -8.89062 12.0371 -8.89062  c
12.7038 -8.89062 13.4069 -8.78125 14.1465 -8.56250  c
14.1465 -7.43750 l
13.2298 -7.79167 12.5475 -7.96875 12.0996 -7.96875  c
11.6725 -7.96875 11.3210 -7.85677 11.0449 -7.63281  c
10.7689 -7.40885 10.6309 -7.12500 10.6309 -6.78125  c
10.6309 -6.48958 10.7324 -6.23177 10.9355 -6.00781  c
11.1387 -5.78385 11.5111 -5.51562 12.0527 -5.20312  c
12.6621 -4.85938 l
13.4121 -4.43229 13.9355 -4.02865 14.2324 -3.64844  c
14.5293 -3.26823 14.6777 -2.81250 14.6777 -2.28125  c
14.6777 -1.53125 14.4017 -.927083 13.8496 -.468750  c
13.2975 -.0104167 12.5579 .218750 11.6309 .218750  c
h
16.4062 0.00000 m
16.4062 -8.67188 l
18.7656 -8.67188 l
19.8073 -8.67188 20.5573 -8.49479 21.0156 -8.14062  c
21.4740 -7.78646 21.7031 -7.20833 21.7031 -6.40625  c
21.7031 -5.47917 21.3906 -4.75521 20.7656 -4.23438  c
20.1406 -3.71354 19.2760 -3.45312 18.1719 -3.45312  c
17.6250 -3.45312 l
17.6250 0.00000 l
16.4062 0.00000 l
h
17.6250 -4.37500 m
18.1250 -4.37500 l
18.8542 -4.37500 19.4167 -4.54427 19.8125 -4.88281  c
20.2083 -5.22135 20.4062 -5.69792 20.4062 -6.31250  c
20.4062 -6.82292 20.2500 -7.19010 19.9375 -7.41406  c
19.6250 -7.63802 19.1042 -7.75000 18.3750 -7.75000  c
17.6250 -7.75000 l
17.6250 -4.37500 l
h
27.4297 -3.31250 m
25.9453 -7.06250 l
24.4766 -3.31250 l
27.4297 -3.31250 l
h
28.7266 0.00000 m
27.7891 -2.40625 l
24.1172 -2.40625 l
23.1641 0.00000 l
22.0078 0.00000 l
25.4609 -8.67188 l
26.6797 -8.67188 l
30.0547 0.00000 l
28.7266 0.00000 l
h
32.0059 0.00000 m
32.0059 -.875000 l
33.7402 -.875000 l
33.7402 -7.71875 l
32.0059 -7.28125 l
32.0059 -8.17188 l
34.8965 -8.89062 l
34.8965 -.875000 l
36.6309 -.875000 l
36.6309 0.00000 l
32.0059 0.00000 l
h
43.2969 -3.31250 m
41.8125 -7.06250 l
40.3438 -3.31250 l
43.2969 -3.31250 l
h
44.5938 0.00000 m
43.6562 -2.40625 l
39.9844 -2.40625 l
39.0312 0.00000 l
37.8750 0.00000 l
41.3281 -8.67188 l
42.5469 -8.67188 l
45.9219 0.00000 l
44.5938 0.00000 l
h
f
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.4023 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .894118 .694118 RG
newpath
228.066 .790680 m
228.066 12.6648 218.440 22.2907 206.566 22.2907  c
194.691 22.2907 185.066 12.6648 185.066 .790680  c
185.066 -11.0834 194.691 -20.7093 206.566 -20.7093  c
218.440 -20.7093 228.066 -11.0834 228.066 .790680  c
h
f
0.00000 0.00000 0.00000 RG
newpath
229.066 .790680 m
229.066 13.2171 218.992 23.2907 206.566 23.2907  c
194.139 23.2907 184.066 13.2171 184.066 .790680  c
184.066 -11.6357 194.139 -21.7093 206.566 -21.7093  c
218.992 -21.7093 229.066 -11.6357 229.066 .790680  c
h
228.066 .790680 m
228.066 12.6648 218.440 22.2907 206.566 22.2907  c
194.691 22.2907 185.066 12.6648 185.066 .790680  c
185.066 -11.0834 194.691 -20.7093 206.566 -20.7093  c
218.440 -20.7093 228.066 -11.0834 228.066 .790680  c
h
f*
206.566 .790680 translate
1.00000 1.00000 scale
-14.0713 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
13.5566 -8.67188 l
13.5566 -7.75000 l
9.93164 -7.75000 l
9.93164 -4.96875 l
12.9629 -4.96875 l
12.9629 -4.06250 l
9.93164 -4.06250 l
9.93164 -.921875 l
13.8066 -.921875 l
13.8066 0.00000 l
8.71289 0.00000 l
h
16.9043 .218750 m
16.3314 .218750 15.5918 .0885417 14.6855 -.171875  c
14.6855 -1.39062 l
15.6543 -.932292 16.4564 -.703125 17.0918 -.703125  c
17.5710 -.703125 17.9590 -.830729 18.2559 -1.08594  c
18.5527 -1.34115 18.7012 -1.67708 18.7012 -2.09375  c
18.7012 -2.42708 18.6048 -2.71354 18.4121 -2.95312  c
18.2194 -3.19271 17.8626 -3.45833 17.3418 -3.75000  c
16.7480 -4.09375 l
16.0085 -4.52083 15.4876 -4.91927 15.1855 -5.28906  c
14.8835 -5.65885 14.7324 -6.09375 14.7324 -6.59375  c
14.7324 -7.26042 14.9746 -7.80990 15.4590 -8.24219  c
15.9434 -8.67448 16.5605 -8.89062 17.3105 -8.89062  c
17.9772 -8.89062 18.6803 -8.78125 19.4199 -8.56250  c
19.4199 -7.43750 l
18.5033 -7.79167 17.8210 -7.96875 17.3730 -7.96875  c
16.9460 -7.96875 16.5944 -7.85677 16.3184 -7.63281  c
16.0423 -7.40885 15.9043 -7.12500 15.9043 -6.78125  c
15.9043 -6.48958 16.0059 -6.23177 16.2090 -6.00781  c
16.4121 -5.78385 16.7845 -5.51562 17.3262 -5.20312  c
17.9355 -4.85938 l
18.6855 -4.43229 19.2090 -4.02865 19.5059 -3.64844  c
19.8027 -3.26823 19.9512 -2.81250 19.9512 -2.28125  c
19.9512 -1.53125 19.6751 -.927083 19.1230 -.468750  c
18.5710 -.0104167 17.8314 .218750 16.9043 .218750  c
h
23.7422 0.00000 m
23.7422 -7.75000 l
20.6641 -7.75000 l
20.6641 -8.67188 l
28.0391 -8.67188 l
28.0391 -7.75000 l
24.9609 -7.75000 l
24.9609 0.00000 l
23.7422 0.00000 l
h
f
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.4023 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .552941 .352941 RG
newpath
36.9858 25.4858 m
36.9858 37.3599 27.3599 46.9858 15.4858 46.9858  c
3.61164 46.9858 -6.01423 37.3599 -6.01423 25.4858  c
-6.01423 13.6116 3.61164 3.98577 15.4858 3.98577  c
27.3599 3.98577 36.9858 13.6116 36.9858 25.4858  c
h
f
0.00000 0.00000 0.00000 RG
newpath
37.9858 25.4858 m
37.9858 37.9122 27.9122 47.9858 15.4858 47.9858  c
3.05936 47.9858 -7.01423 37.9122 -7.01423 25.4858  c
-7.01423 13.0594 3.05936 2.98577 15.4858 2.98577  c
27.9122 2.98577 37.9858 13.0594 37.9858 25.4858  c
h
36.9858 25.4858 m
36.9858 37.3599 27.3599 46.9858 15.4858 46.9858  c
3.61164 46.9858 -6.01423 37.3599 -6.01423 25.4858  c
-6.01423 13.6116 3.61164 3.98577 15.4858 3.98577  c
27.3599 3.98577 36.9858 13.6116 36.9858 25.4858  c
h
f*
15.4858 25.4858 translate
1.00000 1.00000 scale
-20.9883 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -5.01562 l
6.46875 -5.01562 l
6.46875 -8.67188 l
7.70312 -8.67188 l
7.70312 0.00000 l
6.46875 0.00000 l
6.46875 -4.09375 l
2.34375 -4.09375 l
2.34375 0.00000 l
1.12500 0.00000 l
h
9.94336 0.00000 m
9.94336 -8.67188 l
12.8184 -8.67188 l
13.6829 -8.67188 14.3783 -8.57552 14.9043 -8.38281  c
15.4303 -8.19010 15.8861 -7.86458 16.2715 -7.40625  c
16.8861 -6.68750 17.1934 -5.73438 17.1934 -4.54688  c
17.1934 -3.09896 16.8132 -1.97917 16.0527 -1.18750  c
15.2923 -.395833 14.2194 0.00000 12.8340 0.00000  c
9.94336 0.00000 l
h
11.1621 -.921875 m
12.7402 -.921875 l
13.8652 -.921875 14.6621 -1.22396 15.1309 -1.82812  c
15.6413 -2.47396 15.8965 -3.33854 15.8965 -4.42188  c
15.8965 -5.44271 15.6465 -6.24479 15.1465 -6.82812  c
14.8444 -7.18229 14.4850 -7.42448 14.0684 -7.55469  c
13.6517 -7.68490 13.0215 -7.75000 12.1777 -7.75000  c
11.1621 -7.75000 l
11.1621 -.921875 l
h
23.3223 -3.31250 m
21.8379 -7.06250 l
20.3691 -3.31250 l
23.3223 -3.31250 l
h
24.6191 0.00000 m
23.6816 -2.40625 l
20.0098 -2.40625 l
19.0566 0.00000 l
17.9004 0.00000 l
21.3535 -8.67188 l
22.5723 -8.67188 l
25.9473 0.00000 l
24.6191 0.00000 l
h
30.9141 .218750 m
29.5703 .218750 28.5312 -.177083 27.7969 -.968750  c
27.0625 -1.76042 26.6953 -2.88021 26.6953 -4.32812  c
26.6953 -5.77604 27.0703 -6.89844 27.8203 -7.69531  c
28.5703 -8.49219 29.6224 -8.89062 30.9766 -8.89062  c
31.7578 -8.89062 32.6693 -8.76562 33.7109 -8.51562  c
33.7109 -7.35938 l
32.5234 -7.76562 31.6068 -7.96875 30.9609 -7.96875  c
30.0234 -7.96875 29.2969 -7.65104 28.7812 -7.01562  c
28.2656 -6.38021 28.0078 -5.47917 28.0078 -4.31250  c
28.0078 -3.20833 28.2812 -2.33854 28.8281 -1.70312  c
29.3750 -1.06771 30.1276 -.750000 31.0859 -.750000  c
31.9089 -.750000 32.7891 -1.00000 33.7266 -1.50000  c
33.7266 -.453125 l
32.8724 -.00520833 31.9349 .218750 30.9141 .218750  c
h
35.3887 0.00000 m
35.3887 -1.01562 l
35.7220 -1.79688 36.3991 -2.65104 37.4199 -3.57812  c
38.0918 -4.17188 l
38.9355 -4.94271 39.3574 -5.70833 39.3574 -6.46875  c
39.3574 -6.94792 39.2142 -7.32552 38.9277 -7.60156  c
38.6413 -7.87760 38.2428 -8.01562 37.7324 -8.01562  c
37.1283 -8.01562 36.4199 -7.78646 35.6074 -7.32812  c
35.6074 -8.34375 l
36.3783 -8.70833 37.1387 -8.89062 37.8887 -8.89062  c
38.7012 -8.89062 39.3548 -8.67188 39.8496 -8.23438  c
40.3444 -7.79688 40.5918 -7.21875 40.5918 -6.50000  c
40.5918 -5.97917 40.4668 -5.51562 40.2168 -5.10938  c
39.9668 -4.70312 39.5033 -4.21354 38.8262 -3.64062  c
38.3887 -3.26562 l
37.4616 -2.48438 36.9251 -1.73438 36.7793 -1.01562  c
40.5449 -1.01562 l
40.5449 0.00000 l
35.3887 0.00000 l
h
f
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.4023 ] defaultmatrix matrix concatmatrix setmatrix
.666667 1.00000 .580392 RG
newpath
92.3292 10.6565 m
92.3292 22.5307 82.7034 32.1565 70.8292 32.1565  c
58.9551 32.1565 49.3292 22.5307 49.3292 10.6565  c
49.3292 -1.21760 58.9551 -10.8435 70.8292 -10.8435  c
82.7034 -10.8435 92.3292 -1.21760 92.3292 10.6565  c
h
f
0.00000 0.00000 0.00000 RG
newpath
93.3292 10.6565 m
93.3292 23.0829 83.2556 33.1565 70.8292 33.1565  c
58.4028 33.1565 48.3292 23.0829 48.3292 10.6565  c
48.3292 -1.76988 58.4028 -11.8435 70.8292 -11.8435  c
83.2556 -11.8435 93.3292 -1.76988 93.3292 10.6565  c
h
92.3292 10.6565 m
92.3292 22.5307 82.7034 32.1565 70.8292 32.1565  c
58.9551 32.1565 49.3292 22.5307 49.3292 10.6565  c
49.3292 -1.21760 58.9551 -10.8435 70.8292 -10.8435  c
82.7034 -10.8435 92.3292 -1.21760 92.3292 10.6565  c
h
f*
70.8292 10.6565 translate
1.00000 1.00000 scale
-22.0166 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
7.58789 0.00000 m
7.58789 -8.67188 l
12.4316 -8.67188 l
12.4316 -7.75000 l
8.80664 -7.75000 l
8.80664 -4.96875 l
11.8379 -4.96875 l
11.8379 -4.06250 l
8.80664 -4.06250 l
8.80664 -.921875 l
12.6816 -.921875 l
12.6816 0.00000 l
7.58789 0.00000 l
h
16.1543 0.00000 m
16.1543 -7.75000 l
13.0762 -7.75000 l
13.0762 -8.67188 l
20.4512 -8.67188 l
20.4512 -7.75000 l
17.3730 -7.75000 l
17.3730 0.00000 l
16.1543 0.00000 l
h
21.6797 0.00000 m
21.6797 -8.67188 l
24.5547 -8.67188 l
25.4193 -8.67188 26.1146 -8.57552 26.6406 -8.38281  c
27.1667 -8.19010 27.6224 -7.86458 28.0078 -7.40625  c
28.6224 -6.68750 28.9297 -5.73438 28.9297 -4.54688  c
28.9297 -3.09896 28.5495 -1.97917 27.7891 -1.18750  c
27.0286 -.395833 25.9557 0.00000 24.5703 0.00000  c
21.6797 0.00000 l
h
22.8984 -.921875 m
24.4766 -.921875 l
25.6016 -.921875 26.3984 -1.22396 26.8672 -1.82812  c
27.3776 -2.47396 27.6328 -3.33854 27.6328 -4.42188  c
27.6328 -5.44271 27.3828 -6.24479 26.8828 -6.82812  c
26.5807 -7.18229 26.2214 -7.42448 25.8047 -7.55469  c
25.3880 -7.68490 24.7578 -7.75000 23.9141 -7.75000  c
22.8984 -7.75000 l
22.8984 -.921875 l
h
30.6680 0.00000 m
30.6680 -8.67188 l
32.9180 -8.67188 l
33.7826 -8.67188 34.4466 -8.50781 34.9102 -8.17969  c
35.3737 -7.85156 35.6055 -7.38021 35.6055 -6.76562  c
35.6055 -5.71354 35.0117 -4.96354 33.8242 -4.51562  c
35.2409 -4.08854 35.9492 -3.30729 35.9492 -2.17188  c
35.9492 -1.46354 35.7148 -.924479 35.2461 -.554688  c
34.7773 -.184896 34.1003 0.00000 33.2148 0.00000  c
30.6680 0.00000 l
h
31.8867 -.921875 m
32.1367 -.921875 l
33.0326 -.921875 33.6159 -.979167 33.8867 -1.09375  c
34.3971 -1.30208 34.6523 -1.69792 34.6523 -2.28125  c
34.6523 -2.80208 34.4206 -3.23177 33.9570 -3.57031  c
33.4935 -3.90885 32.9180 -4.07812 32.2305 -4.07812  c
31.8867 -4.07812 l
31.8867 -.921875 l
h
31.8867 -4.85938 m
32.2773 -4.85938 l
32.9336 -4.85938 33.4414 -5.00000 33.8008 -5.28125  c
34.1602 -5.56250 34.3398 -5.95833 34.3398 -6.46875  c
34.3398 -7.32292 33.6784 -7.75000 32.3555 -7.75000  c
31.8867 -7.75000 l
31.8867 -4.85938 l
h
38.2578 0.00000 m
38.2578 -.875000 l
39.9922 -.875000 l
39.9922 -7.71875 l
38.2578 -7.28125 l
38.2578 -8.17188 l
41.1484 -8.89062 l
41.1484 -.875000 l
42.8828 -.875000 l
42.8828 0.00000 l
38.2578 0.00000 l
h
f
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.4023 ] defaultmatrix matrix concatmatrix setmatrix
.894118 1.00000 .729412 RG
newpath
62.6708 121.343 m
62.6708 133.218 53.0449 142.843 41.1708 142.843  c
29.2966 142.843 19.6708 133.218 19.6708 121.343  c
19.6708 109.469 29.2966 99.8435 41.1708 99.8435  c
53.0449 99.8435 62.6708 109.469 62.6708 121.343  c
h
f
0.00000 0.00000 0.00000 RG
newpath
63.6708 121.343 m
63.6708 133.770 53.5972 143.843 41.1708 143.843  c
28.7444 143.843 18.6708 133.770 18.6708 121.343  c
18.6708 108.917 28.7444 98.8435 41.1708 98.8435  c
53.5972 98.8435 63.6708 108.917 63.6708 121.343  c
h
62.6708 121.343 m
62.6708 133.218 53.0449 142.843 41.1708 142.843  c
29.2966 142.843 19.6708 133.218 19.6708 121.343  c
19.6708 109.469 29.2966 99.8435 41.1708 99.8435  c
53.0449 99.8435 62.6708 109.469 62.6708 121.343  c
h
f*
41.1708 121.343 translate
1.00000 1.00000 scale
-18.2754 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
11.9785 -3.31250 m
10.4941 -7.06250 l
9.02539 -3.31250 l
11.9785 -3.31250 l
h
13.2754 0.00000 m
12.3379 -2.40625 l
8.66602 -2.40625 l
7.71289 0.00000 l
6.55664 0.00000 l
10.0098 -8.67188 l
11.2285 -8.67188 l
14.6035 0.00000 l
13.2754 0.00000 l
h
15.8672 0.00000 m
15.8672 -8.67188 l
18.2266 -8.67188 l
19.2682 -8.67188 20.0182 -8.49479 20.4766 -8.14062  c
20.9349 -7.78646 21.1641 -7.20833 21.1641 -6.40625  c
21.1641 -5.47917 20.8516 -4.75521 20.2266 -4.23438  c
19.6016 -3.71354 18.7370 -3.45312 17.6328 -3.45312  c
17.0859 -3.45312 l
17.0859 0.00000 l
15.8672 0.00000 l
h
17.0859 -4.37500 m
17.5859 -4.37500 l
18.3151 -4.37500 18.8776 -4.54427 19.2734 -4.88281  c
19.6693 -5.22135 19.8672 -5.69792 19.8672 -6.31250  c
19.8672 -6.82292 19.7109 -7.19010 19.3984 -7.41406  c
19.0859 -7.63802 18.5651 -7.75000 17.8359 -7.75000  c
17.0859 -7.75000 l
17.0859 -4.37500 l
h
22.5938 -.0625000 m
22.5938 -1.14062 l
23.4271 -.817708 24.0781 -.656250 24.5469 -.656250  c
25.0990 -.656250 25.5495 -.817708 25.8984 -1.14062  c
26.2474 -1.46354 26.4219 -1.88021 26.4219 -2.39062  c
26.4219 -3.60938 25.5677 -4.21875 23.8594 -4.21875  c
23.3906 -4.21875 l
23.3906 -5.00000 l
23.7969 -5.00000 l
25.4010 -5.00000 26.2031 -5.56250 26.2031 -6.68750  c
26.2031 -7.57292 25.6771 -8.01562 24.6250 -8.01562  c
24.0417 -8.01562 23.4062 -7.85417 22.7188 -7.53125  c
22.7188 -8.54688 l
23.3958 -8.77604 24.0573 -8.89062 24.7031 -8.89062  c
26.4740 -8.89062 27.3594 -8.21875 27.3594 -6.87500  c
27.3594 -5.85417 26.7552 -5.13021 25.5469 -4.70312  c
26.9531 -4.38021 27.6562 -3.61458 27.6562 -2.40625  c
27.6562 -1.58333 27.3854 -.940104 26.8438 -.476562  c
26.3021 -.0130208 25.5625 .218750 24.6250 .218750  c
24.0833 .218750 23.4062 .125000 22.5938 -.0625000  c
h
32.7285 .218750 m
31.8327 .218750 31.1087 -.203125 30.5566 -1.04688  c
30.0046 -1.89062 29.7285 -2.98958 29.7285 -4.34375  c
29.7285 -5.70833 30.0072 -6.80729 30.5645 -7.64062  c
31.1217 -8.47396 31.8535 -8.89062 32.7598 -8.89062  c
33.6660 -8.89062 34.3978 -8.47396 34.9551 -7.64062  c
35.5124 -6.80729 35.7910 -5.71354 35.7910 -4.35938  c
35.7910 -2.97396 35.5124 -1.86458 34.9551 -1.03125  c
34.3978 -.197917 33.6556 .218750 32.7285 .218750  c
h
32.7441 -.656250 m
33.9629 -.656250 34.5723 -1.89583 34.5723 -4.37500  c
34.5723 -6.80208 33.9681 -8.01562 32.7598 -8.01562  c
31.5618 -8.01562 30.9629 -6.79167 30.9629 -4.34375  c
30.9629 -1.88542 31.5566 -.656250 32.7441 -.656250  c
h
f
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.4023 ] defaultmatrix matrix concatmatrix setmatrix
.827451 1.00000 .682353 RG
newpath
240.498 47.1901 m
240.498 59.0643 230.872 68.6901 218.998 68.6901  c
207.124 68.6901 197.498 59.0643 197.498 47.1901  c
197.498 35.3160 207.124 25.6901 218.998 25.6901  c
230.872 25.6901 240.498 35.3160 240.498 47.1901  c
h
f
0.00000 0.00000 0.00000 RG
newpath
241.498 47.1901 m
241.498 59.6165 231.425 69.6901 218.998 69.6901  c
206.572 69.6901 196.498 59.6165 196.498 47.1901  c
196.498 34.7637 206.572 24.6901 218.998 24.6901  c
231.425 24.6901 241.498 34.7637 241.498 47.1901  c
h
240.498 47.1901 m
240.498 59.0643 230.872 68.6901 218.998 68.6901  c
207.124 68.6901 197.498 59.0643 197.498 47.1901  c
197.498 35.3160 207.124 25.6901 218.998 25.6901  c
230.872 25.6901 240.498 35.3160 240.498 47.1901  c
h
f*
218.998 47.1901 translate
1.00000 1.00000 scale
-24.5889 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.82812 -8.67188 l
5.23438 -1.96875 l
7.70312 -8.67188 l
9.21875 -8.67188 l
9.21875 0.00000 l
8.07812 0.00000 l
8.07812 -7.06250 l
5.68750 -.578125 l
4.50000 -.578125 l
2.17188 -7.07812 l
2.17188 0.00000 l
1.12500 0.00000 l
h
15.8516 -3.31250 m
14.3672 -7.06250 l
12.8984 -3.31250 l
15.8516 -3.31250 l
h
17.1484 0.00000 m
16.2109 -2.40625 l
12.5391 -2.40625 l
11.5859 0.00000 l
10.4297 0.00000 l
13.8828 -8.67188 l
15.1016 -8.67188 l
18.4766 0.00000 l
17.1484 0.00000 l
h
19.7402 0.00000 m
19.7402 -8.67188 l
22.6152 -8.67188 l
23.4798 -8.67188 24.1751 -8.57552 24.7012 -8.38281  c
25.2272 -8.19010 25.6829 -7.86458 26.0684 -7.40625  c
26.6829 -6.68750 26.9902 -5.73438 26.9902 -4.54688  c
26.9902 -3.09896 26.6100 -1.97917 25.8496 -1.18750  c
25.0892 -.395833 24.0163 0.00000 22.6309 0.00000  c
19.7402 0.00000 l
h
20.9590 -.921875 m
22.5371 -.921875 l
23.6621 -.921875 24.4590 -1.22396 24.9277 -1.82812  c
25.4382 -2.47396 25.6934 -3.33854 25.6934 -4.42188  c
25.6934 -5.44271 25.4434 -6.24479 24.9434 -6.82812  c
24.6413 -7.18229 24.2819 -7.42448 23.8652 -7.55469  c
23.4486 -7.68490 22.8184 -7.75000 21.9746 -7.75000  c
20.9590 -7.75000 l
20.9590 -.921875 l
h
29.4160 0.00000 m
29.4160 -.875000 l
31.1504 -.875000 l
31.1504 -7.71875 l
29.4160 -7.28125 l
29.4160 -8.17188 l
32.3066 -8.89062 l
32.3066 -.875000 l
34.0410 -.875000 l
34.0410 0.00000 l
29.4160 0.00000 l
h
36.3164 0.00000 m
36.3164 -8.67188 l
37.5352 -8.67188 l
37.5352 -.921875 l
41.4414 -.921875 l
41.4414 0.00000 l
36.3164 0.00000 l
h
43.4023 0.00000 m
43.4023 -.875000 l
45.1367 -.875000 l
45.1367 -7.71875 l
43.4023 -7.28125 l
43.4023 -8.17188 l
46.2930 -8.89062 l
46.2930 -.875000 l
48.0273 -.875000 l
48.0273 0.00000 l
43.4023 0.00000 l
h
f
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.4023 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .729412 .529412 RG
newpath
22.1565 80.8292 m
22.1565 92.7034 12.5306 102.329 .656527 102.329  c
-11.2176 102.329 -20.8435 92.7034 -20.8435 80.8292  c
-20.8435 68.9551 -11.2176 59.3292 .656527 59.3292  c
12.5306 59.3292 22.1565 68.9551 22.1565 80.8292  c
h
f
0.00000 0.00000 0.00000 RG
newpath
23.1565 80.8292 m
23.1565 93.2556 13.0829 103.329 .656527 103.329  c
-11.7699 103.329 -21.8435 93.2556 -21.8435 80.8292  c
-21.8435 68.4028 -11.7699 58.3292 .656527 58.3292  c
13.0829 58.3292 23.1565 68.4028 23.1565 80.8292  c
h
22.1565 80.8292 m
22.1565 92.7034 12.5306 102.329 .656527 102.329  c
-11.2176 102.329 -20.8435 92.7034 -20.8435 80.8292  c
-20.8435 68.9551 -11.2176 59.3292 .656527 59.3292  c
12.5306 59.3292 22.1565 68.9551 22.1565 80.8292  c
h
f*
.656527 80.8292 translate
1.00000 1.00000 scale
-18.7734 4.42090 translate
newpath
5.51562 -3.31250 m
4.03125 -7.06250 l
2.56250 -3.31250 l
5.51562 -3.31250 l
h
6.81250 0.00000 m
5.87500 -2.40625 l
2.20312 -2.40625 l
1.25000 0.00000 l
.0937500 0.00000 l
3.54688 -8.67188 l
4.76562 -8.67188 l
8.14062 0.00000 l
6.81250 0.00000 l
h
11.0918 .218750 m
10.5189 .218750 9.77930 .0885417 8.87305 -.171875  c
8.87305 -1.39062 l
9.84180 -.932292 10.6439 -.703125 11.2793 -.703125  c
11.7585 -.703125 12.1465 -.830729 12.4434 -1.08594  c
12.7402 -1.34115 12.8887 -1.67708 12.8887 -2.09375  c
12.8887 -2.42708 12.7923 -2.71354 12.5996 -2.95312  c
12.4069 -3.19271 12.0501 -3.45833 11.5293 -3.75000  c
10.9355 -4.09375 l
10.1960 -4.52083 9.67513 -4.91927 9.37305 -5.28906  c
9.07096 -5.65885 8.91992 -6.09375 8.91992 -6.59375  c
8.91992 -7.26042 9.16211 -7.80990 9.64648 -8.24219  c
10.1309 -8.67448 10.7480 -8.89062 11.4980 -8.89062  c
12.1647 -8.89062 12.8678 -8.78125 13.6074 -8.56250  c
13.6074 -7.43750 l
12.6908 -7.79167 12.0085 -7.96875 11.5605 -7.96875  c
11.1335 -7.96875 10.7819 -7.85677 10.5059 -7.63281  c
10.2298 -7.40885 10.0918 -7.12500 10.0918 -6.78125  c
10.0918 -6.48958 10.1934 -6.23177 10.3965 -6.00781  c
10.5996 -5.78385 10.9720 -5.51562 11.5137 -5.20312  c
12.1230 -4.85938 l
12.8730 -4.43229 13.3965 -4.02865 13.6934 -3.64844  c
13.9902 -3.26823 14.1387 -2.81250 14.1387 -2.28125  c
14.1387 -1.53125 13.8626 -.927083 13.3105 -.468750  c
12.7585 -.0104167 12.0189 .218750 11.0918 .218750  c
h
15.8672 0.00000 m
15.8672 -8.67188 l
17.0859 -8.67188 l
17.0859 -5.01562 l
21.2109 -5.01562 l
21.2109 -8.67188 l
22.4453 -8.67188 l
22.4453 0.00000 l
21.2109 0.00000 l
21.2109 -4.09375 l
17.0859 -4.09375 l
17.0859 0.00000 l
15.8672 0.00000 l
h
24.5605 0.00000 m
24.5605 -1.01562 l
24.8939 -1.79688 25.5710 -2.65104 26.5918 -3.57812  c
27.2637 -4.17188 l
28.1074 -4.94271 28.5293 -5.70833 28.5293 -6.46875  c
28.5293 -6.94792 28.3861 -7.32552 28.0996 -7.60156  c
27.8132 -7.87760 27.4147 -8.01562 26.9043 -8.01562  c
26.3001 -8.01562 25.5918 -7.78646 24.7793 -7.32812  c
24.7793 -8.34375 l
25.5501 -8.70833 26.3105 -8.89062 27.0605 -8.89062  c
27.8730 -8.89062 28.5267 -8.67188 29.0215 -8.23438  c
29.5163 -7.79688 29.7637 -7.21875 29.7637 -6.50000  c
29.7637 -5.97917 29.6387 -5.51562 29.3887 -5.10938  c
29.1387 -4.70312 28.6751 -4.21354 27.9980 -3.64062  c
27.5605 -3.26562 l
26.6335 -2.48438 26.0970 -1.73438 25.9512 -1.01562  c
29.7168 -1.01562 l
29.7168 0.00000 l
24.5605 0.00000 l
h
32.2734 0.00000 m
32.2734 -8.67188 l
33.4922 -8.67188 l
33.4922 -.921875 l
37.3984 -.921875 l
37.3984 0.00000 l
32.2734 0.00000 l
h
f
[ 1.49995 0.00000 0.00000 1.49995 32.7642 95.4023 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
