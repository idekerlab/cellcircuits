%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 11:13:03 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.97493 0.00000 0.00000 1.97493 72.3583 44.3980 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
25.5144 11.2692 m
19.4856 14.7500 l
S
newpath
45.0000 29.4808 m
45.0000 22.5192 l
S
newpath
44.2020 73.6828 m
42.4001 122.691 l
S
newpath
30.7356 43.7452 m
19.4856 37.2500 l
S
newpath
59.7122 59.7686 m
106.844 84.7178 l
S
newpath
53.2356 66.2452 m
81.2444 114.758 l
S
1.00000 .854902 .654902 RG
newpath
66.5000 .0192375 m
66.5000 11.8934 56.8741 21.5192 45.0000 21.5192  c
33.1259 21.5192 23.5000 11.8934 23.5000 .0192375  c
23.5000 -11.8549 33.1259 -21.4808 45.0000 -21.4808  c
56.8741 -21.4808 66.5000 -11.8549 66.5000 .0192375  c
h
f
0.00000 0.00000 0.00000 RG
newpath
67.5000 .0192375 m
67.5000 12.4456 57.4264 22.5192 45.0000 22.5192  c
32.5736 22.5192 22.5000 12.4456 22.5000 .0192375  c
22.5000 -12.4072 32.5736 -22.4808 45.0000 -22.4808  c
57.4264 -22.4808 67.5000 -12.4072 67.5000 .0192375  c
h
66.5000 .0192375 m
66.5000 11.8934 56.8741 21.5192 45.0000 21.5192  c
33.1259 21.5192 23.5000 11.8934 23.5000 .0192375  c
23.5000 -11.8549 33.1259 -21.4808 45.0000 -21.4808  c
56.8741 -21.4808 66.5000 -11.8549 66.5000 .0192375  c
h
f*
45.0000 .0192375 translate
1.00000 1.00000 scale
-33.7676 4.42090 translate
newpath
3.18750 0.00000 m
3.18750 -7.75000 l
.109375 -7.75000 l
.109375 -8.67188 l
7.48438 -8.67188 l
7.48438 -7.75000 l
4.40625 -7.75000 l
4.40625 0.00000 l
3.18750 0.00000 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
9.91602 -8.67188 l
14.2754 -1.96875 l
14.2754 -8.67188 l
15.3379 -8.67188 l
15.3379 0.00000 l
14.1348 0.00000 l
9.75977 -6.70312 l
9.75977 0.00000 l
8.71289 0.00000 l
h
17.5781 0.00000 m
17.5781 -8.67188 l
22.4219 -8.67188 l
22.4219 -7.75000 l
18.7969 -7.75000 l
18.7969 -4.84375 l
21.8438 -4.84375 l
21.8438 -3.93750 l
18.7969 -3.93750 l
18.7969 0.00000 l
17.5781 0.00000 l
h
24.0117 0.00000 m
24.0117 -8.67188 l
26.6367 -8.67188 l
27.4701 -8.67188 28.1081 -8.48958 28.5508 -8.12500  c
28.9935 -7.76042 29.2148 -7.22396 29.2148 -6.51562  c
29.2148 -5.35938 28.6315 -4.54167 27.4648 -4.06250  c
30.3555 0.00000 l
28.8398 0.00000 l
26.3711 -3.67188 l
25.2305 -3.67188 l
25.2305 0.00000 l
24.0117 0.00000 l
h
25.2305 -4.59375 m
25.6211 -4.59375 l
27.1732 -4.59375 27.9492 -5.19792 27.9492 -6.40625  c
27.9492 -7.30208 27.2982 -7.75000 25.9961 -7.75000  c
25.2305 -7.75000 l
25.2305 -4.59375 l
h
33.2871 .218750 m
32.7142 .218750 31.9746 .0885417 31.0684 -.171875  c
31.0684 -1.39062 l
32.0371 -.932292 32.8392 -.703125 33.4746 -.703125  c
33.9538 -.703125 34.3418 -.830729 34.6387 -1.08594  c
34.9355 -1.34115 35.0840 -1.67708 35.0840 -2.09375  c
35.0840 -2.42708 34.9876 -2.71354 34.7949 -2.95312  c
34.6022 -3.19271 34.2454 -3.45833 33.7246 -3.75000  c
33.1309 -4.09375 l
32.3913 -4.52083 31.8704 -4.91927 31.5684 -5.28906  c
31.2663 -5.65885 31.1152 -6.09375 31.1152 -6.59375  c
31.1152 -7.26042 31.3574 -7.80990 31.8418 -8.24219  c
32.3262 -8.67448 32.9434 -8.89062 33.6934 -8.89062  c
34.3600 -8.89062 35.0632 -8.78125 35.8027 -8.56250  c
35.8027 -7.43750 l
34.8861 -7.79167 34.2038 -7.96875 33.7559 -7.96875  c
33.3288 -7.96875 32.9772 -7.85677 32.7012 -7.63281  c
32.4251 -7.40885 32.2871 -7.12500 32.2871 -6.78125  c
32.2871 -6.48958 32.3887 -6.23177 32.5918 -6.00781  c
32.7949 -5.78385 33.1673 -5.51562 33.7090 -5.20312  c
34.3184 -4.85938 l
35.0684 -4.43229 35.5918 -4.02865 35.8887 -3.64844  c
36.1855 -3.26823 36.3340 -2.81250 36.3340 -2.28125  c
36.3340 -1.53125 36.0579 -.927083 35.5059 -.468750  c
34.9538 -.0104167 34.2142 .218750 33.2871 .218750  c
h
38.0625 0.00000 m
38.0625 -8.67188 l
42.9062 -8.67188 l
42.9062 -7.75000 l
39.2812 -7.75000 l
39.2812 -4.84375 l
42.3281 -4.84375 l
42.3281 -3.93750 l
39.2812 -3.93750 l
39.2812 0.00000 l
38.0625 0.00000 l
h
45.1836 0.00000 m
45.1836 -.875000 l
46.9180 -.875000 l
46.9180 -7.71875 l
45.1836 -7.28125 l
45.1836 -8.17188 l
48.0742 -8.89062 l
48.0742 -.875000 l
49.8086 -.875000 l
49.8086 0.00000 l
45.1836 0.00000 l
h
54.7246 .218750 m
53.8288 .218750 53.1048 -.203125 52.5527 -1.04688  c
52.0007 -1.89062 51.7246 -2.98958 51.7246 -4.34375  c
51.7246 -5.70833 52.0033 -6.80729 52.5605 -7.64062  c
53.1178 -8.47396 53.8496 -8.89062 54.7559 -8.89062  c
55.6621 -8.89062 56.3939 -8.47396 56.9512 -7.64062  c
57.5085 -6.80729 57.7871 -5.71354 57.7871 -4.35938  c
57.7871 -2.97396 57.5085 -1.86458 56.9512 -1.03125  c
56.3939 -.197917 55.6517 .218750 54.7246 .218750  c
h
54.7402 -.656250 m
55.9590 -.656250 56.5684 -1.89583 56.5684 -4.37500  c
56.5684 -6.80208 55.9642 -8.01562 54.7559 -8.01562  c
53.5579 -8.01562 52.9590 -6.79167 52.9590 -4.34375  c
52.9590 -1.88542 53.5527 -.656250 54.7402 -.656250  c
h
59.6719 0.00000 m
59.6719 -8.67188 l
62.5469 -8.67188 l
63.4115 -8.67188 64.1068 -8.57552 64.6328 -8.38281  c
65.1589 -8.19010 65.6146 -7.86458 66.0000 -7.40625  c
66.6146 -6.68750 66.9219 -5.73438 66.9219 -4.54688  c
66.9219 -3.09896 66.5417 -1.97917 65.7812 -1.18750  c
65.0208 -.395833 63.9479 0.00000 62.5625 0.00000  c
59.6719 0.00000 l
h
60.8906 -.921875 m
62.4688 -.921875 l
63.5938 -.921875 64.3906 -1.22396 64.8594 -1.82812  c
65.3698 -2.47396 65.6250 -3.33854 65.6250 -4.42188  c
65.6250 -5.44271 65.3750 -6.24479 64.8750 -6.82812  c
64.5729 -7.18229 64.2135 -7.42448 63.7969 -7.55469  c
63.3802 -7.68490 62.7500 -7.75000 61.9062 -7.75000  c
60.8906 -7.75000 l
60.8906 -.921875 l
h
f
[ 1.97493 0.00000 0.00000 1.97493 72.3583 44.3980 ] defaultmatrix matrix concatmatrix setmatrix
.992157 .384314 .200000 RG
newpath
62.6879 144.393 m
41.6021 165.479 l
20.5164 144.393 l
41.6021 123.307 l
h
f
0.00000 0.00000 0.00000 RG
newpath
41.6021 121.893 m
64.1021 144.393 l
41.6021 166.893 l
19.1021 144.393 l
h
62.6879 144.393 m
41.6021 165.479 l
20.5164 144.393 l
41.6021 123.307 l
h
f*
41.6021 144.393 translate
1.00000 1.00000 scale
-31.7080 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.82812 -8.67188 l
5.23438 -1.96875 l
7.70312 -8.67188 l
9.21875 -8.67188 l
9.21875 0.00000 l
8.07812 0.00000 l
8.07812 -7.06250 l
5.68750 -.578125 l
4.50000 -.578125 l
2.17188 -7.07812 l
2.17188 0.00000 l
1.12500 0.00000 l
h
15.8516 -3.31250 m
14.3672 -7.06250 l
12.8984 -3.31250 l
15.8516 -3.31250 l
h
17.1484 0.00000 m
16.2109 -2.40625 l
12.5391 -2.40625 l
11.5859 0.00000 l
10.4297 0.00000 l
13.8828 -8.67188 l
15.1016 -8.67188 l
18.4766 0.00000 l
17.1484 0.00000 l
h
19.7402 0.00000 m
19.7402 -8.67188 l
22.0996 -8.67188 l
23.1413 -8.67188 23.8913 -8.49479 24.3496 -8.14062  c
24.8079 -7.78646 25.0371 -7.20833 25.0371 -6.40625  c
25.0371 -5.47917 24.7246 -4.75521 24.0996 -4.23438  c
23.4746 -3.71354 22.6100 -3.45312 21.5059 -3.45312  c
20.9590 -3.45312 l
20.9590 0.00000 l
19.7402 0.00000 l
h
20.9590 -4.37500 m
21.4590 -4.37500 l
22.1882 -4.37500 22.7507 -4.54427 23.1465 -4.88281  c
23.5423 -5.22135 23.7402 -5.69792 23.7402 -6.31250  c
23.7402 -6.82292 23.5840 -7.19010 23.2715 -7.41406  c
22.9590 -7.63802 22.4382 -7.75000 21.7090 -7.75000  c
20.9590 -7.75000 l
20.9590 -4.37500 l
h
26.3730 0.00000 m
26.3730 -8.67188 l
27.5293 -8.67188 l
27.5293 -4.40625 l
31.0293 -8.67188 l
32.2637 -8.67188 l
28.8730 -4.53125 l
32.8730 0.00000 l
31.3105 0.00000 l
27.5293 -4.39062 l
27.5293 0.00000 l
26.3730 0.00000 l
h
38.5977 -3.31250 m
37.1133 -7.06250 l
35.6445 -3.31250 l
38.5977 -3.31250 l
h
39.8945 0.00000 m
38.9570 -2.40625 l
35.2852 -2.40625 l
34.3320 0.00000 l
33.1758 0.00000 l
36.6289 -8.67188 l
37.8477 -8.67188 l
41.2227 0.00000 l
39.8945 0.00000 l
h
42.4863 0.00000 m
42.4863 -8.67188 l
44.8457 -8.67188 l
45.8874 -8.67188 46.6374 -8.49479 47.0957 -8.14062  c
47.5540 -7.78646 47.7832 -7.20833 47.7832 -6.40625  c
47.7832 -5.47917 47.4707 -4.75521 46.8457 -4.23438  c
46.2207 -3.71354 45.3561 -3.45312 44.2520 -3.45312  c
43.7051 -3.45312 l
43.7051 0.00000 l
42.4863 0.00000 l
h
43.7051 -4.37500 m
44.2051 -4.37500 l
44.9342 -4.37500 45.4967 -4.54427 45.8926 -4.88281  c
46.2884 -5.22135 46.4863 -5.69792 46.4863 -6.31250  c
46.4863 -6.82292 46.3301 -7.19010 46.0176 -7.41406  c
45.7051 -7.63802 45.1842 -7.75000 44.4551 -7.75000  c
43.7051 -7.75000 l
43.7051 -4.37500 l
h
49.1191 0.00000 m
49.1191 -8.67188 l
50.2754 -8.67188 l
50.2754 -4.40625 l
53.7754 -8.67188 l
55.0098 -8.67188 l
51.6191 -4.53125 l
55.6191 0.00000 l
54.0566 0.00000 l
50.2754 -4.39062 l
50.2754 0.00000 l
49.1191 0.00000 l
h
56.8281 0.00000 m
56.8281 -1.01562 l
57.1615 -1.79688 57.8385 -2.65104 58.8594 -3.57812  c
59.5312 -4.17188 l
60.3750 -4.94271 60.7969 -5.70833 60.7969 -6.46875  c
60.7969 -6.94792 60.6536 -7.32552 60.3672 -7.60156  c
60.0807 -7.87760 59.6823 -8.01562 59.1719 -8.01562  c
58.5677 -8.01562 57.8594 -7.78646 57.0469 -7.32812  c
57.0469 -8.34375 l
57.8177 -8.70833 58.5781 -8.89062 59.3281 -8.89062  c
60.1406 -8.89062 60.7943 -8.67188 61.2891 -8.23438  c
61.7839 -7.79688 62.0312 -7.21875 62.0312 -6.50000  c
62.0312 -5.97917 61.9062 -5.51562 61.6562 -5.10938  c
61.4062 -4.70312 60.9427 -4.21354 60.2656 -3.64062  c
59.8281 -3.26562 l
58.9010 -2.48438 58.3646 -1.73438 58.2188 -1.01562  c
61.9844 -1.01562 l
61.9844 0.00000 l
56.8281 0.00000 l
h
f
[ 1.97493 0.00000 0.00000 1.97493 72.3583 44.3980 ] defaultmatrix matrix concatmatrix setmatrix
.929412 1.00000 .752941 RG
newpath
21.5000 26.0000 m
21.5000 37.8741 11.8741 47.5000 0.00000 47.5000  c
-11.8741 47.5000 -21.5000 37.8741 -21.5000 26.0000  c
-21.5000 14.1259 -11.8741 4.50000 0.00000 4.50000  c
11.8741 4.50000 21.5000 14.1259 21.5000 26.0000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
22.5000 26.0000 m
22.5000 38.4264 12.4264 48.5000 0.00000 48.5000  c
-12.4264 48.5000 -22.5000 38.4264 -22.5000 26.0000  c
-22.5000 13.5736 -12.4264 3.50000 0.00000 3.50000  c
12.4264 3.50000 22.5000 13.5736 22.5000 26.0000  c
h
21.5000 26.0000 m
21.5000 37.8741 11.8741 47.5000 0.00000 47.5000  c
-11.8741 47.5000 -21.5000 37.8741 -21.5000 26.0000  c
-21.5000 14.1259 -11.8741 4.50000 0.00000 4.50000  c
11.8741 4.50000 21.5000 14.1259 21.5000 26.0000  c
h
f*
0.00000 26.0000 translate
1.00000 1.00000 scale
-25.4795 4.42090 translate
newpath
3.18750 0.00000 m
3.18750 -7.75000 l
.109375 -7.75000 l
.109375 -8.67188 l
7.48438 -8.67188 l
7.48438 -7.75000 l
4.40625 -7.75000 l
4.40625 0.00000 l
3.18750 0.00000 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
9.91602 -8.67188 l
14.2754 -1.96875 l
14.2754 -8.67188 l
15.3379 -8.67188 l
15.3379 0.00000 l
14.1348 0.00000 l
9.75977 -6.70312 l
9.75977 0.00000 l
8.71289 0.00000 l
h
17.5781 0.00000 m
17.5781 -8.67188 l
22.4219 -8.67188 l
22.4219 -7.75000 l
18.7969 -7.75000 l
18.7969 -4.84375 l
21.8438 -4.84375 l
21.8438 -3.93750 l
18.7969 -3.93750 l
18.7969 0.00000 l
17.5781 0.00000 l
h
25.6992 .218750 m
25.1263 .218750 24.3867 .0885417 23.4805 -.171875  c
23.4805 -1.39062 l
24.4492 -.932292 25.2513 -.703125 25.8867 -.703125  c
26.3659 -.703125 26.7539 -.830729 27.0508 -1.08594  c
27.3477 -1.34115 27.4961 -1.67708 27.4961 -2.09375  c
27.4961 -2.42708 27.3997 -2.71354 27.2070 -2.95312  c
27.0143 -3.19271 26.6576 -3.45833 26.1367 -3.75000  c
25.5430 -4.09375 l
24.8034 -4.52083 24.2826 -4.91927 23.9805 -5.28906  c
23.6784 -5.65885 23.5273 -6.09375 23.5273 -6.59375  c
23.5273 -7.26042 23.7695 -7.80990 24.2539 -8.24219  c
24.7383 -8.67448 25.3555 -8.89062 26.1055 -8.89062  c
26.7721 -8.89062 27.4753 -8.78125 28.2148 -8.56250  c
28.2148 -7.43750 l
27.2982 -7.79167 26.6159 -7.96875 26.1680 -7.96875  c
25.7409 -7.96875 25.3893 -7.85677 25.1133 -7.63281  c
24.8372 -7.40885 24.6992 -7.12500 24.6992 -6.78125  c
24.6992 -6.48958 24.8008 -6.23177 25.0039 -6.00781  c
25.2070 -5.78385 25.5794 -5.51562 26.1211 -5.20312  c
26.7305 -4.85938 l
27.4805 -4.43229 28.0039 -4.02865 28.3008 -3.64844  c
28.5977 -3.26823 28.7461 -2.81250 28.7461 -2.28125  c
28.7461 -1.53125 28.4701 -.927083 27.9180 -.468750  c
27.3659 -.0104167 26.6263 .218750 25.6992 .218750  c
h
30.4746 0.00000 m
30.4746 -8.67188 l
35.3184 -8.67188 l
35.3184 -7.75000 l
31.6934 -7.75000 l
31.6934 -4.84375 l
34.7402 -4.84375 l
34.7402 -3.93750 l
31.6934 -3.93750 l
31.6934 0.00000 l
30.4746 0.00000 l
h
37.5957 0.00000 m
37.5957 -.875000 l
39.3301 -.875000 l
39.3301 -7.71875 l
37.5957 -7.28125 l
37.5957 -8.17188 l
40.4863 -8.89062 l
40.4863 -.875000 l
42.2207 -.875000 l
42.2207 0.00000 l
37.5957 0.00000 l
h
47.1367 .218750 m
46.2409 .218750 45.5169 -.203125 44.9648 -1.04688  c
44.4128 -1.89062 44.1367 -2.98958 44.1367 -4.34375  c
44.1367 -5.70833 44.4154 -6.80729 44.9727 -7.64062  c
45.5299 -8.47396 46.2617 -8.89062 47.1680 -8.89062  c
48.0742 -8.89062 48.8060 -8.47396 49.3633 -7.64062  c
49.9206 -6.80729 50.1992 -5.71354 50.1992 -4.35938  c
50.1992 -2.97396 49.9206 -1.86458 49.3633 -1.03125  c
48.8060 -.197917 48.0638 .218750 47.1367 .218750  c
h
47.1523 -.656250 m
48.3711 -.656250 48.9805 -1.89583 48.9805 -4.37500  c
48.9805 -6.80208 48.3763 -8.01562 47.1680 -8.01562  c
45.9701 -8.01562 45.3711 -6.79167 45.3711 -4.34375  c
45.3711 -1.88542 45.9648 -.656250 47.1523 -.656250  c
h
f
[ 1.97493 0.00000 0.00000 1.97493 72.3583 44.3980 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .913725 .713725 RG
newpath
148.230 95.2442 m
148.230 107.118 138.604 116.744 126.730 116.744  c
114.856 116.744 105.230 107.118 105.230 95.2442  c
105.230 83.3701 114.856 73.7442 126.730 73.7442  c
138.604 73.7442 148.230 83.3701 148.230 95.2442  c
h
f
0.00000 0.00000 0.00000 RG
newpath
149.230 95.2442 m
149.230 107.671 139.157 117.744 126.730 117.744  c
114.304 117.744 104.230 107.671 104.230 95.2442  c
104.230 82.8178 114.304 72.7442 126.730 72.7442  c
139.157 72.7442 149.230 82.8178 149.230 95.2442  c
h
148.230 95.2442 m
148.230 107.118 138.604 116.744 126.730 116.744  c
114.856 116.744 105.230 107.118 105.230 95.2442  c
105.230 83.3701 114.856 73.7442 126.730 73.7442  c
138.604 73.7442 148.230 83.3701 148.230 95.2442  c
h
f*
126.730 95.2442 translate
1.00000 1.00000 scale
-20.9883 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -5.01562 l
6.46875 -5.01562 l
6.46875 -8.67188 l
7.70312 -8.67188 l
7.70312 0.00000 l
6.46875 0.00000 l
6.46875 -4.09375 l
2.34375 -4.09375 l
2.34375 0.00000 l
1.12500 0.00000 l
h
9.94336 0.00000 m
9.94336 -8.67188 l
12.8184 -8.67188 l
13.6829 -8.67188 14.3783 -8.57552 14.9043 -8.38281  c
15.4303 -8.19010 15.8861 -7.86458 16.2715 -7.40625  c
16.8861 -6.68750 17.1934 -5.73438 17.1934 -4.54688  c
17.1934 -3.09896 16.8132 -1.97917 16.0527 -1.18750  c
15.2923 -.395833 14.2194 0.00000 12.8340 0.00000  c
9.94336 0.00000 l
h
11.1621 -.921875 m
12.7402 -.921875 l
13.8652 -.921875 14.6621 -1.22396 15.1309 -1.82812  c
15.6413 -2.47396 15.8965 -3.33854 15.8965 -4.42188  c
15.8965 -5.44271 15.6465 -6.24479 15.1465 -6.82812  c
14.8444 -7.18229 14.4850 -7.42448 14.0684 -7.55469  c
13.6517 -7.68490 13.0215 -7.75000 12.1777 -7.75000  c
11.1621 -7.75000 l
11.1621 -.921875 l
h
23.3223 -3.31250 m
21.8379 -7.06250 l
20.3691 -3.31250 l
23.3223 -3.31250 l
h
24.6191 0.00000 m
23.6816 -2.40625 l
20.0098 -2.40625 l
19.0566 0.00000 l
17.9004 0.00000 l
21.3535 -8.67188 l
22.5723 -8.67188 l
25.9473 0.00000 l
24.6191 0.00000 l
h
30.9141 .218750 m
29.5703 .218750 28.5312 -.177083 27.7969 -.968750  c
27.0625 -1.76042 26.6953 -2.88021 26.6953 -4.32812  c
26.6953 -5.77604 27.0703 -6.89844 27.8203 -7.69531  c
28.5703 -8.49219 29.6224 -8.89062 30.9766 -8.89062  c
31.7578 -8.89062 32.6693 -8.76562 33.7109 -8.51562  c
33.7109 -7.35938 l
32.5234 -7.76562 31.6068 -7.96875 30.9609 -7.96875  c
30.0234 -7.96875 29.2969 -7.65104 28.7812 -7.01562  c
28.2656 -6.38021 28.0078 -5.47917 28.0078 -4.31250  c
28.0078 -3.20833 28.2812 -2.33854 28.8281 -1.70312  c
29.3750 -1.06771 30.1276 -.750000 31.0859 -.750000  c
31.9089 -.750000 32.7891 -1.00000 33.7266 -1.50000  c
33.7266 -.453125 l
32.8724 -.00520833 31.9349 .218750 30.9141 .218750  c
h
35.8418 .0312500 m
35.8418 -1.00000 l
36.4251 -.770833 36.9720 -.656250 37.4824 -.656250  c
38.0553 -.656250 38.5059 -.822917 38.8340 -1.15625  c
39.1621 -1.48958 39.3262 -1.95312 39.3262 -2.54688  c
39.3262 -3.84896 38.4303 -4.50000 36.6387 -4.50000  c
36.4303 -4.50000 36.2168 -4.48438 35.9980 -4.45312  c
35.9980 -8.67188 l
40.3887 -8.67188 l
40.3887 -7.67188 l
37.0137 -7.67188 l
37.0137 -5.37500 l
38.1283 -5.37500 38.9980 -5.11979 39.6230 -4.60938  c
40.2480 -4.09896 40.5605 -3.39062 40.5605 -2.48438  c
40.5605 -1.64062 40.2741 -.979167 39.7012 -.500000  c
39.1283 -.0208333 38.3418 .218750 37.3418 .218750  c
36.9043 .218750 36.4043 .156250 35.8418 .0312500  c
h
f
[ 1.97493 0.00000 0.00000 1.97493 72.3583 44.3980 ] defaultmatrix matrix concatmatrix setmatrix
.905882 .215686 .200000 RG
newpath
110.566 129.022 m
89.4800 150.108 l
68.3942 129.022 l
89.4800 107.937 l
h
f
0.00000 0.00000 0.00000 RG
newpath
89.4800 106.522 m
111.980 129.022 l
89.4800 151.522 l
66.9800 129.022 l
h
110.566 129.022 m
89.4800 150.108 l
68.3942 129.022 l
89.4800 107.937 l
h
f*
89.4800 129.022 translate
1.00000 1.00000 scale
-23.8125 4.42090 translate
newpath
5.51562 -3.31250 m
4.03125 -7.06250 l
2.56250 -3.31250 l
5.51562 -3.31250 l
h
6.81250 0.00000 m
5.87500 -2.40625 l
2.20312 -2.40625 l
1.25000 0.00000 l
.0937500 0.00000 l
3.54688 -8.67188 l
4.76562 -8.67188 l
8.14062 0.00000 l
6.81250 0.00000 l
h
9.40430 0.00000 m
9.40430 -8.67188 l
12.2793 -8.67188 l
13.1439 -8.67188 13.8392 -8.57552 14.3652 -8.38281  c
14.8913 -8.19010 15.3470 -7.86458 15.7324 -7.40625  c
16.3470 -6.68750 16.6543 -5.73438 16.6543 -4.54688  c
16.6543 -3.09896 16.2741 -1.97917 15.5137 -1.18750  c
14.7533 -.395833 13.6803 0.00000 12.2949 0.00000  c
9.40430 0.00000 l
h
10.6230 -.921875 m
12.2012 -.921875 l
13.3262 -.921875 14.1230 -1.22396 14.5918 -1.82812  c
15.1022 -2.47396 15.3574 -3.33854 15.3574 -4.42188  c
15.3574 -5.44271 15.1074 -6.24479 14.6074 -6.82812  c
14.3053 -7.18229 13.9460 -7.42448 13.5293 -7.55469  c
13.1126 -7.68490 12.4824 -7.75000 11.6387 -7.75000  c
10.6230 -7.75000 l
10.6230 -.921875 l
h
18.3926 0.00000 m
18.3926 -8.67188 l
21.0176 -8.67188 l
21.8509 -8.67188 22.4889 -8.48958 22.9316 -8.12500  c
23.3743 -7.76042 23.5957 -7.22396 23.5957 -6.51562  c
23.5957 -5.35938 23.0124 -4.54167 21.8457 -4.06250  c
24.7363 0.00000 l
23.2207 0.00000 l
20.7520 -3.67188 l
19.6113 -3.67188 l
19.6113 0.00000 l
18.3926 0.00000 l
h
19.6113 -4.59375 m
20.0020 -4.59375 l
21.5540 -4.59375 22.3301 -5.19792 22.3301 -6.40625  c
22.3301 -7.30208 21.6790 -7.75000 20.3770 -7.75000  c
19.6113 -7.75000 l
19.6113 -4.59375 l
h
30.3711 -3.31250 m
28.8867 -7.06250 l
27.4180 -3.31250 l
30.3711 -3.31250 l
h
31.6680 0.00000 m
30.7305 -2.40625 l
27.0586 -2.40625 l
26.1055 0.00000 l
24.9492 0.00000 l
28.4023 -8.67188 l
29.6211 -8.67188 l
32.9961 0.00000 l
31.6680 0.00000 l
h
34.1348 0.00000 m
34.1348 -1.01562 l
34.4681 -1.79688 35.1452 -2.65104 36.1660 -3.57812  c
36.8379 -4.17188 l
37.6816 -4.94271 38.1035 -5.70833 38.1035 -6.46875  c
38.1035 -6.94792 37.9603 -7.32552 37.6738 -7.60156  c
37.3874 -7.87760 36.9889 -8.01562 36.4785 -8.01562  c
35.8743 -8.01562 35.1660 -7.78646 34.3535 -7.32812  c
34.3535 -8.34375 l
35.1243 -8.70833 35.8848 -8.89062 36.6348 -8.89062  c
37.4473 -8.89062 38.1009 -8.67188 38.5957 -8.23438  c
39.0905 -7.79688 39.3379 -7.21875 39.3379 -6.50000  c
39.3379 -5.97917 39.2129 -5.51562 38.9629 -5.10938  c
38.7129 -4.70312 38.2493 -4.21354 37.5723 -3.64062  c
37.1348 -3.26562 l
36.2077 -2.48438 35.6712 -1.73438 35.5254 -1.01562  c
39.2910 -1.01562 l
39.2910 0.00000 l
34.1348 0.00000 l
h
41.8477 0.00000 m
41.8477 -8.67188 l
44.0977 -8.67188 l
44.9622 -8.67188 45.6263 -8.50781 46.0898 -8.17969  c
46.5534 -7.85156 46.7852 -7.38021 46.7852 -6.76562  c
46.7852 -5.71354 46.1914 -4.96354 45.0039 -4.51562  c
46.4206 -4.08854 47.1289 -3.30729 47.1289 -2.17188  c
47.1289 -1.46354 46.8945 -.924479 46.4258 -.554688  c
45.9570 -.184896 45.2799 0.00000 44.3945 0.00000  c
41.8477 0.00000 l
h
43.0664 -.921875 m
43.3164 -.921875 l
44.2122 -.921875 44.7956 -.979167 45.0664 -1.09375  c
45.5768 -1.30208 45.8320 -1.69792 45.8320 -2.28125  c
45.8320 -2.80208 45.6003 -3.23177 45.1367 -3.57031  c
44.6732 -3.90885 44.0977 -4.07812 43.4102 -4.07812  c
43.0664 -4.07812 l
43.0664 -.921875 l
h
43.0664 -4.85938 m
43.4570 -4.85938 l
44.1133 -4.85938 44.6211 -5.00000 44.9805 -5.28125  c
45.3398 -5.56250 45.5195 -5.95833 45.5195 -6.46875  c
45.5195 -7.32292 44.8581 -7.75000 43.5352 -7.75000  c
43.0664 -7.75000 l
43.0664 -4.85938 l
h
f
[ 1.97493 0.00000 0.00000 1.97493 72.3583 44.3980 ] defaultmatrix matrix concatmatrix setmatrix
.886275 .172549 .200000 RG
newpath
66.0858 51.9808 m
45.0000 73.0665 l
23.9142 51.9808 l
45.0000 30.8950 l
h
f
0.00000 0.00000 0.00000 RG
newpath
45.0000 29.4808 m
67.5000 51.9808 l
45.0000 74.4808 l
22.5000 51.9808 l
h
66.0858 51.9808 m
45.0000 73.0665 l
23.9142 51.9808 l
45.0000 30.8950 l
h
f*
45.0000 51.9808 translate
1.00000 1.00000 scale
-21.0469 4.42090 translate
newpath
3.00000 0.00000 m
3.00000 -3.62500 l
.0937500 -8.67188 l
1.50000 -8.67188 l
3.75000 -4.76562 l
6.18750 -8.67188 l
7.32812 -8.67188 l
4.21875 -3.64062 l
4.21875 0.00000 l
3.00000 0.00000 l
h
9.72656 0.00000 m
7.49219 -8.67188 l
8.67969 -8.67188 l
10.4453 -1.82812 l
12.0859 -8.67188 l
13.2734 -8.67188 l
14.8203 -1.92188 l
16.7266 -8.67188 l
17.7266 -8.67188 l
15.2891 0.00000 l
14.0703 0.00000 l
12.5391 -6.68750 l
10.9453 0.00000 l
9.72656 0.00000 l
h
18.8672 0.00000 m
18.8672 -8.67188 l
20.0859 -8.67188 l
20.0859 -5.01562 l
24.2109 -5.01562 l
24.2109 -8.67188 l
25.4453 -8.67188 l
25.4453 0.00000 l
24.2109 0.00000 l
24.2109 -4.09375 l
20.0859 -4.09375 l
20.0859 0.00000 l
18.8672 0.00000 l
h
32.0762 -3.31250 m
30.5918 -7.06250 l
29.1230 -3.31250 l
32.0762 -3.31250 l
h
33.3730 0.00000 m
32.4355 -2.40625 l
28.7637 -2.40625 l
27.8105 0.00000 l
26.6543 0.00000 l
30.1074 -8.67188 l
31.3262 -8.67188 l
34.7012 0.00000 l
33.3730 0.00000 l
h
35.4023 0.00000 m
35.4023 -.984375 l
40.0586 -7.75000 l
35.6836 -7.75000 l
35.6836 -8.67188 l
41.5273 -8.67188 l
41.5273 -7.75000 l
36.8711 -.984375 l
41.5273 -.984375 l
41.5273 0.00000 l
35.4023 0.00000 l
h
f
[ 1.97493 0.00000 0.00000 1.97493 72.3583 44.3980 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
