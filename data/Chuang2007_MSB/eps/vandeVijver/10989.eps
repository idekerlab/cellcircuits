%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 11:12:24 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.40500 0.00000 0.00000 1.40500 99.7264 30.2389 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
19.4856 115.250 m
25.5144 118.731 l
S
newpath
19.4856 92.7500 m
25.5144 89.2692 l
S
newpath
81.2444 15.2420 m
56.2500 58.5337 l
S
newpath
120.823 147.093 m
66.9480 134.934 l
S
newpath
93.6577 176.564 m
61.2525 145.540 l
S
newpath
45.0000 100.519 m
45.0000 107.481 l
S
newpath
21.6568 205.010 m
38.3158 151.465 l
S
newpath
61.0136 195.411 m
50.3488 151.836 l
S
1.00000 .533333 .333333 RG
newpath
21.5000 104.000 m
21.5000 115.874 11.8741 125.500 0.00000 125.500  c
-11.8741 125.500 -21.5000 115.874 -21.5000 104.000  c
-21.5000 92.1259 -11.8741 82.5000 0.00000 82.5000  c
11.8741 82.5000 21.5000 92.1259 21.5000 104.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
22.5000 104.000 m
22.5000 116.426 12.4264 126.500 0.00000 126.500  c
-12.4264 126.500 -22.5000 116.426 -22.5000 104.000  c
-22.5000 91.5736 -12.4264 81.5000 0.00000 81.5000  c
12.4264 81.5000 22.5000 91.5736 22.5000 104.000  c
h
21.5000 104.000 m
21.5000 115.874 11.8741 125.500 0.00000 125.500  c
-11.8741 125.500 -21.5000 115.874 -21.5000 104.000  c
-21.5000 92.1259 -11.8741 82.5000 0.00000 82.5000  c
11.8741 82.5000 21.5000 92.1259 21.5000 104.000  c
h
f*
0.00000 104.000 translate
1.00000 1.00000 scale
-15.1787 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.37500 -8.67188 l
4.23958 -8.67188 4.90365 -8.50781 5.36719 -8.17969  c
5.83073 -7.85156 6.06250 -7.38021 6.06250 -6.76562  c
6.06250 -5.71354 5.46875 -4.96354 4.28125 -4.51562  c
5.69792 -4.08854 6.40625 -3.30729 6.40625 -2.17188  c
6.40625 -1.46354 6.17188 -.924479 5.70312 -.554688  c
5.23438 -.184896 4.55729 0.00000 3.67188 0.00000  c
1.12500 0.00000 l
h
2.34375 -.921875 m
2.59375 -.921875 l
3.48958 -.921875 4.07292 -.979167 4.34375 -1.09375  c
4.85417 -1.30208 5.10938 -1.69792 5.10938 -2.28125  c
5.10938 -2.80208 4.87760 -3.23177 4.41406 -3.57031  c
3.95052 -3.90885 3.37500 -4.07812 2.68750 -4.07812  c
2.34375 -4.07812 l
2.34375 -.921875 l
h
2.34375 -4.85938 m
2.73438 -4.85938 l
3.39062 -4.85938 3.89844 -5.00000 4.25781 -5.28125  c
4.61719 -5.56250 4.79688 -5.95833 4.79688 -6.46875  c
4.79688 -7.32292 4.13542 -7.75000 2.81250 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.85938 l
h
12.4180 -3.31250 m
10.9336 -7.06250 l
9.46484 -3.31250 l
12.4180 -3.31250 l
h
13.7148 0.00000 m
12.7773 -2.40625 l
9.10547 -2.40625 l
8.15234 0.00000 l
6.99609 0.00000 l
10.4492 -8.67188 l
11.6680 -8.67188 l
15.0430 0.00000 l
13.7148 0.00000 l
h
18.3691 0.00000 m
18.3691 -7.75000 l
15.2910 -7.75000 l
15.2910 -8.67188 l
22.6660 -8.67188 l
22.6660 -7.75000 l
19.5879 -7.75000 l
19.5879 0.00000 l
18.3691 0.00000 l
h
23.7695 0.00000 m
23.7695 -1.01562 l
24.1029 -1.79688 24.7799 -2.65104 25.8008 -3.57812  c
26.4727 -4.17188 l
27.3164 -4.94271 27.7383 -5.70833 27.7383 -6.46875  c
27.7383 -6.94792 27.5951 -7.32552 27.3086 -7.60156  c
27.0221 -7.87760 26.6237 -8.01562 26.1133 -8.01562  c
25.5091 -8.01562 24.8008 -7.78646 23.9883 -7.32812  c
23.9883 -8.34375 l
24.7591 -8.70833 25.5195 -8.89062 26.2695 -8.89062  c
27.0820 -8.89062 27.7357 -8.67188 28.2305 -8.23438  c
28.7253 -7.79688 28.9727 -7.21875 28.9727 -6.50000  c
28.9727 -5.97917 28.8477 -5.51562 28.5977 -5.10938  c
28.3477 -4.70312 27.8841 -4.21354 27.2070 -3.64062  c
26.7695 -3.26562 l
25.8424 -2.48438 25.3060 -1.73438 25.1602 -1.01562  c
28.9258 -1.01562 l
28.9258 0.00000 l
23.7695 0.00000 l
h
f
[ 1.40500 0.00000 0.00000 1.40500 99.7264 30.2389 ] defaultmatrix matrix concatmatrix setmatrix
.945098 .286275 .200000 RG
newpath
110.566 .977617 m
89.4800 22.0634 l
68.3942 .977617 l
89.4800 -20.1082 l
h
f
0.00000 0.00000 0.00000 RG
newpath
89.4800 -21.5224 m
111.980 .977617 l
89.4800 23.4776 l
66.9800 .977617 l
h
110.566 .977617 m
89.4800 22.0634 l
68.3942 .977617 l
89.4800 -20.1082 l
h
f*
89.4800 .977617 translate
1.00000 1.00000 scale
-19.8428 4.42090 translate
newpath
1.10938 0.00000 m
1.10938 -8.67188 l
2.34375 -8.67188 l
2.34375 0.00000 l
1.10938 0.00000 l
h
11.0977 -.234375 m
10.0456 .0677083 9.12891 .218750 8.34766 .218750  c
6.96224 .218750 5.90234 -.174479 5.16797 -.960938  c
4.43359 -1.74740 4.06641 -2.87500 4.06641 -4.34375  c
4.06641 -5.78125 4.43880 -6.89844 5.18359 -7.69531  c
5.92839 -8.49219 6.97786 -8.89062 8.33203 -8.89062  c
9.20703 -8.89062 10.1237 -8.76042 11.0820 -8.50000  c
11.0820 -7.35938 l
9.88411 -7.76562 8.96745 -7.96875 8.33203 -7.96875  c
7.39453 -7.96875 6.66797 -7.65104 6.15234 -7.01562  c
5.63672 -6.38021 5.37891 -5.48438 5.37891 -4.32812  c
5.37891 -3.18229 5.65495 -2.29167 6.20703 -1.65625  c
6.75911 -1.02083 7.53516 -.703125 8.53516 -.703125  c
8.95182 -.703125 9.39453 -.776042 9.86328 -.921875  c
9.86328 -3.75000 l
11.0977 -3.75000 l
11.0977 -.234375 l
h
13.2539 0.00000 m
13.2539 -8.67188 l
18.0977 -8.67188 l
18.0977 -7.75000 l
14.4727 -7.75000 l
14.4727 -4.84375 l
17.5195 -4.84375 l
17.5195 -3.93750 l
14.4727 -3.93750 l
14.4727 0.00000 l
13.2539 0.00000 l
h
19.6875 0.00000 m
19.6875 -8.67188 l
21.9375 -8.67188 l
22.8021 -8.67188 23.4661 -8.50781 23.9297 -8.17969  c
24.3932 -7.85156 24.6250 -7.38021 24.6250 -6.76562  c
24.6250 -5.71354 24.0312 -4.96354 22.8438 -4.51562  c
24.2604 -4.08854 24.9688 -3.30729 24.9688 -2.17188  c
24.9688 -1.46354 24.7344 -.924479 24.2656 -.554688  c
23.7969 -.184896 23.1198 0.00000 22.2344 0.00000  c
19.6875 0.00000 l
h
20.9062 -.921875 m
21.1562 -.921875 l
22.0521 -.921875 22.6354 -.979167 22.9062 -1.09375  c
23.4167 -1.30208 23.6719 -1.69792 23.6719 -2.28125  c
23.6719 -2.80208 23.4401 -3.23177 22.9766 -3.57031  c
22.5130 -3.90885 21.9375 -4.07812 21.2500 -4.07812  c
20.9062 -4.07812 l
20.9062 -.921875 l
h
20.9062 -4.85938 m
21.2969 -4.85938 l
21.9531 -4.85938 22.4609 -5.00000 22.8203 -5.28125  c
23.1797 -5.56250 23.3594 -5.95833 23.3594 -6.46875  c
23.3594 -7.32292 22.6979 -7.75000 21.3750 -7.75000  c
20.9062 -7.75000 l
20.9062 -4.85938 l
h
26.5898 0.00000 m
26.5898 -8.67188 l
28.9492 -8.67188 l
29.9909 -8.67188 30.7409 -8.49479 31.1992 -8.14062  c
31.6576 -7.78646 31.8867 -7.20833 31.8867 -6.40625  c
31.8867 -5.47917 31.5742 -4.75521 30.9492 -4.23438  c
30.3242 -3.71354 29.4596 -3.45312 28.3555 -3.45312  c
27.8086 -3.45312 l
27.8086 0.00000 l
26.5898 0.00000 l
h
27.8086 -4.37500 m
28.3086 -4.37500 l
29.0378 -4.37500 29.6003 -4.54427 29.9961 -4.88281  c
30.3919 -5.22135 30.5898 -5.69792 30.5898 -6.31250  c
30.5898 -6.82292 30.4336 -7.19010 30.1211 -7.41406  c
29.8086 -7.63802 29.2878 -7.75000 28.5586 -7.75000  c
27.8086 -7.75000 l
27.8086 -4.37500 l
h
33.5508 .0312500 m
33.5508 -1.00000 l
34.1341 -.770833 34.6810 -.656250 35.1914 -.656250  c
35.7643 -.656250 36.2148 -.822917 36.5430 -1.15625  c
36.8711 -1.48958 37.0352 -1.95312 37.0352 -2.54688  c
37.0352 -3.84896 36.1393 -4.50000 34.3477 -4.50000  c
34.1393 -4.50000 33.9258 -4.48438 33.7070 -4.45312  c
33.7070 -8.67188 l
38.0977 -8.67188 l
38.0977 -7.67188 l
34.7227 -7.67188 l
34.7227 -5.37500 l
35.8372 -5.37500 36.7070 -5.11979 37.3320 -4.60938  c
37.9570 -4.09896 38.2695 -3.39062 38.2695 -2.48438  c
38.2695 -1.64062 37.9831 -.979167 37.4102 -.500000  c
36.8372 -.0208333 36.0508 .218750 35.0508 .218750  c
34.6133 .218750 34.1133 .156250 33.5508 .0312500  c
h
f
[ 1.40500 0.00000 0.00000 1.40500 99.7264 30.2389 ] defaultmatrix matrix concatmatrix setmatrix
.827451 .0549020 .200000 RG
newpath
160.266 151.236 m
139.180 172.322 l
118.094 151.236 l
139.180 130.150 l
h
f
0.00000 0.00000 0.00000 RG
newpath
139.180 128.736 m
161.680 151.236 l
139.180 173.736 l
116.680 151.236 l
h
160.266 151.236 m
139.180 172.322 l
118.094 151.236 l
139.180 130.150 l
h
f*
139.180 151.236 translate
1.00000 1.00000 scale
-48.8408 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
4.00000 -8.67188 l
4.86458 -8.67188 5.55990 -8.57552 6.08594 -8.38281  c
6.61198 -8.19010 7.06771 -7.86458 7.45312 -7.40625  c
8.06771 -6.68750 8.37500 -5.73438 8.37500 -4.54688  c
8.37500 -3.09896 7.99479 -1.97917 7.23438 -1.18750  c
6.47396 -.395833 5.40104 0.00000 4.01562 0.00000  c
1.12500 0.00000 l
h
2.34375 -.921875 m
3.92188 -.921875 l
5.04688 -.921875 5.84375 -1.22396 6.31250 -1.82812  c
6.82292 -2.47396 7.07812 -3.33854 7.07812 -4.42188  c
7.07812 -5.44271 6.82812 -6.24479 6.32812 -6.82812  c
6.02604 -7.18229 5.66667 -7.42448 5.25000 -7.55469  c
4.83333 -7.68490 4.20312 -7.75000 3.35938 -7.75000  c
2.34375 -7.75000 l
2.34375 -.921875 l
h
10.1133 0.00000 m
10.1133 -8.67188 l
11.2695 -8.67188 l
11.2695 -4.40625 l
14.7695 -8.67188 l
16.0039 -8.67188 l
12.6133 -4.53125 l
16.6133 0.00000 l
15.0508 0.00000 l
11.2695 -4.39062 l
11.2695 0.00000 l
10.1133 0.00000 l
h
17.9473 0.00000 m
17.9473 -8.67188 l
22.7910 -8.67188 l
22.7910 -7.75000 l
19.1660 -7.75000 l
19.1660 -4.84375 l
22.2129 -4.84375 l
22.2129 -3.93750 l
19.1660 -3.93750 l
19.1660 0.00000 l
17.9473 0.00000 l
h
23.8184 0.00000 m
23.8184 -.984375 l
28.4746 -7.75000 l
24.0996 -7.75000 l
24.0996 -8.67188 l
29.9434 -8.67188 l
29.9434 -7.75000 l
25.2871 -.984375 l
29.9434 -.984375 l
29.9434 0.00000 l
23.8184 0.00000 l
h
31.6660 2.31250 m
31.6660 -6.35938 l
32.8223 -6.35938 l
32.8223 -5.17188 l
33.2910 -6.05729 33.9993 -6.50000 34.9473 -6.50000  c
35.7077 -6.50000 36.3092 -6.22135 36.7520 -5.66406  c
37.1947 -5.10677 37.4160 -4.34375 37.4160 -3.37500  c
37.4160 -2.32292 37.1660 -1.47396 36.6660 -.828125  c
36.1660 -.182292 35.5098 .140625 34.6973 .140625  c
33.9473 .140625 33.3223 -.145833 32.8223 -.718750  c
32.8223 2.31250 l
31.6660 2.31250 l
h
32.8223 -1.51562 m
33.4160 -.984375 33.9837 -.718750 34.5254 -.718750  c
35.6296 -.718750 36.1816 -1.56771 36.1816 -3.26562  c
36.1816 -4.75521 35.6921 -5.50000 34.7129 -5.50000  c
34.0671 -5.50000 33.4368 -5.15104 32.8223 -4.45312  c
32.8223 -1.51562 l
h
39.8750 0.00000 m
39.9792 -.677083 40.1380 -1.26042 40.3516 -1.75000  c
40.5651 -2.23958 40.9375 -2.91667 41.4688 -3.78125  c
43.8281 -7.59375 l
39.3594 -7.59375 l
39.3594 -8.67188 l
44.9375 -8.67188 l
44.9375 -7.59375 l
42.7083 -4.31250 41.4635 -1.78125 41.2031 0.00000  c
39.8750 0.00000 l
h
47.7129 -4.50000 m
48.2650 -5.20833 48.9577 -5.56250 49.7910 -5.56250  c
50.5514 -5.56250 51.1738 -5.31250 51.6582 -4.81250  c
52.1426 -4.31250 52.3848 -3.67188 52.3848 -2.89062  c
52.3848 -1.98438 52.1139 -1.23958 51.5723 -.656250  c
51.0306 -.0729167 50.3431 .218750 49.5098 .218750  c
48.5514 .218750 47.8014 -.166667 47.2598 -.937500  c
46.7181 -1.70833 46.4473 -2.77604 46.4473 -4.14062  c
46.4473 -5.65104 46.7572 -6.82031 47.3770 -7.64844  c
47.9967 -8.47656 48.8691 -8.89062 49.9941 -8.89062  c
50.5150 -8.89062 51.1608 -8.78125 51.9316 -8.56250  c
51.9316 -7.56250 l
51.1191 -7.87500 50.4525 -8.03125 49.9316 -8.03125  c
48.4525 -8.03125 47.7129 -6.85417 47.7129 -4.50000  c
h
51.2129 -2.62500 m
51.2129 -3.28125 51.0671 -3.79688 50.7754 -4.17188  c
50.4837 -4.54688 50.0723 -4.73438 49.5410 -4.73438  c
49.0618 -4.73438 48.6452 -4.57031 48.2910 -4.24219  c
47.9368 -3.91406 47.7598 -3.52083 47.7598 -3.06250  c
47.7598 -2.33333 47.9264 -1.75000 48.2598 -1.31250  c
48.5931 -.875000 49.0358 -.656250 49.5879 -.656250  c
50.0879 -.656250 50.4837 -.833333 50.7754 -1.18750  c
51.0671 -1.54167 51.2129 -2.02083 51.2129 -2.62500  c
h
54.2383 0.00000 m
54.2383 -1.01562 l
54.5716 -1.79688 55.2487 -2.65104 56.2695 -3.57812  c
56.9414 -4.17188 l
57.7852 -4.94271 58.2070 -5.70833 58.2070 -6.46875  c
58.2070 -6.94792 58.0638 -7.32552 57.7773 -7.60156  c
57.4909 -7.87760 57.0924 -8.01562 56.5820 -8.01562  c
55.9779 -8.01562 55.2695 -7.78646 54.4570 -7.32812  c
54.4570 -8.34375 l
55.2279 -8.70833 55.9883 -8.89062 56.7383 -8.89062  c
57.5508 -8.89062 58.2044 -8.67188 58.6992 -8.23438  c
59.1940 -7.79688 59.4414 -7.21875 59.4414 -6.50000  c
59.4414 -5.97917 59.3164 -5.51562 59.0664 -5.10938  c
58.8164 -4.70312 58.3529 -4.21354 57.6758 -3.64062  c
57.2383 -3.26562 l
56.3112 -2.48438 55.7747 -1.73438 55.6289 -1.01562  c
59.3945 -1.01562 l
59.3945 0.00000 l
54.2383 0.00000 l
h
61.9512 0.00000 m
61.9512 -8.67188 l
66.7949 -8.67188 l
66.7949 -7.75000 l
63.1699 -7.75000 l
63.1699 -4.96875 l
66.2012 -4.96875 l
66.2012 -4.06250 l
63.1699 -4.06250 l
63.1699 -.921875 l
67.0449 -.921875 l
67.0449 0.00000 l
61.9512 0.00000 l
h
69.1426 0.00000 m
69.1426 -.875000 l
70.8770 -.875000 l
70.8770 -7.71875 l
69.1426 -7.28125 l
69.1426 -8.17188 l
72.0332 -8.89062 l
72.0332 -.875000 l
73.7676 -.875000 l
73.7676 0.00000 l
69.1426 0.00000 l
h
76.1367 -.0625000 m
76.1367 -1.14062 l
76.9701 -.817708 77.6211 -.656250 78.0898 -.656250  c
78.6419 -.656250 79.0924 -.817708 79.4414 -1.14062  c
79.7904 -1.46354 79.9648 -1.88021 79.9648 -2.39062  c
79.9648 -3.60938 79.1107 -4.21875 77.4023 -4.21875  c
76.9336 -4.21875 l
76.9336 -5.00000 l
77.3398 -5.00000 l
78.9440 -5.00000 79.7461 -5.56250 79.7461 -6.68750  c
79.7461 -7.57292 79.2201 -8.01562 78.1680 -8.01562  c
77.5846 -8.01562 76.9492 -7.85417 76.2617 -7.53125  c
76.2617 -8.54688 l
76.9388 -8.77604 77.6003 -8.89062 78.2461 -8.89062  c
80.0169 -8.89062 80.9023 -8.21875 80.9023 -6.87500  c
80.9023 -5.85417 80.2982 -5.13021 79.0898 -4.70312  c
80.4961 -4.38021 81.1992 -3.61458 81.1992 -2.40625  c
81.1992 -1.58333 80.9284 -.940104 80.3867 -.476562  c
79.8451 -.0130208 79.1055 .218750 78.1680 .218750  c
77.6263 .218750 76.9492 .125000 76.1367 -.0625000  c
h
84.3184 0.00000 m
84.3184 -.875000 l
86.0527 -.875000 l
86.0527 -7.71875 l
84.3184 -7.28125 l
84.3184 -8.17188 l
87.2090 -8.89062 l
87.2090 -.875000 l
88.9434 -.875000 l
88.9434 0.00000 l
84.3184 0.00000 l
h
91.0938 0.00000 m
91.0938 -1.01562 l
91.4271 -1.79688 92.1042 -2.65104 93.1250 -3.57812  c
93.7969 -4.17188 l
94.6406 -4.94271 95.0625 -5.70833 95.0625 -6.46875  c
95.0625 -6.94792 94.9193 -7.32552 94.6328 -7.60156  c
94.3464 -7.87760 93.9479 -8.01562 93.4375 -8.01562  c
92.8333 -8.01562 92.1250 -7.78646 91.3125 -7.32812  c
91.3125 -8.34375 l
92.0833 -8.70833 92.8438 -8.89062 93.5938 -8.89062  c
94.4062 -8.89062 95.0599 -8.67188 95.5547 -8.23438  c
96.0495 -7.79688 96.2969 -7.21875 96.2969 -6.50000  c
96.2969 -5.97917 96.1719 -5.51562 95.9219 -5.10938  c
95.6719 -4.70312 95.2083 -4.21354 94.5312 -3.64062  c
94.0938 -3.26562 l
93.1667 -2.48438 92.6302 -1.73438 92.4844 -1.01562  c
96.2500 -1.01562 l
96.2500 0.00000 l
91.0938 0.00000 l
h
f
[ 1.40500 0.00000 0.00000 1.40500 99.7264 30.2389 ] defaultmatrix matrix concatmatrix setmatrix
.909804 1.00000 .737255 RG
newpath
131.410 192.124 m
131.410 203.998 121.784 213.624 109.910 213.624  c
98.0361 213.624 88.4102 203.998 88.4102 192.124  c
88.4102 180.250 98.0361 170.624 109.910 170.624  c
121.784 170.624 131.410 180.250 131.410 192.124  c
h
f
0.00000 0.00000 0.00000 RG
newpath
132.410 192.124 m
132.410 204.550 122.337 214.624 109.910 214.624  c
97.4838 214.624 87.4102 204.550 87.4102 192.124  c
87.4102 179.698 97.4838 169.624 109.910 169.624  c
122.337 169.624 132.410 179.698 132.410 192.124  c
h
131.410 192.124 m
131.410 203.998 121.784 213.624 109.910 213.624  c
98.0361 213.624 88.4102 203.998 88.4102 192.124  c
88.4102 180.250 98.0361 170.624 109.910 170.624  c
121.784 170.624 131.410 180.250 131.410 192.124  c
h
f*
109.910 192.124 translate
1.00000 1.00000 scale
-19.2539 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
7.75781 0.00000 m
7.75781 -8.67188 l
12.6016 -8.67188 l
12.6016 -7.75000 l
8.97656 -7.75000 l
8.97656 -4.84375 l
12.0234 -4.84375 l
12.0234 -3.93750 l
8.97656 -3.93750 l
8.97656 0.00000 l
7.75781 0.00000 l
h
14.1914 0.00000 m
14.1914 -8.67188 l
17.0664 -8.67188 l
17.9310 -8.67188 18.6263 -8.57552 19.1523 -8.38281  c
19.6784 -8.19010 20.1341 -7.86458 20.5195 -7.40625  c
21.1341 -6.68750 21.4414 -5.73438 21.4414 -4.54688  c
21.4414 -3.09896 21.0612 -1.97917 20.3008 -1.18750  c
19.5404 -.395833 18.4674 0.00000 17.0820 0.00000  c
14.1914 0.00000 l
h
15.4102 -.921875 m
16.9883 -.921875 l
18.1133 -.921875 18.9102 -1.22396 19.3789 -1.82812  c
19.8893 -2.47396 20.1445 -3.33854 20.1445 -4.42188  c
20.1445 -5.44271 19.8945 -6.24479 19.3945 -6.82812  c
19.0924 -7.18229 18.7331 -7.42448 18.3164 -7.55469  c
17.8997 -7.68490 17.2695 -7.75000 16.4258 -7.75000  c
15.4102 -7.75000 l
15.4102 -.921875 l
h
23.1797 0.00000 m
23.1797 -8.67188 l
24.3828 -8.67188 l
28.7422 -1.96875 l
28.7422 -8.67188 l
29.8047 -8.67188 l
29.8047 0.00000 l
28.6016 0.00000 l
24.2266 -6.70312 l
24.2266 0.00000 l
23.1797 0.00000 l
h
32.7324 0.00000 m
32.7324 -.875000 l
34.4668 -.875000 l
34.4668 -7.71875 l
32.7324 -7.28125 l
32.7324 -8.17188 l
35.6230 -8.89062 l
35.6230 -.875000 l
37.3574 -.875000 l
37.3574 0.00000 l
32.7324 0.00000 l
h
f
[ 1.40500 0.00000 0.00000 1.40500 99.7264 30.2389 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .427451 .227451 RG
newpath
66.5000 78.0192 m
66.5000 89.8934 56.8741 99.5192 45.0000 99.5192  c
33.1259 99.5192 23.5000 89.8934 23.5000 78.0192  c
23.5000 66.1451 33.1259 56.5192 45.0000 56.5192  c
56.8741 56.5192 66.5000 66.1451 66.5000 78.0192  c
h
f
0.00000 0.00000 0.00000 RG
newpath
67.5000 78.0192 m
67.5000 90.4456 57.4264 100.519 45.0000 100.519  c
32.5736 100.519 22.5000 90.4456 22.5000 78.0192  c
22.5000 65.5928 32.5736 55.5192 45.0000 55.5192  c
57.4264 55.5192 67.5000 65.5928 67.5000 78.0192  c
h
66.5000 78.0192 m
66.5000 89.8934 56.8741 99.5192 45.0000 99.5192  c
33.1259 99.5192 23.5000 89.8934 23.5000 78.0192  c
23.5000 66.1451 33.1259 56.5192 45.0000 56.5192  c
56.8741 56.5192 66.5000 66.1451 66.5000 78.0192  c
h
f*
45.0000 78.0192 translate
1.00000 1.00000 scale
-15.1787 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.37500 -8.67188 l
4.23958 -8.67188 4.90365 -8.50781 5.36719 -8.17969  c
5.83073 -7.85156 6.06250 -7.38021 6.06250 -6.76562  c
6.06250 -5.71354 5.46875 -4.96354 4.28125 -4.51562  c
5.69792 -4.08854 6.40625 -3.30729 6.40625 -2.17188  c
6.40625 -1.46354 6.17188 -.924479 5.70312 -.554688  c
5.23438 -.184896 4.55729 0.00000 3.67188 0.00000  c
1.12500 0.00000 l
h
2.34375 -.921875 m
2.59375 -.921875 l
3.48958 -.921875 4.07292 -.979167 4.34375 -1.09375  c
4.85417 -1.30208 5.10938 -1.69792 5.10938 -2.28125  c
5.10938 -2.80208 4.87760 -3.23177 4.41406 -3.57031  c
3.95052 -3.90885 3.37500 -4.07812 2.68750 -4.07812  c
2.34375 -4.07812 l
2.34375 -.921875 l
h
2.34375 -4.85938 m
2.73438 -4.85938 l
3.39062 -4.85938 3.89844 -5.00000 4.25781 -5.28125  c
4.61719 -5.56250 4.79688 -5.95833 4.79688 -6.46875  c
4.79688 -7.32292 4.13542 -7.75000 2.81250 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.85938 l
h
12.4180 -3.31250 m
10.9336 -7.06250 l
9.46484 -3.31250 l
12.4180 -3.31250 l
h
13.7148 0.00000 m
12.7773 -2.40625 l
9.10547 -2.40625 l
8.15234 0.00000 l
6.99609 0.00000 l
10.4492 -8.67188 l
11.6680 -8.67188 l
15.0430 0.00000 l
13.7148 0.00000 l
h
18.3691 0.00000 m
18.3691 -7.75000 l
15.2910 -7.75000 l
15.2910 -8.67188 l
22.6660 -8.67188 l
22.6660 -7.75000 l
19.5879 -7.75000 l
19.5879 0.00000 l
18.3691 0.00000 l
h
23.9883 -.0625000 m
23.9883 -1.14062 l
24.8216 -.817708 25.4727 -.656250 25.9414 -.656250  c
26.4935 -.656250 26.9440 -.817708 27.2930 -1.14062  c
27.6419 -1.46354 27.8164 -1.88021 27.8164 -2.39062  c
27.8164 -3.60938 26.9622 -4.21875 25.2539 -4.21875  c
24.7852 -4.21875 l
24.7852 -5.00000 l
25.1914 -5.00000 l
26.7956 -5.00000 27.5977 -5.56250 27.5977 -6.68750  c
27.5977 -7.57292 27.0716 -8.01562 26.0195 -8.01562  c
25.4362 -8.01562 24.8008 -7.85417 24.1133 -7.53125  c
24.1133 -8.54688 l
24.7904 -8.77604 25.4518 -8.89062 26.0977 -8.89062  c
27.8685 -8.89062 28.7539 -8.21875 28.7539 -6.87500  c
28.7539 -5.85417 28.1497 -5.13021 26.9414 -4.70312  c
28.3477 -4.38021 29.0508 -3.61458 29.0508 -2.40625  c
29.0508 -1.58333 28.7799 -.940104 28.2383 -.476562  c
27.6966 -.0130208 26.9570 .218750 26.0195 .218750  c
25.4779 .218750 24.8008 .125000 23.9883 -.0625000  c
h
f
[ 1.40500 0.00000 0.00000 1.40500 99.7264 30.2389 ] defaultmatrix matrix concatmatrix setmatrix
.886275 .172549 .200000 RG
newpath
37.4034 222.171 m
16.3176 243.256 l
-4.76816 222.171 l
16.3176 201.085 l
h
f
0.00000 0.00000 0.00000 RG
newpath
16.3176 199.671 m
38.8176 222.171 l
16.3176 244.671 l
-6.18237 222.171 l
h
37.4034 222.171 m
16.3176 243.256 l
-4.76816 222.171 l
16.3176 201.085 l
h
f*
16.3176 222.171 translate
1.00000 1.00000 scale
-15.8906 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
13.1309 .218750 m
11.7871 .218750 10.7480 -.177083 10.0137 -.968750  c
9.27930 -1.76042 8.91211 -2.88021 8.91211 -4.32812  c
8.91211 -5.77604 9.28711 -6.89844 10.0371 -7.69531  c
10.7871 -8.49219 11.8392 -8.89062 13.1934 -8.89062  c
13.9746 -8.89062 14.8861 -8.76562 15.9277 -8.51562  c
15.9277 -7.35938 l
14.7402 -7.76562 13.8236 -7.96875 13.1777 -7.96875  c
12.2402 -7.96875 11.5137 -7.65104 10.9980 -7.01562  c
10.4824 -6.38021 10.2246 -5.47917 10.2246 -4.31250  c
10.2246 -3.20833 10.4980 -2.33854 11.0449 -1.70312  c
11.5918 -1.06771 12.3444 -.750000 13.3027 -.750000  c
14.1257 -.750000 15.0059 -1.00000 15.9434 -1.50000  c
15.9434 -.453125 l
15.0892 -.00520833 14.1517 .218750 13.1309 .218750  c
h
19.7930 0.00000 m
19.7930 -7.75000 l
16.7148 -7.75000 l
16.7148 -8.67188 l
24.0898 -8.67188 l
24.0898 -7.75000 l
21.0117 -7.75000 l
21.0117 0.00000 l
19.7930 0.00000 l
h
25.6465 .0312500 m
25.6465 -1.00000 l
26.2298 -.770833 26.7767 -.656250 27.2871 -.656250  c
27.8600 -.656250 28.3105 -.822917 28.6387 -1.15625  c
28.9668 -1.48958 29.1309 -1.95312 29.1309 -2.54688  c
29.1309 -3.84896 28.2350 -4.50000 26.4434 -4.50000  c
26.2350 -4.50000 26.0215 -4.48438 25.8027 -4.45312  c
25.8027 -8.67188 l
30.1934 -8.67188 l
30.1934 -7.67188 l
26.8184 -7.67188 l
26.8184 -5.37500 l
27.9329 -5.37500 28.8027 -5.11979 29.4277 -4.60938  c
30.0527 -4.09896 30.3652 -3.39062 30.3652 -2.48438  c
30.3652 -1.64062 30.0788 -.979167 29.5059 -.500000  c
28.9329 -.0208333 28.1465 .218750 27.1465 .218750  c
26.7090 .218750 26.2090 .156250 25.6465 .0312500  c
h
f
[ 1.40500 0.00000 0.00000 1.40500 99.7264 30.2389 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .533333 .333333 RG
newpath
87.8625 217.266 m
87.8625 229.140 78.2366 238.766 66.3625 238.766  c
54.4884 238.766 44.8625 229.140 44.8625 217.266  c
44.8625 205.392 54.4884 195.766 66.3625 195.766  c
78.2366 195.766 87.8625 205.392 87.8625 217.266  c
h
f
0.00000 0.00000 0.00000 RG
newpath
88.8625 217.266 m
88.8625 229.693 78.7889 239.766 66.3625 239.766  c
53.9361 239.766 43.8625 229.693 43.8625 217.266  c
43.8625 204.840 53.9361 194.766 66.3625 194.766  c
78.7889 194.766 88.8625 204.840 88.8625 217.266  c
h
87.8625 217.266 m
87.8625 229.140 78.2366 238.766 66.3625 238.766  c
54.4884 238.766 44.8625 229.140 44.8625 217.266  c
44.8625 205.392 54.4884 195.766 66.3625 195.766  c
78.2366 195.766 87.8625 205.392 87.8625 217.266  c
h
f*
66.3625 217.266 translate
1.00000 1.00000 scale
-14.6338 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
13.5566 -8.67188 l
13.5566 -7.75000 l
9.93164 -7.75000 l
9.93164 -4.96875 l
12.9629 -4.96875 l
12.9629 -4.06250 l
9.93164 -4.06250 l
9.93164 -.921875 l
13.8066 -.921875 l
13.8066 0.00000 l
8.71289 0.00000 l
h
15.2168 0.00000 m
15.2168 -8.67188 l
17.8418 -8.67188 l
18.6751 -8.67188 19.3132 -8.48958 19.7559 -8.12500  c
20.1986 -7.76042 20.4199 -7.22396 20.4199 -6.51562  c
20.4199 -5.35938 19.8366 -4.54167 18.6699 -4.06250  c
21.5605 0.00000 l
20.0449 0.00000 l
17.5762 -3.67188 l
16.4355 -3.67188 l
16.4355 0.00000 l
15.2168 0.00000 l
h
16.4355 -4.59375 m
16.8262 -4.59375 l
18.3783 -4.59375 19.1543 -5.19792 19.1543 -6.40625  c
19.1543 -7.30208 18.5033 -7.75000 17.2012 -7.75000  c
16.4355 -7.75000 l
16.4355 -4.59375 l
h
23.4922 0.00000 m
23.4922 -.875000 l
25.2266 -.875000 l
25.2266 -7.71875 l
23.4922 -7.28125 l
23.4922 -8.17188 l
26.3828 -8.89062 l
26.3828 -.875000 l
28.1172 -.875000 l
28.1172 0.00000 l
23.4922 0.00000 l
h
f
[ 1.40500 0.00000 0.00000 1.40500 99.7264 30.2389 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .631373 .431373 RG
newpath
66.5000 129.981 m
66.5000 141.855 56.8741 151.481 45.0000 151.481  c
33.1259 151.481 23.5000 141.855 23.5000 129.981  c
23.5000 118.107 33.1259 108.481 45.0000 108.481  c
56.8741 108.481 66.5000 118.107 66.5000 129.981  c
h
f
0.00000 0.00000 0.00000 RG
newpath
67.5000 129.981 m
67.5000 142.407 57.4264 152.481 45.0000 152.481  c
32.5736 152.481 22.5000 142.407 22.5000 129.981  c
22.5000 117.554 32.5736 107.481 45.0000 107.481  c
57.4264 107.481 67.5000 117.554 67.5000 129.981  c
h
66.5000 129.981 m
66.5000 141.855 56.8741 151.481 45.0000 151.481  c
33.1259 151.481 23.5000 141.855 23.5000 129.981  c
23.5000 118.107 33.1259 108.481 45.0000 108.481  c
56.8741 108.481 66.5000 118.107 66.5000 129.981  c
h
f*
45.0000 129.981 translate
1.00000 1.00000 scale
-15.8584 4.42090 translate
newpath
1.10938 0.00000 m
1.10938 -8.67188 l
2.34375 -8.67188 l
2.34375 0.00000 l
1.10938 0.00000 l
h
4.58203 0.00000 m
4.58203 -8.67188 l
6.28516 -8.67188 l
8.69141 -1.96875 l
11.1602 -8.67188 l
12.6758 -8.67188 l
12.6758 0.00000 l
11.5352 0.00000 l
11.5352 -7.06250 l
9.14453 -.578125 l
7.95703 -.578125 l
5.62891 -7.07812 l
5.62891 0.00000 l
4.58203 0.00000 l
h
14.9180 0.00000 m
14.9180 -8.67188 l
16.6211 -8.67188 l
19.0273 -1.96875 l
21.4961 -8.67188 l
23.0117 -8.67188 l
23.0117 0.00000 l
21.8711 0.00000 l
21.8711 -7.06250 l
19.4805 -.578125 l
18.2930 -.578125 l
15.9648 -7.07812 l
15.9648 0.00000 l
14.9180 0.00000 l
h
27.3164 0.00000 m
27.3164 -7.75000 l
24.2383 -7.75000 l
24.2383 -8.67188 l
31.6133 -8.67188 l
31.6133 -7.75000 l
28.5352 -7.75000 l
28.5352 0.00000 l
27.3164 0.00000 l
h
f
[ 1.40500 0.00000 0.00000 1.40500 99.7264 30.2389 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
