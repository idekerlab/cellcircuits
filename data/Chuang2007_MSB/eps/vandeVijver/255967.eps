%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 11:07:39 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.53868 0.00000 0.00000 1.53868 33.0816 134.257 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
63.4226 31.0774 m
110.671 44.8470 l
S
newpath
110.671 7.15295 m
63.4226 20.9226 l
S
newpath
15.2644 43.7452 m
31.7356 34.2356 l
S
newpath
15.2644 8.25481 m
31.7356 17.7644 l
S
newpath
1.00000 29.4808 m
1.00000 22.5192 l
S
newpath
190.722 63.7811 m
154.264 55.8977 l
S
.980392 .364706 .200000 RG
newpath
67.0858 26.0000 m
46.0000 47.0858 l
24.9142 26.0000 l
46.0000 4.91421 l
h
f
0.00000 0.00000 0.00000 RG
newpath
46.0000 3.50000 m
68.5000 26.0000 l
46.0000 48.5000 l
23.5000 26.0000 l
h
67.0858 26.0000 m
46.0000 47.0858 l
24.9142 26.0000 l
46.0000 4.91421 l
h
f*
46.0000 26.0000 translate
1.00000 1.00000 scale
-15.2432 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.96875 l
5.37500 -4.96875 l
5.37500 -4.06250 l
2.34375 -4.06250 l
2.34375 -.921875 l
6.21875 -.921875 l
6.21875 0.00000 l
1.12500 0.00000 l
h
7.61328 0.00000 m
7.61328 -8.67188 l
8.84766 -8.67188 l
8.84766 0.00000 l
7.61328 0.00000 l
h
11.0859 0.00000 m
11.0859 -8.67188 l
15.9297 -8.67188 l
15.9297 -7.75000 l
12.3047 -7.75000 l
12.3047 -4.84375 l
15.3516 -4.84375 l
15.3516 -3.93750 l
12.3047 -3.93750 l
12.3047 0.00000 l
11.0859 0.00000 l
h
20.9102 0.00000 m
20.9102 -2.45312 l
17.0039 -2.45312 l
17.0039 -3.32812 l
20.9102 -8.67188 l
22.0039 -8.67188 l
22.0039 -3.40625 l
23.1602 -3.40625 l
23.1602 -2.45312 l
22.0039 -2.45312 l
22.0039 0.00000 l
20.9102 0.00000 l
h
18.1445 -3.40625 m
20.9883 -3.40625 l
20.9883 -7.25000 l
18.1445 -3.40625 l
h
25.1074 0.00000 m
25.1074 -8.67188 l
29.9512 -8.67188 l
29.9512 -7.75000 l
26.3262 -7.75000 l
26.3262 -4.96875 l
29.3574 -4.96875 l
29.3574 -4.06250 l
26.3262 -4.06250 l
26.3262 -.921875 l
30.2012 -.921875 l
30.2012 0.00000 l
25.1074 0.00000 l
h
f
[ 1.53868 0.00000 0.00000 1.53868 33.0816 134.257 ] defaultmatrix matrix concatmatrix setmatrix
.933333 .262745 .200000 RG
newpath
22.0858 51.9808 m
1.00000 73.0665 l
-20.0858 51.9808 l
1.00000 30.8950 l
h
f
0.00000 0.00000 0.00000 RG
newpath
1.00000 29.4808 m
23.5000 51.9808 l
1.00000 74.4808 l
-21.5000 51.9808 l
h
22.0858 51.9808 m
1.00000 73.0665 l
-20.0858 51.9808 l
1.00000 30.8950 l
h
f*
1.00000 51.9808 translate
1.00000 1.00000 scale
-19.0166 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.96875 l
5.37500 -4.96875 l
5.37500 -4.06250 l
2.34375 -4.06250 l
2.34375 -.921875 l
6.21875 -.921875 l
6.21875 0.00000 l
1.12500 0.00000 l
h
7.61328 0.00000 m
7.61328 -8.67188 l
8.84766 -8.67188 l
8.84766 0.00000 l
7.61328 0.00000 l
h
11.0859 0.00000 m
11.0859 -8.67188 l
15.9297 -8.67188 l
15.9297 -7.75000 l
12.3047 -7.75000 l
12.3047 -4.84375 l
15.3516 -4.84375 l
15.3516 -3.93750 l
12.3047 -3.93750 l
12.3047 0.00000 l
11.0859 0.00000 l
h
17.6133 -.0625000 m
17.6133 -1.14062 l
18.4466 -.817708 19.0977 -.656250 19.5664 -.656250  c
20.1185 -.656250 20.5690 -.817708 20.9180 -1.14062  c
21.2669 -1.46354 21.4414 -1.88021 21.4414 -2.39062  c
21.4414 -3.60938 20.5872 -4.21875 18.8789 -4.21875  c
18.4102 -4.21875 l
18.4102 -5.00000 l
18.8164 -5.00000 l
20.4206 -5.00000 21.2227 -5.56250 21.2227 -6.68750  c
21.2227 -7.57292 20.6966 -8.01562 19.6445 -8.01562  c
19.0612 -8.01562 18.4258 -7.85417 17.7383 -7.53125  c
17.7383 -8.54688 l
18.4154 -8.77604 19.0768 -8.89062 19.7227 -8.89062  c
21.4935 -8.89062 22.3789 -8.21875 22.3789 -6.87500  c
22.3789 -5.85417 21.7747 -5.13021 20.5664 -4.70312  c
21.9727 -4.38021 22.6758 -3.61458 22.6758 -2.40625  c
22.6758 -1.58333 22.4049 -.940104 21.8633 -.476562  c
21.3216 -.0130208 20.5820 .218750 19.6445 .218750  c
19.1029 .218750 18.4258 .125000 17.6133 -.0625000  c
h
26.7949 .218750 m
26.2220 .218750 25.4824 .0885417 24.5762 -.171875  c
24.5762 -1.39062 l
25.5449 -.932292 26.3470 -.703125 26.9824 -.703125  c
27.4616 -.703125 27.8496 -.830729 28.1465 -1.08594  c
28.4434 -1.34115 28.5918 -1.67708 28.5918 -2.09375  c
28.5918 -2.42708 28.4954 -2.71354 28.3027 -2.95312  c
28.1100 -3.19271 27.7533 -3.45833 27.2324 -3.75000  c
26.6387 -4.09375 l
25.8991 -4.52083 25.3783 -4.91927 25.0762 -5.28906  c
24.7741 -5.65885 24.6230 -6.09375 24.6230 -6.59375  c
24.6230 -7.26042 24.8652 -7.80990 25.3496 -8.24219  c
25.8340 -8.67448 26.4512 -8.89062 27.2012 -8.89062  c
27.8678 -8.89062 28.5710 -8.78125 29.3105 -8.56250  c
29.3105 -7.43750 l
28.3939 -7.79167 27.7116 -7.96875 27.2637 -7.96875  c
26.8366 -7.96875 26.4850 -7.85677 26.2090 -7.63281  c
25.9329 -7.40885 25.7949 -7.12500 25.7949 -6.78125  c
25.7949 -6.48958 25.8965 -6.23177 26.0996 -6.00781  c
26.3027 -5.78385 26.6751 -5.51562 27.2168 -5.20312  c
27.8262 -4.85938 l
28.5762 -4.43229 29.0996 -4.02865 29.3965 -3.64844  c
29.6934 -3.26823 29.8418 -2.81250 29.8418 -2.28125  c
29.8418 -1.53125 29.5658 -.927083 29.0137 -.468750  c
28.4616 -.0104167 27.7220 .218750 26.7949 .218750  c
h
31.8047 -.0468750 m
31.8047 -1.03125 l
32.5443 -.781250 33.1693 -.656250 33.6797 -.656250  c
34.3984 -.656250 34.9609 -.960938 35.3672 -1.57031  c
35.7734 -2.17969 35.9766 -3.03125 35.9766 -4.12500  c
35.3932 -3.39583 34.7266 -3.03125 33.9766 -3.03125  c
33.2474 -3.03125 32.6302 -3.29948 32.1250 -3.83594  c
31.6198 -4.37240 31.3672 -5.03125 31.3672 -5.81250  c
31.3672 -6.69792 31.6354 -7.43229 32.1719 -8.01562  c
32.7083 -8.59896 33.3880 -8.89062 34.2109 -8.89062  c
35.1589 -8.89062 35.9036 -8.51302 36.4453 -7.75781  c
36.9870 -7.00260 37.2578 -5.96875 37.2578 -4.65625  c
37.2578 -3.16667 36.9271 -1.98177 36.2656 -1.10156  c
35.6042 -.221354 34.7057 .218750 33.5703 .218750  c
33.1224 .218750 32.5339 .130208 31.8047 -.0468750  c
h
32.5078 -6.03125 m
32.5078 -5.36458 32.6589 -4.83854 32.9609 -4.45312  c
33.2630 -4.06771 33.6745 -3.87500 34.1953 -3.87500  c
34.6849 -3.87500 35.1016 -4.03906 35.4453 -4.36719  c
35.7891 -4.69531 35.9609 -5.09375 35.9609 -5.56250  c
35.9609 -6.30208 35.7943 -6.89844 35.4609 -7.35156  c
35.1276 -7.80469 34.6901 -8.03125 34.1484 -8.03125  c
33.6380 -8.03125 33.2370 -7.85156 32.9453 -7.49219  c
32.6536 -7.13281 32.5078 -6.64583 32.5078 -6.03125  c
h
f
[ 1.53868 0.00000 0.00000 1.53868 33.0816 134.257 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .462745 .262745 RG
newpath
234.214 68.5365 m
234.214 80.4106 224.588 90.0365 212.714 90.0365  c
200.839 90.0365 191.214 80.4106 191.214 68.5365  c
191.214 56.6624 200.839 47.0365 212.714 47.0365  c
224.588 47.0365 234.214 56.6624 234.214 68.5365  c
h
f
0.00000 0.00000 0.00000 RG
newpath
235.214 68.5365 m
235.214 80.9629 225.140 91.0365 212.714 91.0365  c
200.287 91.0365 190.214 80.9629 190.214 68.5365  c
190.214 56.1101 200.287 46.0365 212.714 46.0365  c
225.140 46.0365 235.214 56.1101 235.214 68.5365  c
h
234.214 68.5365 m
234.214 80.4106 224.588 90.0365 212.714 90.0365  c
200.839 90.0365 191.214 80.4106 191.214 68.5365  c
191.214 56.6623 200.839 47.0365 212.714 47.0365  c
224.588 47.0365 234.214 56.6623 234.214 68.5365  c
h
f*
212.714 68.5365 translate
1.00000 1.00000 scale
-21.8350 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.84375 l
5.39062 -4.84375 l
5.39062 -3.93750 l
2.34375 -3.93750 l
2.34375 0.00000 l
1.12500 0.00000 l
h
7.55859 0.00000 m
7.55859 -8.67188 l
8.71484 -8.67188 l
8.71484 -4.40625 l
12.2148 -8.67188 l
13.4492 -8.67188 l
10.0586 -4.53125 l
14.0586 0.00000 l
12.4961 0.00000 l
8.71484 -4.39062 l
8.71484 0.00000 l
7.55859 0.00000 l
h
15.3926 0.00000 m
15.3926 -8.67188 l
17.6426 -8.67188 l
18.5072 -8.67188 19.1712 -8.50781 19.6348 -8.17969  c
20.0983 -7.85156 20.3301 -7.38021 20.3301 -6.76562  c
20.3301 -5.71354 19.7363 -4.96354 18.5488 -4.51562  c
19.9655 -4.08854 20.6738 -3.30729 20.6738 -2.17188  c
20.6738 -1.46354 20.4395 -.924479 19.9707 -.554688  c
19.5020 -.184896 18.8249 0.00000 17.9395 0.00000  c
15.3926 0.00000 l
h
16.6113 -.921875 m
16.8613 -.921875 l
17.7572 -.921875 18.3405 -.979167 18.6113 -1.09375  c
19.1217 -1.30208 19.3770 -1.69792 19.3770 -2.28125  c
19.3770 -2.80208 19.1452 -3.23177 18.6816 -3.57031  c
18.2181 -3.90885 17.6426 -4.07812 16.9551 -4.07812  c
16.6113 -4.07812 l
16.6113 -.921875 l
h
16.6113 -4.85938 m
17.0020 -4.85938 l
17.6582 -4.85938 18.1660 -5.00000 18.5254 -5.28125  c
18.8848 -5.56250 19.0645 -5.95833 19.0645 -6.46875  c
19.0645 -7.32292 18.4030 -7.75000 17.0801 -7.75000  c
16.6113 -7.75000 l
16.6113 -4.85938 l
h
22.2949 0.00000 m
22.2949 -8.67188 l
24.6543 -8.67188 l
25.6960 -8.67188 26.4460 -8.49479 26.9043 -8.14062  c
27.3626 -7.78646 27.5918 -7.20833 27.5918 -6.40625  c
27.5918 -5.47917 27.2793 -4.75521 26.6543 -4.23438  c
26.0293 -3.71354 25.1647 -3.45312 24.0605 -3.45312  c
23.5137 -3.45312 l
23.5137 0.00000 l
22.2949 0.00000 l
h
23.5137 -4.37500 m
24.0137 -4.37500 l
24.7428 -4.37500 25.3053 -4.54427 25.7012 -4.88281  c
26.0970 -5.22135 26.2949 -5.69792 26.2949 -6.31250  c
26.2949 -6.82292 26.1387 -7.19010 25.8262 -7.41406  c
25.5137 -7.63802 24.9928 -7.75000 24.2637 -7.75000  c
23.5137 -7.75000 l
23.5137 -4.37500 l
h
29.6152 0.00000 m
29.6152 -.875000 l
31.3496 -.875000 l
31.3496 -7.71875 l
29.6152 -7.28125 l
29.6152 -8.17188 l
32.5059 -8.89062 l
32.5059 -.875000 l
34.2402 -.875000 l
34.2402 0.00000 l
29.6152 0.00000 l
h
40.9062 -3.31250 m
39.4219 -7.06250 l
37.9531 -3.31250 l
40.9062 -3.31250 l
h
42.2031 0.00000 m
41.2656 -2.40625 l
37.5938 -2.40625 l
36.6406 0.00000 l
35.4844 0.00000 l
38.9375 -8.67188 l
40.1562 -8.67188 l
43.5312 0.00000 l
42.2031 0.00000 l
h
f
[ 1.53868 0.00000 0.00000 1.53868 33.0816 134.257 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
153.773 51.1423 m
153.773 63.0164 144.147 72.6423 132.273 72.6423  c
120.399 72.6423 110.773 63.0164 110.773 51.1423  c
110.773 39.2682 120.399 29.6423 132.273 29.6423  c
144.147 29.6423 153.773 39.2682 153.773 51.1423  c
h
f
0.00000 0.00000 0.00000 RG
newpath
154.773 51.1423 m
154.773 63.5687 144.699 73.6423 132.273 73.6423  c
119.846 73.6423 109.773 63.5687 109.773 51.1423  c
109.773 38.7159 119.846 28.6423 132.273 28.6423  c
144.699 28.6423 154.773 38.7159 154.773 51.1423  c
h
153.773 51.1423 m
153.773 63.0164 144.147 72.6423 132.273 72.6423  c
120.399 72.6423 110.773 63.0164 110.773 51.1423  c
110.773 39.2682 120.399 29.6423 132.273 29.6423  c
144.147 29.6423 153.773 39.2682 153.773 51.1423  c
h
f*
132.273 51.1423 translate
1.00000 1.00000 scale
-15.6826 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
12.1484 -3.31250 m
10.6641 -7.06250 l
9.19531 -3.31250 l
12.1484 -3.31250 l
h
13.4453 0.00000 m
12.5078 -2.40625 l
8.83594 -2.40625 l
7.88281 0.00000 l
6.72656 0.00000 l
10.1797 -8.67188 l
11.3984 -8.67188 l
14.7734 0.00000 l
13.4453 0.00000 l
h
16.0371 0.00000 m
16.0371 -8.67188 l
17.2402 -8.67188 l
21.5996 -1.96875 l
21.5996 -8.67188 l
22.6621 -8.67188 l
22.6621 0.00000 l
21.4590 0.00000 l
17.0840 -6.70312 l
17.0840 0.00000 l
16.0371 0.00000 l
h
24.9961 -.0625000 m
24.9961 -1.14062 l
25.8294 -.817708 26.4805 -.656250 26.9492 -.656250  c
27.5013 -.656250 27.9518 -.817708 28.3008 -1.14062  c
28.6497 -1.46354 28.8242 -1.88021 28.8242 -2.39062  c
28.8242 -3.60938 27.9701 -4.21875 26.2617 -4.21875  c
25.7930 -4.21875 l
25.7930 -5.00000 l
26.1992 -5.00000 l
27.8034 -5.00000 28.6055 -5.56250 28.6055 -6.68750  c
28.6055 -7.57292 28.0794 -8.01562 27.0273 -8.01562  c
26.4440 -8.01562 25.8086 -7.85417 25.1211 -7.53125  c
25.1211 -8.54688 l
25.7982 -8.77604 26.4596 -8.89062 27.1055 -8.89062  c
28.8763 -8.89062 29.7617 -8.21875 29.7617 -6.87500  c
29.7617 -5.85417 29.1576 -5.13021 27.9492 -4.70312  c
29.3555 -4.38021 30.0586 -3.61458 30.0586 -2.40625  c
30.0586 -1.58333 29.7878 -.940104 29.2461 -.476562  c
28.7044 -.0130208 27.9648 .218750 27.0273 .218750  c
26.4857 .218750 25.8086 .125000 24.9961 -.0625000  c
h
f
[ 1.53868 0.00000 0.00000 1.53868 33.0816 134.257 ] defaultmatrix matrix concatmatrix setmatrix
.886275 .172549 .200000 RG
newpath
22.0858 .0192375 m
1.00000 21.1050 l
-20.0858 .0192375 l
1.00000 -21.0665 l
h
f
0.00000 0.00000 0.00000 RG
newpath
1.00000 -22.4808 m
23.5000 .0192375 l
1.00000 22.5192 l
-21.5000 .0192375 l
h
22.0858 .0192375 m
1.00000 21.1050 l
-20.0858 .0192375 l
1.00000 -21.0665 l
h
f*
1.00000 .0192375 translate
1.00000 1.00000 scale
-20.1211 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.96875 l
5.37500 -4.96875 l
5.37500 -4.06250 l
2.34375 -4.06250 l
2.34375 -.921875 l
6.21875 -.921875 l
6.21875 0.00000 l
1.12500 0.00000 l
h
7.61328 0.00000 m
7.61328 -8.67188 l
8.84766 -8.67188 l
8.84766 0.00000 l
7.61328 0.00000 l
h
11.0859 0.00000 m
11.0859 -8.67188 l
15.9297 -8.67188 l
15.9297 -7.75000 l
12.3047 -7.75000 l
12.3047 -4.84375 l
15.3516 -4.84375 l
15.3516 -3.93750 l
12.3047 -3.93750 l
12.3047 0.00000 l
11.0859 0.00000 l
h
20.9102 0.00000 m
20.9102 -2.45312 l
17.0039 -2.45312 l
17.0039 -3.32812 l
20.9102 -8.67188 l
22.0039 -8.67188 l
22.0039 -3.40625 l
23.1602 -3.40625 l
23.1602 -2.45312 l
22.0039 -2.45312 l
22.0039 0.00000 l
20.9102 0.00000 l
h
18.1445 -3.40625 m
20.9883 -3.40625 l
20.9883 -7.25000 l
18.1445 -3.40625 l
h
31.6230 -.234375 m
30.5710 .0677083 29.6543 .218750 28.8730 .218750  c
27.4876 .218750 26.4277 -.174479 25.6934 -.960938  c
24.9590 -1.74740 24.5918 -2.87500 24.5918 -4.34375  c
24.5918 -5.78125 24.9642 -6.89844 25.7090 -7.69531  c
26.4538 -8.49219 27.5033 -8.89062 28.8574 -8.89062  c
29.7324 -8.89062 30.6491 -8.76042 31.6074 -8.50000  c
31.6074 -7.35938 l
30.4095 -7.76562 29.4928 -7.96875 28.8574 -7.96875  c
27.9199 -7.96875 27.1934 -7.65104 26.6777 -7.01562  c
26.1621 -6.38021 25.9043 -5.48438 25.9043 -4.32812  c
25.9043 -3.18229 26.1803 -2.29167 26.7324 -1.65625  c
27.2845 -1.02083 28.0605 -.703125 29.0605 -.703125  c
29.4772 -.703125 29.9199 -.776042 30.3887 -.921875  c
30.3887 -3.75000 l
31.6230 -3.75000 l
31.6230 -.234375 l
h
34.4668 0.00000 m
34.4668 -.875000 l
36.2012 -.875000 l
36.2012 -7.71875 l
34.4668 -7.28125 l
34.4668 -8.17188 l
37.3574 -8.89062 l
37.3574 -.875000 l
39.0918 -.875000 l
39.0918 0.00000 l
34.4668 0.00000 l
h
f
[ 1.53868 0.00000 0.00000 1.53868 33.0816 134.257 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .431373 .231373 RG
newpath
153.773 .857702 m
153.773 12.7318 144.147 22.3577 132.273 22.3577  c
120.399 22.3577 110.773 12.7318 110.773 .857702  c
110.773 -11.0164 120.399 -20.6423 132.273 -20.6423  c
144.147 -20.6423 153.773 -11.0164 153.773 .857702  c
h
f
0.00000 0.00000 0.00000 RG
newpath
154.773 .857702 m
154.773 13.2841 144.699 23.3577 132.273 23.3577  c
119.846 23.3577 109.773 13.2841 109.773 .857702  c
109.773 -11.5687 119.846 -21.6423 132.273 -21.6423  c
144.699 -21.6423 154.773 -11.5687 154.773 .857702  c
h
153.773 .857702 m
153.773 12.7318 144.147 22.3577 132.273 22.3577  c
120.399 22.3577 110.773 12.7318 110.773 .857702  c
110.773 -11.0164 120.399 -20.6423 132.273 -20.6423  c
144.147 -20.6423 153.773 -11.0164 153.773 .857702  c
h
f*
132.273 .857702 translate
1.00000 1.00000 scale
-22.7139 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.82812 -8.67188 l
5.23438 -1.96875 l
7.70312 -8.67188 l
9.21875 -8.67188 l
9.21875 0.00000 l
8.07812 0.00000 l
8.07812 -7.06250 l
5.68750 -.578125 l
4.50000 -.578125 l
2.17188 -7.07812 l
2.17188 0.00000 l
1.12500 0.00000 l
h
15.8516 -3.31250 m
14.3672 -7.06250 l
12.8984 -3.31250 l
15.8516 -3.31250 l
h
17.1484 0.00000 m
16.2109 -2.40625 l
12.5391 -2.40625 l
11.5859 0.00000 l
10.4297 0.00000 l
13.8828 -8.67188 l
15.1016 -8.67188 l
18.4766 0.00000 l
17.1484 0.00000 l
h
26.2559 -.234375 m
25.2038 .0677083 24.2871 .218750 23.5059 .218750  c
22.1204 .218750 21.0605 -.174479 20.3262 -.960938  c
19.5918 -1.74740 19.2246 -2.87500 19.2246 -4.34375  c
19.2246 -5.78125 19.5970 -6.89844 20.3418 -7.69531  c
21.0866 -8.49219 22.1361 -8.89062 23.4902 -8.89062  c
24.3652 -8.89062 25.2819 -8.76042 26.2402 -8.50000  c
26.2402 -7.35938 l
25.0423 -7.76562 24.1257 -7.96875 23.4902 -7.96875  c
22.5527 -7.96875 21.8262 -7.65104 21.3105 -7.01562  c
20.7949 -6.38021 20.5371 -5.48438 20.5371 -4.32812  c
20.5371 -3.18229 20.8132 -2.29167 21.3652 -1.65625  c
21.9173 -1.02083 22.6934 -.703125 23.6934 -.703125  c
24.1100 -.703125 24.5527 -.776042 25.0215 -.921875  c
25.0215 -3.75000 l
26.2559 -3.75000 l
26.2559 -.234375 l
h
31.8965 .218750 m
30.6986 .218750 29.7324 -.197917 28.9980 -1.03125  c
28.2637 -1.86458 27.8965 -2.96875 27.8965 -4.34375  c
27.8965 -5.71875 28.2637 -6.82031 28.9980 -7.64844  c
29.7324 -8.47656 30.7194 -8.89062 31.9590 -8.89062  c
33.1777 -8.89062 34.1569 -8.47917 34.8965 -7.65625  c
35.6361 -6.83333 36.0059 -5.73438 36.0059 -4.35938  c
36.0059 -2.95312 35.6361 -1.83854 34.8965 -1.01562  c
34.1569 -.192708 33.1569 .218750 31.8965 .218750  c
h
31.9121 -.703125 m
32.7975 -.703125 33.4824 -1.02344 33.9668 -1.66406  c
34.4512 -2.30469 34.6934 -3.20312 34.6934 -4.35938  c
34.6934 -5.49479 34.4512 -6.38021 33.9668 -7.01562  c
33.4824 -7.65104 32.8132 -7.96875 31.9590 -7.96875  c
31.0944 -7.96875 30.4199 -7.64844 29.9355 -7.00781  c
29.4512 -6.36719 29.2090 -5.47917 29.2090 -4.34375  c
29.2090 -3.21875 29.4486 -2.33073 29.9277 -1.67969  c
30.4069 -1.02865 31.0684 -.703125 31.9121 -.703125  c
h
37.7344 0.00000 m
37.7344 -8.67188 l
38.9531 -8.67188 l
38.9531 -5.01562 l
43.0781 -5.01562 l
43.0781 -8.67188 l
44.3125 -8.67188 l
44.3125 0.00000 l
43.0781 0.00000 l
43.0781 -4.09375 l
38.9531 -4.09375 l
38.9531 0.00000 l
37.7344 0.00000 l
h
f
[ 1.53868 0.00000 0.00000 1.53868 33.0816 134.257 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
