%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 11:07:22 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ .999466 0.00000 0.00000 .999466 196.501 22.0882 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
1.00000 60.2000 m
1.00000 22.9000 l
S
newpath
1.00000 105.200 m
1.00000 142.500 l
S
newpath
1.00000 269.800 m
1.00000 307.100 l
S
newpath
1.00000 187.500 m
1.00000 224.800 l
S
.909804 .219608 .200000 RG
newpath
22.0858 82.7000 m
1.00000 103.786 l
-20.0858 82.7000 l
1.00000 61.6142 l
h
f
0.00000 0.00000 0.00000 RG
newpath
1.00000 60.2000 m
23.5000 82.7000 l
1.00000 105.200 l
-21.5000 82.7000 l
h
22.0858 82.7000 m
1.00000 103.786 l
-20.0858 82.7000 l
1.00000 61.6142 l
h
f*
1.00000 82.7000 translate
1.00000 1.00000 scale
-19.2041 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.96875 l
5.37500 -4.96875 l
5.37500 -4.06250 l
2.34375 -4.06250 l
2.34375 -.921875 l
6.21875 -.921875 l
6.21875 0.00000 l
1.12500 0.00000 l
h
8.75391 0.00000 m
6.51953 -8.67188 l
7.70703 -8.67188 l
9.47266 -1.82812 l
11.1133 -8.67188 l
12.3008 -8.67188 l
13.8477 -1.92188 l
15.7539 -8.67188 l
16.7539 -8.67188 l
14.3164 0.00000 l
13.0977 0.00000 l
11.5664 -6.68750 l
9.97266 0.00000 l
8.75391 0.00000 l
h
19.5820 .218750 m
19.0091 .218750 18.2695 .0885417 17.3633 -.171875  c
17.3633 -1.39062 l
18.3320 -.932292 19.1341 -.703125 19.7695 -.703125  c
20.2487 -.703125 20.6367 -.830729 20.9336 -1.08594  c
21.2305 -1.34115 21.3789 -1.67708 21.3789 -2.09375  c
21.3789 -2.42708 21.2826 -2.71354 21.0898 -2.95312  c
20.8971 -3.19271 20.5404 -3.45833 20.0195 -3.75000  c
19.4258 -4.09375 l
18.6862 -4.52083 18.1654 -4.91927 17.8633 -5.28906  c
17.5612 -5.65885 17.4102 -6.09375 17.4102 -6.59375  c
17.4102 -7.26042 17.6523 -7.80990 18.1367 -8.24219  c
18.6211 -8.67448 19.2383 -8.89062 19.9883 -8.89062  c
20.6549 -8.89062 21.3581 -8.78125 22.0977 -8.56250  c
22.0977 -7.43750 l
21.1810 -7.79167 20.4987 -7.96875 20.0508 -7.96875  c
19.6237 -7.96875 19.2721 -7.85677 18.9961 -7.63281  c
18.7201 -7.40885 18.5820 -7.12500 18.5820 -6.78125  c
18.5820 -6.48958 18.6836 -6.23177 18.8867 -6.00781  c
19.0898 -5.78385 19.4622 -5.51562 20.0039 -5.20312  c
20.6133 -4.85938 l
21.3633 -4.43229 21.8867 -4.02865 22.1836 -3.64844  c
22.4805 -3.26823 22.6289 -2.81250 22.6289 -2.28125  c
22.6289 -1.53125 22.3529 -.927083 21.8008 -.468750  c
21.2487 -.0104167 20.5091 .218750 19.5820 .218750  c
h
24.3574 0.00000 m
24.3574 -8.67188 l
26.9824 -8.67188 l
27.8158 -8.67188 28.4538 -8.48958 28.8965 -8.12500  c
29.3392 -7.76042 29.5605 -7.22396 29.5605 -6.51562  c
29.5605 -5.35938 28.9772 -4.54167 27.8105 -4.06250  c
30.7012 0.00000 l
29.1855 0.00000 l
26.7168 -3.67188 l
25.5762 -3.67188 l
25.5762 0.00000 l
24.3574 0.00000 l
h
25.5762 -4.59375 m
25.9668 -4.59375 l
27.5189 -4.59375 28.2949 -5.19792 28.2949 -6.40625  c
28.2949 -7.30208 27.6439 -7.75000 26.3418 -7.75000  c
25.5762 -7.75000 l
25.5762 -4.59375 l
h
32.6328 0.00000 m
32.6328 -.875000 l
34.3672 -.875000 l
34.3672 -7.71875 l
32.6328 -7.28125 l
32.6328 -8.17188 l
35.5234 -8.89062 l
35.5234 -.875000 l
37.2578 -.875000 l
37.2578 0.00000 l
32.6328 0.00000 l
h
f
[ .999466 0.00000 0.00000 .999466 196.501 22.0882 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .572549 .372549 RG
newpath
22.5000 .400000 m
22.5000 12.2741 12.8741 21.9000 1.00000 21.9000  c
-10.8741 21.9000 -20.5000 12.2741 -20.5000 .400000  c
-20.5000 -11.4741 -10.8741 -21.1000 1.00000 -21.1000  c
12.8741 -21.1000 22.5000 -11.4741 22.5000 .400000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
23.5000 .400000 m
23.5000 12.8264 13.4264 22.9000 1.00000 22.9000  c
-11.4264 22.9000 -21.5000 12.8264 -21.5000 .400000  c
-21.5000 -12.0264 -11.4264 -22.1000 1.00000 -22.1000  c
13.4264 -22.1000 23.5000 -12.0264 23.5000 .400000  c
h
22.5000 .400000 m
22.5000 12.2741 12.8741 21.9000 1.00000 21.9000  c
-10.8741 21.9000 -20.5000 12.2741 -20.5000 .400000  c
-20.5000 -11.4741 -10.8741 -21.1000 1.00000 -21.1000  c
12.8741 -21.1000 22.5000 -11.4741 22.5000 .400000  c
h
f*
1.00000 .400000 translate
1.00000 1.00000 scale
-23.1768 4.42090 translate
newpath
3.18750 0.00000 m
3.18750 -7.75000 l
.109375 -7.75000 l
.109375 -8.67188 l
7.48438 -8.67188 l
7.48438 -7.75000 l
4.40625 -7.75000 l
4.40625 0.00000 l
3.18750 0.00000 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
10.4160 -8.67188 l
12.8223 -1.96875 l
15.2910 -8.67188 l
16.8066 -8.67188 l
16.8066 0.00000 l
15.6660 0.00000 l
15.6660 -7.06250 l
13.2754 -.578125 l
12.0879 -.578125 l
9.75977 -7.07812 l
9.75977 0.00000 l
8.71289 0.00000 l
h
20.7363 .218750 m
20.1634 .218750 19.4238 .0885417 18.5176 -.171875  c
18.5176 -1.39062 l
19.4863 -.932292 20.2884 -.703125 20.9238 -.703125  c
21.4030 -.703125 21.7910 -.830729 22.0879 -1.08594  c
22.3848 -1.34115 22.5332 -1.67708 22.5332 -2.09375  c
22.5332 -2.42708 22.4368 -2.71354 22.2441 -2.95312  c
22.0514 -3.19271 21.6947 -3.45833 21.1738 -3.75000  c
20.5801 -4.09375 l
19.8405 -4.52083 19.3197 -4.91927 19.0176 -5.28906  c
18.7155 -5.65885 18.5645 -6.09375 18.5645 -6.59375  c
18.5645 -7.26042 18.8066 -7.80990 19.2910 -8.24219  c
19.7754 -8.67448 20.3926 -8.89062 21.1426 -8.89062  c
21.8092 -8.89062 22.5124 -8.78125 23.2520 -8.56250  c
23.2520 -7.43750 l
22.3353 -7.79167 21.6530 -7.96875 21.2051 -7.96875  c
20.7780 -7.96875 20.4264 -7.85677 20.1504 -7.63281  c
19.8743 -7.40885 19.7363 -7.12500 19.7363 -6.78125  c
19.7363 -6.48958 19.8379 -6.23177 20.0410 -6.00781  c
20.2441 -5.78385 20.6165 -5.51562 21.1582 -5.20312  c
21.7676 -4.85938 l
22.5176 -4.43229 23.0410 -4.02865 23.3379 -3.64844  c
23.6348 -3.26823 23.7832 -2.81250 23.7832 -2.28125  c
23.7832 -1.53125 23.5072 -.927083 22.9551 -.468750  c
22.4030 -.0104167 21.6634 .218750 20.7363 .218750  c
h
25.5117 0.00000 m
25.5117 -8.67188 l
27.7617 -8.67188 l
28.6263 -8.67188 29.2904 -8.50781 29.7539 -8.17969  c
30.2174 -7.85156 30.4492 -7.38021 30.4492 -6.76562  c
30.4492 -5.71354 29.8555 -4.96354 28.6680 -4.51562  c
30.0846 -4.08854 30.7930 -3.30729 30.7930 -2.17188  c
30.7930 -1.46354 30.5586 -.924479 30.0898 -.554688  c
29.6211 -.184896 28.9440 0.00000 28.0586 0.00000  c
25.5117 0.00000 l
h
26.7305 -.921875 m
26.9805 -.921875 l
27.8763 -.921875 28.4596 -.979167 28.7305 -1.09375  c
29.2409 -1.30208 29.4961 -1.69792 29.4961 -2.28125  c
29.4961 -2.80208 29.2643 -3.23177 28.8008 -3.57031  c
28.3372 -3.90885 27.7617 -4.07812 27.0742 -4.07812  c
26.7305 -4.07812 l
26.7305 -.921875 l
h
26.7305 -4.85938 m
27.1211 -4.85938 l
27.7773 -4.85938 28.2852 -5.00000 28.6445 -5.28125  c
29.0039 -5.56250 29.1836 -5.95833 29.1836 -6.46875  c
29.1836 -7.32292 28.5221 -7.75000 27.1992 -7.75000  c
26.7305 -7.75000 l
26.7305 -4.85938 l
h
35.8047 0.00000 m
35.8047 -2.45312 l
31.8984 -2.45312 l
31.8984 -3.32812 l
35.8047 -8.67188 l
36.8984 -8.67188 l
36.8984 -3.40625 l
38.0547 -3.40625 l
38.0547 -2.45312 l
36.8984 -2.45312 l
36.8984 0.00000 l
35.8047 0.00000 l
h
33.0391 -3.40625 m
35.8828 -3.40625 l
35.8828 -7.25000 l
33.0391 -3.40625 l
h
41.8770 0.00000 m
41.8770 -3.62500 l
38.9707 -8.67188 l
40.3770 -8.67188 l
42.6270 -4.76562 l
45.0645 -8.67188 l
46.2051 -8.67188 l
43.0957 -3.64062 l
43.0957 0.00000 l
41.8770 0.00000 l
h
f
[ .999466 0.00000 0.00000 .999466 196.501 22.0882 ] defaultmatrix matrix concatmatrix setmatrix
.941176 .286275 .200000 RG
newpath
22.0858 247.300 m
1.00000 268.386 l
-20.0858 247.300 l
1.00000 226.214 l
h
f
0.00000 0.00000 0.00000 RG
newpath
1.00000 224.800 m
23.5000 247.300 l
1.00000 269.800 l
-21.5000 247.300 l
h
22.0858 247.300 m
1.00000 268.386 l
-20.0858 247.300 l
1.00000 226.214 l
h
f*
1.00000 247.300 translate
1.00000 1.00000 scale
-23.8799 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
15.2754 1.73438 m
13.9212 1.29688 12.7806 .770833 11.8535 .156250  c
11.4889 .197917 11.2077 .218750 11.0098 .218750  c
9.84310 .218750 8.89518 -.203125 8.16602 -1.04688  c
7.43685 -1.89062 7.07227 -2.98958 7.07227 -4.34375  c
7.07227 -5.71875 7.43945 -6.82031 8.17383 -7.64844  c
8.90820 -8.47656 9.89518 -8.89062 11.1348 -8.89062  c
12.3639 -8.89062 13.3457 -8.47656 14.0801 -7.64844  c
14.8145 -6.82031 15.1816 -5.70833 15.1816 -4.31250  c
15.1816 -2.32292 14.4421 -.947917 12.9629 -.187500  c
13.9629 .250000 14.9941 .562500 16.0566 .750000  c
15.2754 1.73438 l
h
11.0879 -.703125 m
11.9733 -.703125 12.6582 -1.02083 13.1426 -1.65625  c
13.6270 -2.29167 13.8691 -3.19271 13.8691 -4.35938  c
13.8691 -5.48438 13.6270 -6.36719 13.1426 -7.00781  c
12.6582 -7.64844 11.9889 -7.96875 11.1348 -7.96875  c
10.2702 -7.96875 9.59570 -7.64844 9.11133 -7.00781  c
8.62695 -6.36719 8.38477 -5.47917 8.38477 -4.34375  c
8.38477 -3.21875 8.62435 -2.33073 9.10352 -1.67969  c
9.58268 -1.02865 10.2441 -.703125 11.0879 -.703125  c
h
18.5977 .218750 m
18.0247 .218750 17.2852 .0885417 16.3789 -.171875  c
16.3789 -1.39062 l
17.3477 -.932292 18.1497 -.703125 18.7852 -.703125  c
19.2643 -.703125 19.6523 -.830729 19.9492 -1.08594  c
20.2461 -1.34115 20.3945 -1.67708 20.3945 -2.09375  c
20.3945 -2.42708 20.2982 -2.71354 20.1055 -2.95312  c
19.9128 -3.19271 19.5560 -3.45833 19.0352 -3.75000  c
18.4414 -4.09375 l
17.7018 -4.52083 17.1810 -4.91927 16.8789 -5.28906  c
16.5768 -5.65885 16.4258 -6.09375 16.4258 -6.59375  c
16.4258 -7.26042 16.6680 -7.80990 17.1523 -8.24219  c
17.6367 -8.67448 18.2539 -8.89062 19.0039 -8.89062  c
19.6706 -8.89062 20.3737 -8.78125 21.1133 -8.56250  c
21.1133 -7.43750 l
20.1966 -7.79167 19.5143 -7.96875 19.0664 -7.96875  c
18.6393 -7.96875 18.2878 -7.85677 18.0117 -7.63281  c
17.7357 -7.40885 17.5977 -7.12500 17.5977 -6.78125  c
17.5977 -6.48958 17.6992 -6.23177 17.9023 -6.00781  c
18.1055 -5.78385 18.4779 -5.51562 19.0195 -5.20312  c
19.6289 -4.85938 l
20.3789 -4.43229 20.9023 -4.02865 21.1992 -3.64844  c
21.4961 -3.26823 21.6445 -2.81250 21.6445 -2.28125  c
21.6445 -1.53125 21.3685 -.927083 20.8164 -.468750  c
20.2643 -.0104167 19.5247 .218750 18.5977 .218750  c
h
25.4355 0.00000 m
25.4355 -7.75000 l
22.3574 -7.75000 l
22.3574 -8.67188 l
29.7324 -8.67188 l
29.7324 -7.75000 l
26.6543 -7.75000 l
26.6543 0.00000 l
25.4355 0.00000 l
h
30.9609 0.00000 m
30.9609 -8.67188 l
32.6641 -8.67188 l
35.0703 -1.96875 l
37.5391 -8.67188 l
39.0547 -8.67188 l
39.0547 0.00000 l
37.9141 0.00000 l
37.9141 -7.06250 l
35.5234 -.578125 l
34.3359 -.578125 l
32.0078 -7.07812 l
32.0078 0.00000 l
30.9609 0.00000 l
h
41.9844 0.00000 m
41.9844 -.875000 l
43.7188 -.875000 l
43.7188 -7.71875 l
41.9844 -7.28125 l
41.9844 -8.17188 l
44.8750 -8.89062 l
44.8750 -.875000 l
46.6094 -.875000 l
46.6094 0.00000 l
41.9844 0.00000 l
h
f
[ .999466 0.00000 0.00000 .999466 196.501 22.0882 ] defaultmatrix matrix concatmatrix setmatrix
.929412 .258824 .200000 RG
newpath
22.0858 165.000 m
1.00000 186.086 l
-20.0858 165.000 l
1.00000 143.914 l
h
f
0.00000 0.00000 0.00000 RG
newpath
1.00000 142.500 m
23.5000 165.000 l
1.00000 187.500 l
-21.5000 165.000 l
h
22.0858 165.000 m
1.00000 186.086 l
-20.0858 165.000 l
1.00000 143.914 l
h
f*
1.00000 165.000 translate
1.00000 1.00000 scale
-24.1553 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
13.1035 -3.31250 m
11.6191 -7.06250 l
10.1504 -3.31250 l
13.1035 -3.31250 l
h
14.4004 0.00000 m
13.4629 -2.40625 l
9.79102 -2.40625 l
8.83789 0.00000 l
7.68164 0.00000 l
11.1348 -8.67188 l
12.3535 -8.67188 l
15.7285 0.00000 l
14.4004 0.00000 l
h
16.9922 0.00000 m
16.9922 -8.67188 l
19.8672 -8.67188 l
20.7318 -8.67188 21.4271 -8.57552 21.9531 -8.38281  c
22.4792 -8.19010 22.9349 -7.86458 23.3203 -7.40625  c
23.9349 -6.68750 24.2422 -5.73438 24.2422 -4.54688  c
24.2422 -3.09896 23.8620 -1.97917 23.1016 -1.18750  c
22.3411 -.395833 21.2682 0.00000 19.8828 0.00000  c
16.9922 0.00000 l
h
18.2109 -.921875 m
19.7891 -.921875 l
20.9141 -.921875 21.7109 -1.22396 22.1797 -1.82812  c
22.6901 -2.47396 22.9453 -3.33854 22.9453 -4.42188  c
22.9453 -5.44271 22.6953 -6.24479 22.1953 -6.82812  c
21.8932 -7.18229 21.5339 -7.42448 21.1172 -7.55469  c
20.7005 -7.68490 20.0703 -7.75000 19.2266 -7.75000  c
18.2109 -7.75000 l
18.2109 -.921875 l
h
25.8555 0.00000 m
25.8555 -1.01562 l
26.1888 -1.79688 26.8659 -2.65104 27.8867 -3.57812  c
28.5586 -4.17188 l
29.4023 -4.94271 29.8242 -5.70833 29.8242 -6.46875  c
29.8242 -6.94792 29.6810 -7.32552 29.3945 -7.60156  c
29.1081 -7.87760 28.7096 -8.01562 28.1992 -8.01562  c
27.5951 -8.01562 26.8867 -7.78646 26.0742 -7.32812  c
26.0742 -8.34375 l
26.8451 -8.70833 27.6055 -8.89062 28.3555 -8.89062  c
29.1680 -8.89062 29.8216 -8.67188 30.3164 -8.23438  c
30.8112 -7.79688 31.0586 -7.21875 31.0586 -6.50000  c
31.0586 -5.97917 30.9336 -5.51562 30.6836 -5.10938  c
30.4336 -4.70312 29.9701 -4.21354 29.2930 -3.64062  c
28.8555 -3.26562 l
27.9284 -2.48438 27.3919 -1.73438 27.2461 -1.01562  c
31.0117 -1.01562 l
31.0117 0.00000 l
25.8555 0.00000 l
h
33.6621 -.0625000 m
33.6621 -1.14062 l
34.4954 -.817708 35.1465 -.656250 35.6152 -.656250  c
36.1673 -.656250 36.6178 -.817708 36.9668 -1.14062  c
37.3158 -1.46354 37.4902 -1.88021 37.4902 -2.39062  c
37.4902 -3.60938 36.6361 -4.21875 34.9277 -4.21875  c
34.4590 -4.21875 l
34.4590 -5.00000 l
34.8652 -5.00000 l
36.4694 -5.00000 37.2715 -5.56250 37.2715 -6.68750  c
37.2715 -7.57292 36.7454 -8.01562 35.6934 -8.01562  c
35.1100 -8.01562 34.4746 -7.85417 33.7871 -7.53125  c
33.7871 -8.54688 l
34.4642 -8.77604 35.1257 -8.89062 35.7715 -8.89062  c
37.5423 -8.89062 38.4277 -8.21875 38.4277 -6.87500  c
38.4277 -5.85417 37.8236 -5.13021 36.6152 -4.70312  c
38.0215 -4.38021 38.7246 -3.61458 38.7246 -2.40625  c
38.7246 -1.58333 38.4538 -.940104 37.9121 -.476562  c
37.3704 -.0130208 36.6309 .218750 35.6934 .218750  c
35.1517 .218750 34.4746 .125000 33.6621 -.0625000  c
h
45.5469 -3.31250 m
44.0625 -7.06250 l
42.5938 -3.31250 l
45.5469 -3.31250 l
h
46.8438 0.00000 m
45.9062 -2.40625 l
42.2344 -2.40625 l
41.2812 0.00000 l
40.1250 0.00000 l
43.5781 -8.67188 l
44.7969 -8.67188 l
48.1719 0.00000 l
46.8438 0.00000 l
h
f
[ .999466 0.00000 0.00000 .999466 196.501 22.0882 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .729412 .529412 RG
newpath
22.5000 329.600 m
22.5000 341.474 12.8741 351.100 1.00000 351.100  c
-10.8741 351.100 -20.5000 341.474 -20.5000 329.600  c
-20.5000 317.726 -10.8741 308.100 1.00000 308.100  c
12.8741 308.100 22.5000 317.726 22.5000 329.600  c
h
f
0.00000 0.00000 0.00000 RG
newpath
23.5000 329.600 m
23.5000 342.026 13.4264 352.100 1.00000 352.100  c
-11.4264 352.100 -21.5000 342.026 -21.5000 329.600  c
-21.5000 317.174 -11.4264 307.100 1.00000 307.100  c
13.4264 307.100 23.5000 317.174 23.5000 329.600  c
h
22.5000 329.600 m
22.5000 341.474 12.8741 351.100 1.00000 351.100  c
-10.8741 351.100 -20.5000 341.474 -20.5000 329.600  c
-20.5000 317.726 -10.8741 308.100 1.00000 308.100  c
12.8741 308.100 22.5000 317.726 22.5000 329.600  c
h
f*
1.00000 329.600 translate
1.00000 1.00000 scale
-34.3096 4.42090 translate
newpath
7.64062 -.234375 m
6.58854 .0677083 5.67188 .218750 4.89062 .218750  c
3.50521 .218750 2.44531 -.174479 1.71094 -.960938  c
.976562 -1.74740 .609375 -2.87500 .609375 -4.34375  c
.609375 -5.78125 .981771 -6.89844 1.72656 -7.69531  c
2.47135 -8.49219 3.52083 -8.89062 4.87500 -8.89062  c
5.75000 -8.89062 6.66667 -8.76042 7.62500 -8.50000  c
7.62500 -7.35938 l
6.42708 -7.76562 5.51042 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.48438 1.92188 -4.32812  c
1.92188 -3.18229 2.19792 -2.29167 2.75000 -1.65625  c
3.30208 -1.02083 4.07812 -.703125 5.07812 -.703125  c
5.49479 -.703125 5.93750 -.776042 6.40625 -.921875  c
6.40625 -3.75000 l
7.64062 -3.75000 l
7.64062 -.234375 l
h
14.1875 -3.31250 m
12.7031 -7.06250 l
11.2344 -3.31250 l
14.1875 -3.31250 l
h
15.4844 0.00000 m
14.5469 -2.40625 l
10.8750 -2.40625 l
9.92188 0.00000 l
8.76562 0.00000 l
12.2188 -8.67188 l
13.4375 -8.67188 l
16.8125 0.00000 l
15.4844 0.00000 l
h
18.0762 0.00000 m
18.0762 -8.67188 l
20.3262 -8.67188 l
21.1908 -8.67188 21.8548 -8.50781 22.3184 -8.17969  c
22.7819 -7.85156 23.0137 -7.38021 23.0137 -6.76562  c
23.0137 -5.71354 22.4199 -4.96354 21.2324 -4.51562  c
22.6491 -4.08854 23.3574 -3.30729 23.3574 -2.17188  c
23.3574 -1.46354 23.1230 -.924479 22.6543 -.554688  c
22.1855 -.184896 21.5085 0.00000 20.6230 0.00000  c
18.0762 0.00000 l
h
19.2949 -.921875 m
19.5449 -.921875 l
20.4408 -.921875 21.0241 -.979167 21.2949 -1.09375  c
21.8053 -1.30208 22.0605 -1.69792 22.0605 -2.28125  c
22.0605 -2.80208 21.8288 -3.23177 21.3652 -3.57031  c
20.9017 -3.90885 20.3262 -4.07812 19.6387 -4.07812  c
19.2949 -4.07812 l
19.2949 -.921875 l
h
19.2949 -4.85938 m
19.6855 -4.85938 l
20.3418 -4.85938 20.8496 -5.00000 21.2090 -5.28125  c
21.5684 -5.56250 21.7480 -5.95833 21.7480 -6.46875  c
21.7480 -7.32292 21.0866 -7.75000 19.7637 -7.75000  c
19.2949 -7.75000 l
19.2949 -4.85938 l
h
29.3691 -3.31250 m
27.8848 -7.06250 l
26.4160 -3.31250 l
29.3691 -3.31250 l
h
30.6660 0.00000 m
29.7285 -2.40625 l
26.0566 -2.40625 l
25.1035 0.00000 l
23.9473 0.00000 l
27.4004 -8.67188 l
28.6191 -8.67188 l
31.9941 0.00000 l
30.6660 0.00000 l
h
33.2578 0.00000 m
33.2578 -8.67188 l
35.8828 -8.67188 l
36.7161 -8.67188 37.3542 -8.48958 37.7969 -8.12500  c
38.2396 -7.76042 38.4609 -7.22396 38.4609 -6.51562  c
38.4609 -5.35938 37.8776 -4.54167 36.7109 -4.06250  c
39.6016 0.00000 l
38.0859 0.00000 l
35.6172 -3.67188 l
34.4766 -3.67188 l
34.4766 0.00000 l
33.2578 0.00000 l
h
34.4766 -4.59375 m
34.8672 -4.59375 l
36.4193 -4.59375 37.1953 -5.19792 37.1953 -6.40625  c
37.1953 -7.30208 36.5443 -7.75000 35.2422 -7.75000  c
34.4766 -7.75000 l
34.4766 -4.59375 l
h
45.2363 -3.31250 m
43.7520 -7.06250 l
42.2832 -3.31250 l
45.2363 -3.31250 l
h
46.5332 0.00000 m
45.5957 -2.40625 l
41.9238 -2.40625 l
40.9707 0.00000 l
39.8145 0.00000 l
43.2676 -8.67188 l
44.4863 -8.67188 l
47.8613 0.00000 l
46.5332 0.00000 l
h
49.1250 0.00000 m
49.1250 -8.67188 l
51.4844 -8.67188 l
52.5260 -8.67188 53.2760 -8.49479 53.7344 -8.14062  c
54.1927 -7.78646 54.4219 -7.20833 54.4219 -6.40625  c
54.4219 -5.47917 54.1094 -4.75521 53.4844 -4.23438  c
52.8594 -3.71354 51.9948 -3.45312 50.8906 -3.45312  c
50.3438 -3.45312 l
50.3438 0.00000 l
49.1250 0.00000 l
h
50.3438 -4.37500 m
50.8438 -4.37500 l
51.5729 -4.37500 52.1354 -4.54427 52.5312 -4.88281  c
52.9271 -5.22135 53.1250 -5.69792 53.1250 -6.31250  c
53.1250 -6.82292 52.9688 -7.19010 52.6562 -7.41406  c
52.3438 -7.63802 51.8229 -7.75000 51.0938 -7.75000  c
50.3438 -7.75000 l
50.3438 -4.37500 l
h
55.7578 0.00000 m
55.7578 -8.67188 l
56.9766 -8.67188 l
56.9766 -.921875 l
60.8828 -.921875 l
60.8828 0.00000 l
55.7578 0.00000 l
h
62.0312 0.00000 m
62.0312 -1.01562 l
62.3646 -1.79688 63.0417 -2.65104 64.0625 -3.57812  c
64.7344 -4.17188 l
65.5781 -4.94271 66.0000 -5.70833 66.0000 -6.46875  c
66.0000 -6.94792 65.8568 -7.32552 65.5703 -7.60156  c
65.2839 -7.87760 64.8854 -8.01562 64.3750 -8.01562  c
63.7708 -8.01562 63.0625 -7.78646 62.2500 -7.32812  c
62.2500 -8.34375 l
63.0208 -8.70833 63.7812 -8.89062 64.5312 -8.89062  c
65.3438 -8.89062 65.9974 -8.67188 66.4922 -8.23438  c
66.9870 -7.79688 67.2344 -7.21875 67.2344 -6.50000  c
67.2344 -5.97917 67.1094 -5.51562 66.8594 -5.10938  c
66.6094 -4.70312 66.1458 -4.21354 65.4688 -3.64062  c
65.0312 -3.26562 l
64.1042 -2.48438 63.5677 -1.73438 63.4219 -1.01562  c
67.1875 -1.01562 l
67.1875 0.00000 l
62.0312 0.00000 l
h
f
[ .999466 0.00000 0.00000 .999466 196.501 22.0882 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
