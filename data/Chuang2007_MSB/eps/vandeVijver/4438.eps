%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 11:09:29 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.50090 0.00000 0.00000 1.50090 42.7816 33.7191 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
145.867 83.4783 m
184.281 85.6618 l
S
newpath
12.4858 92.8120 m
50.1105 126.389 l
S
newpath
17.3835 176.817 m
50.1105 147.611 l
S
newpath
126.797 22.4978 m
124.681 59.7377 l
S
newpath
73.8895 126.389 m
106.617 97.1828 l
S
newpath
100.173 191.033 m
71.3149 150.185 l
S
.854902 .105882 .200000 RG
newpath
226.657 86.8720 m
205.571 107.958 l
184.485 86.8720 l
205.571 65.7862 l
h
f
0.00000 0.00000 0.00000 RG
newpath
205.571 64.3720 m
228.071 86.8720 l
205.571 109.372 l
183.071 86.8720 l
h
226.657 86.8720 m
205.571 107.958 l
184.485 86.8720 l
205.571 65.7862 l
h
f*
205.571 86.8720 translate
1.00000 1.00000 scale
-19.5996 4.42090 translate
newpath
4.60938 .218750 m
3.41146 .218750 2.44531 -.197917 1.71094 -1.03125  c
.976562 -1.86458 .609375 -2.96875 .609375 -4.34375  c
.609375 -5.71875 .976562 -6.82031 1.71094 -7.64844  c
2.44531 -8.47656 3.43229 -8.89062 4.67188 -8.89062  c
5.89062 -8.89062 6.86979 -8.47917 7.60938 -7.65625  c
8.34896 -6.83333 8.71875 -5.73438 8.71875 -4.35938  c
8.71875 -2.95312 8.34896 -1.83854 7.60938 -1.01562  c
6.86979 -.192708 5.86979 .218750 4.60938 .218750  c
h
4.62500 -.703125 m
5.51042 -.703125 6.19531 -1.02344 6.67969 -1.66406  c
7.16406 -2.30469 7.40625 -3.20312 7.40625 -4.35938  c
7.40625 -5.49479 7.16406 -6.38021 6.67969 -7.01562  c
6.19531 -7.65104 5.52604 -7.96875 4.67188 -7.96875  c
3.80729 -7.96875 3.13281 -7.64844 2.64844 -7.00781  c
2.16406 -6.36719 1.92188 -5.47917 1.92188 -4.34375  c
1.92188 -3.21875 2.16146 -2.33073 2.64062 -1.67969  c
3.11979 -1.02865 3.78125 -.703125 4.62500 -.703125  c
h
10.4473 0.00000 m
10.4473 -8.67188 l
13.0723 -8.67188 l
13.9056 -8.67188 14.5436 -8.48958 14.9863 -8.12500  c
15.4290 -7.76042 15.6504 -7.22396 15.6504 -6.51562  c
15.6504 -5.35938 15.0671 -4.54167 13.9004 -4.06250  c
16.7910 0.00000 l
15.2754 0.00000 l
12.8066 -3.67188 l
11.6660 -3.67188 l
11.6660 0.00000 l
10.4473 0.00000 l
h
11.6660 -4.59375 m
12.0566 -4.59375 l
13.6087 -4.59375 14.3848 -5.19792 14.3848 -6.40625  c
14.3848 -7.30208 13.7337 -7.75000 12.4316 -7.75000  c
11.6660 -7.75000 l
11.6660 -4.59375 l
h
21.7383 .218750 m
20.3945 .218750 19.3555 -.177083 18.6211 -.968750  c
17.8867 -1.76042 17.5195 -2.88021 17.5195 -4.32812  c
17.5195 -5.77604 17.8945 -6.89844 18.6445 -7.69531  c
19.3945 -8.49219 20.4466 -8.89062 21.8008 -8.89062  c
22.5820 -8.89062 23.4935 -8.76562 24.5352 -8.51562  c
24.5352 -7.35938 l
23.3477 -7.76562 22.4310 -7.96875 21.7852 -7.96875  c
20.8477 -7.96875 20.1211 -7.65104 19.6055 -7.01562  c
19.0898 -6.38021 18.8320 -5.47917 18.8320 -4.31250  c
18.8320 -3.20833 19.1055 -2.33854 19.6523 -1.70312  c
20.1992 -1.06771 20.9518 -.750000 21.9102 -.750000  c
22.7331 -.750000 23.6133 -1.00000 24.5508 -1.50000  c
24.5508 -.453125 l
23.6966 -.00520833 22.7591 .218750 21.7383 .218750  c
h
27.2754 -4.50000 m
27.8275 -5.20833 28.5202 -5.56250 29.3535 -5.56250  c
30.1139 -5.56250 30.7363 -5.31250 31.2207 -4.81250  c
31.7051 -4.31250 31.9473 -3.67188 31.9473 -2.89062  c
31.9473 -1.98438 31.6764 -1.23958 31.1348 -.656250  c
30.5931 -.0729167 29.9056 .218750 29.0723 .218750  c
28.1139 .218750 27.3639 -.166667 26.8223 -.937500  c
26.2806 -1.70833 26.0098 -2.77604 26.0098 -4.14062  c
26.0098 -5.65104 26.3197 -6.82031 26.9395 -7.64844  c
27.5592 -8.47656 28.4316 -8.89062 29.5566 -8.89062  c
30.0775 -8.89062 30.7233 -8.78125 31.4941 -8.56250  c
31.4941 -7.56250 l
30.6816 -7.87500 30.0150 -8.03125 29.4941 -8.03125  c
28.0150 -8.03125 27.2754 -6.85417 27.2754 -4.50000  c
h
30.7754 -2.62500 m
30.7754 -3.28125 30.6296 -3.79688 30.3379 -4.17188  c
30.0462 -4.54688 29.6348 -4.73438 29.1035 -4.73438  c
28.6243 -4.73438 28.2077 -4.57031 27.8535 -4.24219  c
27.4993 -3.91406 27.3223 -3.52083 27.3223 -3.06250  c
27.3223 -2.33333 27.4889 -1.75000 27.8223 -1.31250  c
28.1556 -.875000 28.5983 -.656250 29.1504 -.656250  c
29.6504 -.656250 30.0462 -.833333 30.3379 -1.18750  c
30.6296 -1.54167 30.7754 -2.02083 30.7754 -2.62500  c
h
33.9258 0.00000 m
33.9258 -8.67188 l
35.1445 -8.67188 l
35.1445 -.921875 l
39.0508 -.921875 l
39.0508 0.00000 l
33.9258 0.00000 l
h
f
[ 1.50090 0.00000 0.00000 1.50090 42.7816 33.7191 ] defaultmatrix matrix concatmatrix setmatrix
.941176 .282353 .200000 RG
newpath
21.6821 82.2015 m
.596333 103.287 l
-20.4895 82.2015 l
.596333 61.1157 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.596333 59.7015 m
23.0963 82.2015 l
.596333 104.701 l
-21.9037 82.2015 l
h
21.6821 82.2015 m
.596333 103.287 l
-20.4895 82.2015 l
.596333 61.1157 l
h
f*
.596333 82.2015 translate
1.00000 1.00000 scale
-24.0205 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
11.1152 .218750 m
10.5423 .218750 9.80273 .0885417 8.89648 -.171875  c
8.89648 -1.39062 l
9.86523 -.932292 10.6673 -.703125 11.3027 -.703125  c
11.7819 -.703125 12.1699 -.830729 12.4668 -1.08594  c
12.7637 -1.34115 12.9121 -1.67708 12.9121 -2.09375  c
12.9121 -2.42708 12.8158 -2.71354 12.6230 -2.95312  c
12.4303 -3.19271 12.0736 -3.45833 11.5527 -3.75000  c
10.9590 -4.09375 l
10.2194 -4.52083 9.69857 -4.91927 9.39648 -5.28906  c
9.09440 -5.65885 8.94336 -6.09375 8.94336 -6.59375  c
8.94336 -7.26042 9.18555 -7.80990 9.66992 -8.24219  c
10.1543 -8.67448 10.7715 -8.89062 11.5215 -8.89062  c
12.1882 -8.89062 12.8913 -8.78125 13.6309 -8.56250  c
13.6309 -7.43750 l
12.7142 -7.79167 12.0319 -7.96875 11.5840 -7.96875  c
11.1569 -7.96875 10.8053 -7.85677 10.5293 -7.63281  c
10.2533 -7.40885 10.1152 -7.12500 10.1152 -6.78125  c
10.1152 -6.48958 10.2168 -6.23177 10.4199 -6.00781  c
10.6230 -5.78385 10.9954 -5.51562 11.5371 -5.20312  c
12.1465 -4.85938 l
12.8965 -4.43229 13.4199 -4.02865 13.7168 -3.64844  c
14.0137 -3.26823 14.1621 -2.81250 14.1621 -2.28125  c
14.1621 -1.53125 13.8861 -.927083 13.3340 -.468750  c
12.7819 -.0104167 12.0423 .218750 11.1152 .218750  c
h
15.8906 0.00000 m
15.8906 -8.67188 l
17.0938 -8.67188 l
21.4531 -1.96875 l
21.4531 -8.67188 l
22.5156 -8.67188 l
22.5156 0.00000 l
21.3125 0.00000 l
16.9375 -6.70312 l
16.9375 0.00000 l
15.8906 0.00000 l
h
24.7559 0.00000 m
24.7559 -8.67188 l
25.9121 -8.67188 l
25.9121 -4.40625 l
29.4121 -8.67188 l
30.6465 -8.67188 l
27.2559 -4.53125 l
31.2559 0.00000 l
29.6934 0.00000 l
25.9121 -4.39062 l
25.9121 0.00000 l
24.7559 0.00000 l
h
33.2773 0.00000 m
33.2773 -.875000 l
35.0117 -.875000 l
35.0117 -7.71875 l
33.2773 -7.28125 l
33.2773 -8.17188 l
36.1680 -8.89062 l
36.1680 -.875000 l
37.9023 -.875000 l
37.9023 0.00000 l
33.2773 0.00000 l
h
40.1777 0.00000 m
40.1777 -8.67188 l
43.0527 -8.67188 l
43.9173 -8.67188 44.6126 -8.57552 45.1387 -8.38281  c
45.6647 -8.19010 46.1204 -7.86458 46.5059 -7.40625  c
47.1204 -6.68750 47.4277 -5.73438 47.4277 -4.54688  c
47.4277 -3.09896 47.0475 -1.97917 46.2871 -1.18750  c
45.5267 -.395833 44.4538 0.00000 43.0684 0.00000  c
40.1777 0.00000 l
h
41.3965 -.921875 m
42.9746 -.921875 l
44.0996 -.921875 44.8965 -1.22396 45.3652 -1.82812  c
45.8757 -2.47396 46.1309 -3.33854 46.1309 -4.42188  c
46.1309 -5.44271 45.8809 -6.24479 45.3809 -6.82812  c
45.0788 -7.18229 44.7194 -7.42448 44.3027 -7.55469  c
43.8861 -7.68490 43.2559 -7.75000 42.4121 -7.75000  c
41.3965 -7.75000 l
41.3965 -.921875 l
h
f
[ 1.50090 0.00000 0.00000 1.50090 42.7816 33.7191 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .690196 .490196 RG
newpath
22.0963 191.799 m
22.0963 203.673 12.4705 213.299 .596333 213.299  c
-11.2778 213.299 -20.9037 203.673 -20.9037 191.799  c
-20.9037 179.924 -11.2778 170.299 .596333 170.299  c
12.4705 170.299 22.0963 179.924 22.0963 191.799  c
h
f
0.00000 0.00000 0.00000 RG
newpath
23.0963 191.799 m
23.0963 204.225 13.0227 214.299 .596333 214.299  c
-11.8301 214.299 -21.9037 204.225 -21.9037 191.799  c
-21.9037 179.372 -11.8301 169.299 .596333 169.299  c
13.0227 169.299 23.0963 179.372 23.0963 191.799  c
h
22.0963 191.799 m
22.0963 203.673 12.4705 213.299 .596333 213.299  c
-11.2778 213.299 -20.9037 203.673 -20.9037 191.799  c
-20.9037 179.924 -11.2778 170.299 .596333 170.299  c
12.4705 170.299 22.0963 179.924 22.0963 191.799  c
h
f*
.596333 191.799 translate
1.00000 1.00000 scale
-16.6025 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.82812 -8.67188 l
5.23438 -1.96875 l
7.70312 -8.67188 l
9.21875 -8.67188 l
9.21875 0.00000 l
8.07812 0.00000 l
8.07812 -7.06250 l
5.68750 -.578125 l
4.50000 -.578125 l
2.17188 -7.07812 l
2.17188 0.00000 l
1.12500 0.00000 l
h
13.1484 .218750 m
12.5755 .218750 11.8359 .0885417 10.9297 -.171875  c
10.9297 -1.39062 l
11.8984 -.932292 12.7005 -.703125 13.3359 -.703125  c
13.8151 -.703125 14.2031 -.830729 14.5000 -1.08594  c
14.7969 -1.34115 14.9453 -1.67708 14.9453 -2.09375  c
14.9453 -2.42708 14.8490 -2.71354 14.6562 -2.95312  c
14.4635 -3.19271 14.1068 -3.45833 13.5859 -3.75000  c
12.9922 -4.09375 l
12.2526 -4.52083 11.7318 -4.91927 11.4297 -5.28906  c
11.1276 -5.65885 10.9766 -6.09375 10.9766 -6.59375  c
10.9766 -7.26042 11.2188 -7.80990 11.7031 -8.24219  c
12.1875 -8.67448 12.8047 -8.89062 13.5547 -8.89062  c
14.2214 -8.89062 14.9245 -8.78125 15.6641 -8.56250  c
15.6641 -7.43750 l
14.7474 -7.79167 14.0651 -7.96875 13.6172 -7.96875  c
13.1901 -7.96875 12.8385 -7.85677 12.5625 -7.63281  c
12.2865 -7.40885 12.1484 -7.12500 12.1484 -6.78125  c
12.1484 -6.48958 12.2500 -6.23177 12.4531 -6.00781  c
12.6562 -5.78385 13.0286 -5.51562 13.5703 -5.20312  c
14.1797 -4.85938 l
14.9297 -4.43229 15.4531 -4.02865 15.7500 -3.64844  c
16.0469 -3.26823 16.1953 -2.81250 16.1953 -2.28125  c
16.1953 -1.53125 15.9193 -.927083 15.3672 -.468750  c
14.8151 -.0104167 14.0755 .218750 13.1484 .218750  c
h
17.9238 0.00000 m
17.9238 -8.67188 l
19.1426 -8.67188 l
19.1426 -5.01562 l
23.2676 -5.01562 l
23.2676 -8.67188 l
24.5020 -8.67188 l
24.5020 0.00000 l
23.2676 0.00000 l
23.2676 -4.09375 l
19.1426 -4.09375 l
19.1426 0.00000 l
17.9238 0.00000 l
h
30.1328 0.00000 m
30.1328 -2.45312 l
26.2266 -2.45312 l
26.2266 -3.32812 l
30.1328 -8.67188 l
31.2266 -8.67188 l
31.2266 -3.40625 l
32.3828 -3.40625 l
32.3828 -2.45312 l
31.2266 -2.45312 l
31.2266 0.00000 l
30.1328 0.00000 l
h
27.3672 -3.40625 m
30.2109 -3.40625 l
30.2109 -7.25000 l
27.3672 -3.40625 l
h
f
[ 1.50090 0.00000 0.00000 1.50090 42.7816 33.7191 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .788235 .588235 RG
newpath
149.574 .0340977 m
149.574 11.9082 139.948 21.5341 128.074 21.5341  c
116.200 21.5341 106.574 11.9082 106.574 .0340977  c
106.574 -11.8400 116.200 -21.4659 128.074 -21.4659  c
139.948 -21.4659 149.574 -11.8400 149.574 .0340977  c
h
f
0.00000 0.00000 0.00000 RG
newpath
150.574 .0340977 m
150.574 12.4605 140.501 22.5341 128.074 22.5341  c
115.648 22.5341 105.574 12.4605 105.574 .0340977  c
105.574 -12.3923 115.648 -22.4659 128.074 -22.4659  c
140.501 -22.4659 150.574 -12.3923 150.574 .0340977  c
h
149.574 .0340977 m
149.574 11.9082 139.948 21.5341 128.074 21.5341  c
116.200 21.5341 106.574 11.9082 106.574 .0340977  c
106.574 -11.8400 116.200 -21.4659 128.074 -21.4659  c
139.948 -21.4659 149.574 -11.8400 149.574 .0340977  c
h
f*
128.074 .0340977 translate
1.00000 1.00000 scale
-16.2334 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
4.00000 -8.67188 l
4.86458 -8.67188 5.55990 -8.57552 6.08594 -8.38281  c
6.61198 -8.19010 7.06771 -7.86458 7.45312 -7.40625  c
8.06771 -6.68750 8.37500 -5.73438 8.37500 -4.54688  c
8.37500 -3.09896 7.99479 -1.97917 7.23438 -1.18750  c
6.47396 -.395833 5.40104 0.00000 4.01562 0.00000  c
1.12500 0.00000 l
h
2.34375 -.921875 m
3.92188 -.921875 l
5.04688 -.921875 5.84375 -1.22396 6.31250 -1.82812  c
6.82292 -2.47396 7.07812 -3.33854 7.07812 -4.42188  c
7.07812 -5.44271 6.82812 -6.24479 6.32812 -6.82812  c
6.02604 -7.18229 5.66667 -7.42448 5.25000 -7.55469  c
4.83333 -7.68490 4.20312 -7.75000 3.35938 -7.75000  c
2.34375 -7.75000 l
2.34375 -.921875 l
h
10.1133 0.00000 m
10.1133 -8.67188 l
12.9883 -8.67188 l
13.8529 -8.67188 14.5482 -8.57552 15.0742 -8.38281  c
15.6003 -8.19010 16.0560 -7.86458 16.4414 -7.40625  c
17.0560 -6.68750 17.3633 -5.73438 17.3633 -4.54688  c
17.3633 -3.09896 16.9831 -1.97917 16.2227 -1.18750  c
15.4622 -.395833 14.3893 0.00000 13.0039 0.00000  c
10.1133 0.00000 l
h
11.3320 -.921875 m
12.9102 -.921875 l
14.0352 -.921875 14.8320 -1.22396 15.3008 -1.82812  c
15.8112 -2.47396 16.0664 -3.33854 16.0664 -4.42188  c
16.0664 -5.44271 15.8164 -6.24479 15.3164 -6.82812  c
15.0143 -7.18229 14.6549 -7.42448 14.2383 -7.55469  c
13.8216 -7.68490 13.1914 -7.75000 12.3477 -7.75000  c
11.3320 -7.75000 l
11.3320 -.921875 l
h
19.1016 0.00000 m
19.1016 -8.67188 l
21.3516 -8.67188 l
22.2161 -8.67188 22.8802 -8.50781 23.3438 -8.17969  c
23.8073 -7.85156 24.0391 -7.38021 24.0391 -6.76562  c
24.0391 -5.71354 23.4453 -4.96354 22.2578 -4.51562  c
23.6745 -4.08854 24.3828 -3.30729 24.3828 -2.17188  c
24.3828 -1.46354 24.1484 -.924479 23.6797 -.554688  c
23.2109 -.184896 22.5339 0.00000 21.6484 0.00000  c
19.1016 0.00000 l
h
20.3203 -.921875 m
20.5703 -.921875 l
21.4661 -.921875 22.0495 -.979167 22.3203 -1.09375  c
22.8307 -1.30208 23.0859 -1.69792 23.0859 -2.28125  c
23.0859 -2.80208 22.8542 -3.23177 22.3906 -3.57031  c
21.9271 -3.90885 21.3516 -4.07812 20.6641 -4.07812  c
20.3203 -4.07812 l
20.3203 -.921875 l
h
20.3203 -4.85938 m
20.7109 -4.85938 l
21.3672 -4.85938 21.8750 -5.00000 22.2344 -5.28125  c
22.5938 -5.56250 22.7734 -5.95833 22.7734 -6.46875  c
22.7734 -7.32292 22.1120 -7.75000 20.7891 -7.75000  c
20.3203 -7.75000 l
20.3203 -4.85938 l
h
26.6914 0.00000 m
26.6914 -.875000 l
28.4258 -.875000 l
28.4258 -7.71875 l
26.6914 -7.28125 l
26.6914 -8.17188 l
29.5820 -8.89062 l
29.5820 -.875000 l
31.3164 -.875000 l
31.3164 0.00000 l
26.6914 0.00000 l
h
f
[ 1.50090 0.00000 0.00000 1.50090 42.7816 33.7191 ] defaultmatrix matrix concatmatrix setmatrix
.847059 .0901961 .200000 RG
newpath
83.0858 137.000 m
62.0000 158.086 l
40.9142 137.000 l
62.0000 115.914 l
h
f
0.00000 0.00000 0.00000 RG
newpath
62.0000 114.500 m
84.5000 137.000 l
62.0000 159.500 l
39.5000 137.000 l
h
83.0858 137.000 m
62.0000 158.086 l
40.9142 137.000 l
62.0000 115.914 l
h
f*
62.0000 137.000 translate
1.00000 1.00000 scale
-20.0156 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
13.1035 -3.31250 m
11.6191 -7.06250 l
10.1504 -3.31250 l
13.1035 -3.31250 l
h
14.4004 0.00000 m
13.4629 -2.40625 l
9.79102 -2.40625 l
8.83789 0.00000 l
7.68164 0.00000 l
11.1348 -8.67188 l
12.3535 -8.67188 l
15.7285 0.00000 l
14.4004 0.00000 l
h
16.9922 0.00000 m
16.9922 -8.67188 l
19.8672 -8.67188 l
20.7318 -8.67188 21.4271 -8.57552 21.9531 -8.38281  c
22.4792 -8.19010 22.9349 -7.86458 23.3203 -7.40625  c
23.9349 -6.68750 24.2422 -5.73438 24.2422 -4.54688  c
24.2422 -3.09896 23.8620 -1.97917 23.1016 -1.18750  c
22.3411 -.395833 21.2682 0.00000 19.8828 0.00000  c
16.9922 0.00000 l
h
18.2109 -.921875 m
19.7891 -.921875 l
20.9141 -.921875 21.7109 -1.22396 22.1797 -1.82812  c
22.6901 -2.47396 22.9453 -3.33854 22.9453 -4.42188  c
22.9453 -5.44271 22.6953 -6.24479 22.1953 -6.82812  c
21.8932 -7.18229 21.5339 -7.42448 21.1172 -7.55469  c
20.7005 -7.68490 20.0703 -7.75000 19.2266 -7.75000  c
18.2109 -7.75000 l
18.2109 -.921875 l
h
26.3086 .0312500 m
26.3086 -1.00000 l
26.8919 -.770833 27.4388 -.656250 27.9492 -.656250  c
28.5221 -.656250 28.9727 -.822917 29.3008 -1.15625  c
29.6289 -1.48958 29.7930 -1.95312 29.7930 -2.54688  c
29.7930 -3.84896 28.8971 -4.50000 27.1055 -4.50000  c
26.8971 -4.50000 26.6836 -4.48438 26.4648 -4.45312  c
26.4648 -8.67188 l
30.8555 -8.67188 l
30.8555 -7.67188 l
27.4805 -7.67188 l
27.4805 -5.37500 l
28.5951 -5.37500 29.4648 -5.11979 30.0898 -4.60938  c
30.7148 -4.09896 31.0273 -3.39062 31.0273 -2.48438  c
31.0273 -1.64062 30.7409 -.979167 30.1680 -.500000  c
29.5951 -.0208333 28.8086 .218750 27.8086 .218750  c
27.3711 .218750 26.8711 .156250 26.3086 .0312500  c
h
34.2559 0.00000 m
34.2559 -.875000 l
35.9902 -.875000 l
35.9902 -7.71875 l
34.2559 -7.28125 l
34.2559 -8.17188 l
37.1465 -8.89062 l
37.1465 -.875000 l
38.8809 -.875000 l
38.8809 0.00000 l
34.2559 0.00000 l
h
f
[ 1.50090 0.00000 0.00000 1.50090 42.7816 33.7191 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .619608 .419608 RG
newpath
144.904 82.2015 m
144.904 94.0756 135.278 103.701 123.404 103.701  c
111.530 103.701 101.904 94.0756 101.904 82.2015  c
101.904 70.3273 111.530 60.7015 123.404 60.7015  c
135.278 60.7015 144.904 70.3273 144.904 82.2015  c
h
f
0.00000 0.00000 0.00000 RG
newpath
145.904 82.2015 m
145.904 94.6279 135.830 104.701 123.404 104.701  c
110.977 104.701 100.904 94.6279 100.904 82.2015  c
100.904 69.7751 110.977 59.7015 123.404 59.7015  c
135.830 59.7015 145.904 69.7751 145.904 82.2015  c
h
144.904 82.2015 m
144.904 94.0756 135.278 103.701 123.404 103.701  c
111.530 103.701 101.904 94.0756 101.904 82.2015  c
101.904 70.3273 111.530 60.7015 123.404 60.7015  c
135.278 60.7015 144.904 70.3273 144.904 82.2015  c
h
f*
123.404 82.2015 translate
1.00000 1.00000 scale
-15.0439 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
11.0723 -8.67188 l
12.1139 -8.67188 12.8639 -8.49479 13.3223 -8.14062  c
13.7806 -7.78646 14.0098 -7.20833 14.0098 -6.40625  c
14.0098 -5.47917 13.6973 -4.75521 13.0723 -4.23438  c
12.4473 -3.71354 11.5827 -3.45312 10.4785 -3.45312  c
9.93164 -3.45312 l
9.93164 0.00000 l
8.71289 0.00000 l
h
9.93164 -4.37500 m
10.4316 -4.37500 l
11.1608 -4.37500 11.7233 -4.54427 12.1191 -4.88281  c
12.5150 -5.22135 12.7129 -5.69792 12.7129 -6.31250  c
12.7129 -6.82292 12.5566 -7.19010 12.2441 -7.41406  c
11.9316 -7.63802 11.4108 -7.75000 10.6816 -7.75000  c
9.93164 -7.75000 l
9.93164 -4.37500 l
h
19.7363 -3.31250 m
18.2520 -7.06250 l
16.7832 -3.31250 l
19.7363 -3.31250 l
h
21.0332 0.00000 m
20.0957 -2.40625 l
16.4238 -2.40625 l
15.4707 0.00000 l
14.3145 0.00000 l
17.7676 -8.67188 l
18.9863 -8.67188 l
22.3613 0.00000 l
21.0332 0.00000 l
h
23.7188 -.0625000 m
23.7188 -1.14062 l
24.5521 -.817708 25.2031 -.656250 25.6719 -.656250  c
26.2240 -.656250 26.6745 -.817708 27.0234 -1.14062  c
27.3724 -1.46354 27.5469 -1.88021 27.5469 -2.39062  c
27.5469 -3.60938 26.6927 -4.21875 24.9844 -4.21875  c
24.5156 -4.21875 l
24.5156 -5.00000 l
24.9219 -5.00000 l
26.5260 -5.00000 27.3281 -5.56250 27.3281 -6.68750  c
27.3281 -7.57292 26.8021 -8.01562 25.7500 -8.01562  c
25.1667 -8.01562 24.5312 -7.85417 23.8438 -7.53125  c
23.8438 -8.54688 l
24.5208 -8.77604 25.1823 -8.89062 25.8281 -8.89062  c
27.5990 -8.89062 28.4844 -8.21875 28.4844 -6.87500  c
28.4844 -5.85417 27.8802 -5.13021 26.6719 -4.70312  c
28.0781 -4.38021 28.7812 -3.61458 28.7812 -2.40625  c
28.7812 -1.58333 28.5104 -.940104 27.9688 -.476562  c
27.4271 -.0130208 26.6875 .218750 25.7500 .218750  c
25.2083 .218750 24.5312 .125000 23.7188 -.0625000  c
h
f
[ 1.50090 0.00000 0.00000 1.50090 42.7816 33.7191 ] defaultmatrix matrix concatmatrix setmatrix
.854902 .109804 .200000 RG
newpath
130.573 204.218 m
109.487 225.304 l
88.4017 204.218 l
109.487 183.132 l
h
f
0.00000 0.00000 0.00000 RG
newpath
109.487 181.718 m
131.987 204.218 l
109.487 226.718 l
86.9875 204.218 l
h
130.573 204.218 m
109.487 225.304 l
88.4017 204.218 l
109.487 183.132 l
h
f*
109.487 204.218 translate
1.00000 1.00000 scale
-15.3047 4.42090 translate
newpath
5.51562 -3.31250 m
4.03125 -7.06250 l
2.56250 -3.31250 l
5.51562 -3.31250 l
h
6.81250 0.00000 m
5.87500 -2.40625 l
2.20312 -2.40625 l
1.25000 0.00000 l
.0937500 0.00000 l
3.54688 -8.67188 l
4.76562 -8.67188 l
8.14062 0.00000 l
6.81250 0.00000 l
h
13.7949 -3.31250 m
12.3105 -7.06250 l
10.8418 -3.31250 l
13.7949 -3.31250 l
h
15.0918 0.00000 m
14.1543 -2.40625 l
10.4824 -2.40625 l
9.52930 0.00000 l
8.37305 0.00000 l
11.8262 -8.67188 l
13.0449 -8.67188 l
16.4199 0.00000 l
15.0918 0.00000 l
h
17.6836 0.00000 m
17.6836 -8.67188 l
20.3086 -8.67188 l
21.1419 -8.67188 21.7799 -8.48958 22.2227 -8.12500  c
22.6654 -7.76042 22.8867 -7.22396 22.8867 -6.51562  c
22.8867 -5.35938 22.3034 -4.54167 21.1367 -4.06250  c
24.0273 0.00000 l
22.5117 0.00000 l
20.0430 -3.67188 l
18.9023 -3.67188 l
18.9023 0.00000 l
17.6836 0.00000 l
h
18.9023 -4.59375 m
19.2930 -4.59375 l
20.8451 -4.59375 21.6211 -5.19792 21.6211 -6.40625  c
21.6211 -7.30208 20.9701 -7.75000 19.6680 -7.75000  c
18.9023 -7.75000 l
18.9023 -4.59375 l
h
26.9590 .218750 m
26.3861 .218750 25.6465 .0885417 24.7402 -.171875  c
24.7402 -1.39062 l
25.7090 -.932292 26.5111 -.703125 27.1465 -.703125  c
27.6257 -.703125 28.0137 -.830729 28.3105 -1.08594  c
28.6074 -1.34115 28.7559 -1.67708 28.7559 -2.09375  c
28.7559 -2.42708 28.6595 -2.71354 28.4668 -2.95312  c
28.2741 -3.19271 27.9173 -3.45833 27.3965 -3.75000  c
26.8027 -4.09375 l
26.0632 -4.52083 25.5423 -4.91927 25.2402 -5.28906  c
24.9382 -5.65885 24.7871 -6.09375 24.7871 -6.59375  c
24.7871 -7.26042 25.0293 -7.80990 25.5137 -8.24219  c
25.9980 -8.67448 26.6152 -8.89062 27.3652 -8.89062  c
28.0319 -8.89062 28.7350 -8.78125 29.4746 -8.56250  c
29.4746 -7.43750 l
28.5579 -7.79167 27.8757 -7.96875 27.4277 -7.96875  c
27.0007 -7.96875 26.6491 -7.85677 26.3730 -7.63281  c
26.0970 -7.40885 25.9590 -7.12500 25.9590 -6.78125  c
25.9590 -6.48958 26.0605 -6.23177 26.2637 -6.00781  c
26.4668 -5.78385 26.8392 -5.51562 27.3809 -5.20312  c
27.9902 -4.85938 l
28.7402 -4.43229 29.2637 -4.02865 29.5605 -3.64844  c
29.8574 -3.26823 30.0059 -2.81250 30.0059 -2.28125  c
30.0059 -1.53125 29.7298 -.927083 29.1777 -.468750  c
28.6257 -.0104167 27.8861 .218750 26.9590 .218750  c
h
f
[ 1.50090 0.00000 0.00000 1.50090 42.7816 33.7191 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
