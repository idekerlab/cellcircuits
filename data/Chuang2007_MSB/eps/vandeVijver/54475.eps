%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 11:15:53 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ .874691 0.00000 0.00000 .874691 74.3620 19.2931 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
103.043 140.636 m
144.496 135.791 l
S
newpath
73.2955 155.889 m
47.1876 190.958 l
S
newpath
110.756 368.758 m
135.750 325.466 l
S
newpath
258.460 280.000 m
214.500 280.000 l
S
newpath
91.1332 157.255 m
135.750 234.534 l
S
newpath
74.6621 128.726 m
49.9832 85.9812 l
S
newpath
8.83321 14.7073 m
33.5121 57.4524 l
S
newpath
177.736 288.236 m
166.486 294.731 l
S
newpath
147.000 276.519 m
147.000 283.481 l
S
newpath
177.736 271.764 m
166.486 265.269 l
S
.929412 .258824 .200000 RG
newpath
185.727 133.436 m
164.641 154.522 l
143.555 133.436 l
164.641 112.350 l
h
f
0.00000 0.00000 0.00000 RG
newpath
164.641 110.936 m
187.141 133.436 l
164.641 155.936 l
142.141 133.436 l
h
185.727 133.436 m
164.641 154.522 l
143.555 133.436 l
164.641 112.350 l
h
f*
164.641 133.436 translate
1.00000 1.00000 scale
-24.1553 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
13.1035 -3.31250 m
11.6191 -7.06250 l
10.1504 -3.31250 l
13.1035 -3.31250 l
h
14.4004 0.00000 m
13.4629 -2.40625 l
9.79102 -2.40625 l
8.83789 0.00000 l
7.68164 0.00000 l
11.1348 -8.67188 l
12.3535 -8.67188 l
15.7285 0.00000 l
14.4004 0.00000 l
h
16.9922 0.00000 m
16.9922 -8.67188 l
19.8672 -8.67188 l
20.7318 -8.67188 21.4271 -8.57552 21.9531 -8.38281  c
22.4792 -8.19010 22.9349 -7.86458 23.3203 -7.40625  c
23.9349 -6.68750 24.2422 -5.73438 24.2422 -4.54688  c
24.2422 -3.09896 23.8620 -1.97917 23.1016 -1.18750  c
22.3411 -.395833 21.2682 0.00000 19.8828 0.00000  c
16.9922 0.00000 l
h
18.2109 -.921875 m
19.7891 -.921875 l
20.9141 -.921875 21.7109 -1.22396 22.1797 -1.82812  c
22.6901 -2.47396 22.9453 -3.33854 22.9453 -4.42188  c
22.9453 -5.44271 22.6953 -6.24479 22.1953 -6.82812  c
21.8932 -7.18229 21.5339 -7.42448 21.1172 -7.55469  c
20.7005 -7.68490 20.0703 -7.75000 19.2266 -7.75000  c
18.2109 -7.75000 l
18.2109 -.921875 l
h
25.8555 0.00000 m
25.8555 -1.01562 l
26.1888 -1.79688 26.8659 -2.65104 27.8867 -3.57812  c
28.5586 -4.17188 l
29.4023 -4.94271 29.8242 -5.70833 29.8242 -6.46875  c
29.8242 -6.94792 29.6810 -7.32552 29.3945 -7.60156  c
29.1081 -7.87760 28.7096 -8.01562 28.1992 -8.01562  c
27.5951 -8.01562 26.8867 -7.78646 26.0742 -7.32812  c
26.0742 -8.34375 l
26.8451 -8.70833 27.6055 -8.89062 28.3555 -8.89062  c
29.1680 -8.89062 29.8216 -8.67188 30.3164 -8.23438  c
30.8112 -7.79688 31.0586 -7.21875 31.0586 -6.50000  c
31.0586 -5.97917 30.9336 -5.51562 30.6836 -5.10938  c
30.4336 -4.70312 29.9701 -4.21354 29.2930 -3.64062  c
28.8555 -3.26562 l
27.9284 -2.48438 27.3919 -1.73438 27.2461 -1.01562  c
31.0117 -1.01562 l
31.0117 0.00000 l
25.8555 0.00000 l
h
33.6621 -.0625000 m
33.6621 -1.14062 l
34.4954 -.817708 35.1465 -.656250 35.6152 -.656250  c
36.1673 -.656250 36.6178 -.817708 36.9668 -1.14062  c
37.3158 -1.46354 37.4902 -1.88021 37.4902 -2.39062  c
37.4902 -3.60938 36.6361 -4.21875 34.9277 -4.21875  c
34.4590 -4.21875 l
34.4590 -5.00000 l
34.8652 -5.00000 l
36.4694 -5.00000 37.2715 -5.56250 37.2715 -6.68750  c
37.2715 -7.57292 36.7454 -8.01562 35.6934 -8.01562  c
35.1100 -8.01562 34.4746 -7.85417 33.7871 -7.53125  c
33.7871 -8.54688 l
34.4642 -8.77604 35.1257 -8.89062 35.7715 -8.89062  c
37.5423 -8.89062 38.4277 -8.21875 38.4277 -6.87500  c
38.4277 -5.85417 37.8236 -5.13021 36.6152 -4.70312  c
38.0215 -4.38021 38.7246 -3.61458 38.7246 -2.40625  c
38.7246 -1.58333 38.4538 -.940104 37.9121 -.476562  c
37.3704 -.0130208 36.6309 .218750 35.6934 .218750  c
35.1517 .218750 34.4746 .125000 33.6621 -.0625000  c
h
45.5469 -3.31250 m
44.0625 -7.06250 l
42.5938 -3.31250 l
45.5469 -3.31250 l
h
46.8438 0.00000 m
45.9062 -2.40625 l
42.2344 -2.40625 l
41.2812 0.00000 l
40.1250 0.00000 l
43.5781 -8.67188 l
44.7969 -8.67188 l
48.1719 0.00000 l
46.8438 0.00000 l
h
f
[ .874691 0.00000 0.00000 .874691 74.3620 19.2931 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .505882 .305882 RG
newpath
55.2515 209.005 m
55.2515 220.880 45.6256 230.505 33.7515 230.505  c
21.8774 230.505 12.2515 220.880 12.2515 209.005  c
12.2515 197.131 21.8774 187.505 33.7515 187.505  c
45.6256 187.505 55.2515 197.131 55.2515 209.005  c
h
f
0.00000 0.00000 0.00000 RG
newpath
56.2515 209.005 m
56.2515 221.432 46.1779 231.505 33.7515 231.505  c
21.3251 231.505 11.2515 221.432 11.2515 209.005  c
11.2515 196.579 21.3251 186.505 33.7515 186.505  c
46.1779 186.505 56.2515 196.579 56.2515 209.005  c
h
55.2515 209.005 m
55.2515 220.880 45.6256 230.505 33.7515 230.505  c
21.8774 230.505 12.2515 220.880 12.2515 209.005  c
12.2515 197.131 21.8774 187.505 33.7515 187.505  c
45.6256 187.505 55.2515 197.131 55.2515 209.005  c
h
f*
33.7515 209.005 translate
1.00000 1.00000 scale
-17.0186 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.82812 -8.67188 l
5.23438 -1.96875 l
7.70312 -8.67188 l
9.21875 -8.67188 l
9.21875 0.00000 l
8.07812 0.00000 l
8.07812 -7.06250 l
5.68750 -.578125 l
4.50000 -.578125 l
2.17188 -7.07812 l
2.17188 0.00000 l
1.12500 0.00000 l
h
15.8516 -3.31250 m
14.3672 -7.06250 l
12.8984 -3.31250 l
15.8516 -3.31250 l
h
17.1484 0.00000 m
16.2109 -2.40625 l
12.5391 -2.40625 l
11.5859 0.00000 l
10.4297 0.00000 l
13.8828 -8.67188 l
15.1016 -8.67188 l
18.4766 0.00000 l
17.1484 0.00000 l
h
21.8027 0.00000 m
21.8027 -7.75000 l
18.7246 -7.75000 l
18.7246 -8.67188 l
26.0996 -8.67188 l
26.0996 -7.75000 l
23.0215 -7.75000 l
23.0215 0.00000 l
21.8027 0.00000 l
h
27.3281 0.00000 m
27.3281 -8.67188 l
28.4844 -8.67188 l
28.4844 -4.40625 l
31.9844 -8.67188 l
33.2188 -8.67188 l
29.8281 -4.53125 l
33.8281 0.00000 l
32.2656 0.00000 l
28.4844 -4.39062 l
28.4844 0.00000 l
27.3281 0.00000 l
h
f
[ .874691 0.00000 0.00000 .874691 74.3620 19.2931 ] defaultmatrix matrix concatmatrix setmatrix
.941176 .282353 .200000 RG
newpath
123.606 383.022 m
102.520 404.108 l
81.4342 383.022 l
102.520 361.937 l
h
f
0.00000 0.00000 0.00000 RG
newpath
102.520 360.522 m
125.020 383.022 l
102.520 405.522 l
80.0200 383.022 l
h
123.606 383.022 m
102.520 404.108 l
81.4342 383.022 l
102.520 361.937 l
h
f*
102.520 383.022 translate
1.00000 1.00000 scale
-33.7412 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
4.00000 -8.67188 l
4.86458 -8.67188 5.55990 -8.57552 6.08594 -8.38281  c
6.61198 -8.19010 7.06771 -7.86458 7.45312 -7.40625  c
8.06771 -6.68750 8.37500 -5.73438 8.37500 -4.54688  c
8.37500 -3.09896 7.99479 -1.97917 7.23438 -1.18750  c
6.47396 -.395833 5.40104 0.00000 4.01562 0.00000  c
1.12500 0.00000 l
h
2.34375 -.921875 m
3.92188 -.921875 l
5.04688 -.921875 5.84375 -1.22396 6.31250 -1.82812  c
6.82292 -2.47396 7.07812 -3.33854 7.07812 -4.42188  c
7.07812 -5.44271 6.82812 -6.24479 6.32812 -6.82812  c
6.02604 -7.18229 5.66667 -7.42448 5.25000 -7.55469  c
4.83333 -7.68490 4.20312 -7.75000 3.35938 -7.75000  c
2.34375 -7.75000 l
2.34375 -.921875 l
h
9.98828 0.00000 m
9.98828 -1.01562 l
10.3216 -1.79688 10.9987 -2.65104 12.0195 -3.57812  c
12.6914 -4.17188 l
13.5352 -4.94271 13.9570 -5.70833 13.9570 -6.46875  c
13.9570 -6.94792 13.8138 -7.32552 13.5273 -7.60156  c
13.2409 -7.87760 12.8424 -8.01562 12.3320 -8.01562  c
11.7279 -8.01562 11.0195 -7.78646 10.2070 -7.32812  c
10.2070 -8.34375 l
10.9779 -8.70833 11.7383 -8.89062 12.4883 -8.89062  c
13.3008 -8.89062 13.9544 -8.67188 14.4492 -8.23438  c
14.9440 -7.79688 15.1914 -7.21875 15.1914 -6.50000  c
15.1914 -5.97917 15.0664 -5.51562 14.8164 -5.10938  c
14.5664 -4.70312 14.1029 -4.21354 13.4258 -3.64062  c
12.9883 -3.26562 l
12.0612 -2.48438 11.5247 -1.73438 11.3789 -1.01562  c
15.1445 -1.01562 l
15.1445 0.00000 l
9.98828 0.00000 l
h
18.3887 0.00000 m
18.3887 -.875000 l
20.1230 -.875000 l
20.1230 -7.71875 l
18.3887 -7.28125 l
18.3887 -8.17188 l
21.2793 -8.89062 l
21.2793 -.875000 l
23.0137 -.875000 l
23.0137 0.00000 l
18.3887 0.00000 l
h
26.9766 .218750 m
26.4036 .218750 25.6641 .0885417 24.7578 -.171875  c
24.7578 -1.39062 l
25.7266 -.932292 26.5286 -.703125 27.1641 -.703125  c
27.6432 -.703125 28.0312 -.830729 28.3281 -1.08594  c
28.6250 -1.34115 28.7734 -1.67708 28.7734 -2.09375  c
28.7734 -2.42708 28.6771 -2.71354 28.4844 -2.95312  c
28.2917 -3.19271 27.9349 -3.45833 27.4141 -3.75000  c
26.8203 -4.09375 l
26.0807 -4.52083 25.5599 -4.91927 25.2578 -5.28906  c
24.9557 -5.65885 24.8047 -6.09375 24.8047 -6.59375  c
24.8047 -7.26042 25.0469 -7.80990 25.5312 -8.24219  c
26.0156 -8.67448 26.6328 -8.89062 27.3828 -8.89062  c
28.0495 -8.89062 28.7526 -8.78125 29.4922 -8.56250  c
29.4922 -7.43750 l
28.5755 -7.79167 27.8932 -7.96875 27.4453 -7.96875  c
27.0182 -7.96875 26.6667 -7.85677 26.3906 -7.63281  c
26.1146 -7.40885 25.9766 -7.12500 25.9766 -6.78125  c
25.9766 -6.48958 26.0781 -6.23177 26.2812 -6.00781  c
26.4844 -5.78385 26.8568 -5.51562 27.3984 -5.20312  c
28.0078 -4.85938 l
28.7578 -4.43229 29.2812 -4.02865 29.5781 -3.64844  c
29.8750 -3.26823 30.0234 -2.81250 30.0234 -2.28125  c
30.0234 -1.53125 29.7474 -.927083 29.1953 -.468750  c
28.6432 -.0104167 27.9036 .218750 26.9766 .218750  c
h
31.6270 0.00000 m
31.6270 -1.01562 l
31.9603 -1.79688 32.6374 -2.65104 33.6582 -3.57812  c
34.3301 -4.17188 l
35.1738 -4.94271 35.5957 -5.70833 35.5957 -6.46875  c
35.5957 -6.94792 35.4525 -7.32552 35.1660 -7.60156  c
34.8796 -7.87760 34.4811 -8.01562 33.9707 -8.01562  c
33.3665 -8.01562 32.6582 -7.78646 31.8457 -7.32812  c
31.8457 -8.34375 l
32.6165 -8.70833 33.3770 -8.89062 34.1270 -8.89062  c
34.9395 -8.89062 35.5931 -8.67188 36.0879 -8.23438  c
36.5827 -7.79688 36.8301 -7.21875 36.8301 -6.50000  c
36.8301 -5.97917 36.7051 -5.51562 36.4551 -5.10938  c
36.2051 -4.70312 35.7415 -4.21354 35.0645 -3.64062  c
34.6270 -3.26562 l
33.6999 -2.48438 33.1634 -1.73438 33.0176 -1.01562  c
36.7832 -1.01562 l
36.7832 0.00000 l
31.6270 0.00000 l
h
41.9805 .218750 m
41.0846 .218750 40.3607 -.203125 39.8086 -1.04688  c
39.2565 -1.89062 38.9805 -2.98958 38.9805 -4.34375  c
38.9805 -5.70833 39.2591 -6.80729 39.8164 -7.64062  c
40.3737 -8.47396 41.1055 -8.89062 42.0117 -8.89062  c
42.9180 -8.89062 43.6497 -8.47396 44.2070 -7.64062  c
44.7643 -6.80729 45.0430 -5.71354 45.0430 -4.35938  c
45.0430 -2.97396 44.7643 -1.86458 44.2070 -1.03125  c
43.6497 -.197917 42.9076 .218750 41.9805 .218750  c
h
41.9961 -.656250 m
43.2148 -.656250 43.8242 -1.89583 43.8242 -4.37500  c
43.8242 -6.80208 43.2201 -8.01562 42.0117 -8.01562  c
40.8138 -8.01562 40.2148 -6.79167 40.2148 -4.34375  c
40.2148 -1.88542 40.8086 -.656250 41.9961 -.656250  c
h
47.2559 .0312500 m
47.2559 -1.00000 l
47.8392 -.770833 48.3861 -.656250 48.8965 -.656250  c
49.4694 -.656250 49.9199 -.822917 50.2480 -1.15625  c
50.5762 -1.48958 50.7402 -1.95312 50.7402 -2.54688  c
50.7402 -3.84896 49.8444 -4.50000 48.0527 -4.50000  c
47.8444 -4.50000 47.6309 -4.48438 47.4121 -4.45312  c
47.4121 -8.67188 l
51.8027 -8.67188 l
51.8027 -7.67188 l
48.4277 -7.67188 l
48.4277 -5.37500 l
49.5423 -5.37500 50.4121 -5.11979 51.0371 -4.60938  c
51.6621 -4.09896 51.9746 -3.39062 51.9746 -2.48438  c
51.9746 -1.64062 51.6882 -.979167 51.1152 -.500000  c
50.5423 -.0208333 49.7559 .218750 48.7559 .218750  c
48.3184 .218750 47.8184 .156250 47.2559 .0312500  c
h
55.4531 -4.50000 m
56.0052 -5.20833 56.6979 -5.56250 57.5312 -5.56250  c
58.2917 -5.56250 58.9141 -5.31250 59.3984 -4.81250  c
59.8828 -4.31250 60.1250 -3.67188 60.1250 -2.89062  c
60.1250 -1.98438 59.8542 -1.23958 59.3125 -.656250  c
58.7708 -.0729167 58.0833 .218750 57.2500 .218750  c
56.2917 .218750 55.5417 -.166667 55.0000 -.937500  c
54.4583 -1.70833 54.1875 -2.77604 54.1875 -4.14062  c
54.1875 -5.65104 54.4974 -6.82031 55.1172 -7.64844  c
55.7370 -8.47656 56.6094 -8.89062 57.7344 -8.89062  c
58.2552 -8.89062 58.9010 -8.78125 59.6719 -8.56250  c
59.6719 -7.56250 l
58.8594 -7.87500 58.1927 -8.03125 57.6719 -8.03125  c
56.1927 -8.03125 55.4531 -6.85417 55.4531 -4.50000  c
h
58.9531 -2.62500 m
58.9531 -3.28125 58.8073 -3.79688 58.5156 -4.17188  c
58.2240 -4.54688 57.8125 -4.73438 57.2812 -4.73438  c
56.8021 -4.73438 56.3854 -4.57031 56.0312 -4.24219  c
55.6771 -3.91406 55.5000 -3.52083 55.5000 -3.06250  c
55.5000 -2.33333 55.6667 -1.75000 56.0000 -1.31250  c
56.3333 -.875000 56.7760 -.656250 57.3281 -.656250  c
57.8281 -.656250 58.2240 -.833333 58.5156 -1.18750  c
58.8073 -1.54167 58.9531 -2.02083 58.9531 -2.62500  c
h
62.1035 0.00000 m
62.1035 -8.67188 l
66.9473 -8.67188 l
66.9473 -7.75000 l
63.3223 -7.75000 l
63.3223 -4.96875 l
66.3535 -4.96875 l
66.3535 -4.06250 l
63.3223 -4.06250 l
63.3223 -.921875 l
67.1973 -.921875 l
67.1973 0.00000 l
62.1035 0.00000 l
h
f
[ .874691 0.00000 0.00000 .874691 74.3620 19.2931 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .894118 .694118 RG
newpath
302.460 280.000 m
302.460 291.874 292.834 301.500 280.960 301.500  c
269.086 301.500 259.460 291.874 259.460 280.000  c
259.460 268.126 269.086 258.500 280.960 258.500  c
292.834 258.500 302.460 268.126 302.460 280.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
303.460 280.000 m
303.460 292.426 293.386 302.500 280.960 302.500  c
268.534 302.500 258.460 292.426 258.460 280.000  c
258.460 267.574 268.534 257.500 280.960 257.500  c
293.386 257.500 303.460 267.574 303.460 280.000  c
h
302.460 280.000 m
302.460 291.874 292.834 301.500 280.960 301.500  c
269.086 301.500 259.460 291.874 259.460 280.000  c
259.460 268.126 269.086 258.500 280.960 258.500  c
292.834 258.500 302.460 268.126 302.460 280.000  c
h
f*
280.960 280.000 translate
1.00000 1.00000 scale
-11.4434 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.84375 l
5.39062 -4.84375 l
5.39062 -3.93750 l
2.34375 -3.93750 l
2.34375 0.00000 l
1.12500 0.00000 l
h
7.55859 0.00000 m
7.55859 -8.67188 l
8.76172 -8.67188 l
13.1211 -1.96875 l
13.1211 -8.67188 l
14.1836 -8.67188 l
14.1836 0.00000 l
12.9805 0.00000 l
8.60547 -6.70312 l
8.60547 0.00000 l
7.55859 0.00000 l
h
17.1113 0.00000 m
17.1113 -.875000 l
18.8457 -.875000 l
18.8457 -7.71875 l
17.1113 -7.28125 l
17.1113 -8.17188 l
20.0020 -8.89062 l
20.0020 -.875000 l
21.7363 -.875000 l
21.7363 0.00000 l
17.1113 0.00000 l
h
f
[ .874691 0.00000 0.00000 .874691 74.3620 19.2931 ] defaultmatrix matrix concatmatrix setmatrix
.909804 .219608 .200000 RG
newpath
103.983 142.991 m
82.8976 164.076 l
61.8119 142.991 l
82.8976 121.905 l
h
f
0.00000 0.00000 0.00000 RG
newpath
82.8976 120.491 m
105.398 142.991 l
82.8976 165.491 l
60.3976 142.991 l
h
103.983 142.991 m
82.8976 164.076 l
61.8119 142.991 l
82.8976 121.905 l
h
f*
82.8976 142.991 translate
1.00000 1.00000 scale
-19.2041 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.96875 l
5.37500 -4.96875 l
5.37500 -4.06250 l
2.34375 -4.06250 l
2.34375 -.921875 l
6.21875 -.921875 l
6.21875 0.00000 l
1.12500 0.00000 l
h
8.75391 0.00000 m
6.51953 -8.67188 l
7.70703 -8.67188 l
9.47266 -1.82812 l
11.1133 -8.67188 l
12.3008 -8.67188 l
13.8477 -1.92188 l
15.7539 -8.67188 l
16.7539 -8.67188 l
14.3164 0.00000 l
13.0977 0.00000 l
11.5664 -6.68750 l
9.97266 0.00000 l
8.75391 0.00000 l
h
19.5820 .218750 m
19.0091 .218750 18.2695 .0885417 17.3633 -.171875  c
17.3633 -1.39062 l
18.3320 -.932292 19.1341 -.703125 19.7695 -.703125  c
20.2487 -.703125 20.6367 -.830729 20.9336 -1.08594  c
21.2305 -1.34115 21.3789 -1.67708 21.3789 -2.09375  c
21.3789 -2.42708 21.2826 -2.71354 21.0898 -2.95312  c
20.8971 -3.19271 20.5404 -3.45833 20.0195 -3.75000  c
19.4258 -4.09375 l
18.6862 -4.52083 18.1654 -4.91927 17.8633 -5.28906  c
17.5612 -5.65885 17.4102 -6.09375 17.4102 -6.59375  c
17.4102 -7.26042 17.6523 -7.80990 18.1367 -8.24219  c
18.6211 -8.67448 19.2383 -8.89062 19.9883 -8.89062  c
20.6549 -8.89062 21.3581 -8.78125 22.0977 -8.56250  c
22.0977 -7.43750 l
21.1810 -7.79167 20.4987 -7.96875 20.0508 -7.96875  c
19.6237 -7.96875 19.2721 -7.85677 18.9961 -7.63281  c
18.7201 -7.40885 18.5820 -7.12500 18.5820 -6.78125  c
18.5820 -6.48958 18.6836 -6.23177 18.8867 -6.00781  c
19.0898 -5.78385 19.4622 -5.51562 20.0039 -5.20312  c
20.6133 -4.85938 l
21.3633 -4.43229 21.8867 -4.02865 22.1836 -3.64844  c
22.4805 -3.26823 22.6289 -2.81250 22.6289 -2.28125  c
22.6289 -1.53125 22.3529 -.927083 21.8008 -.468750  c
21.2487 -.0104167 20.5091 .218750 19.5820 .218750  c
h
24.3574 0.00000 m
24.3574 -8.67188 l
26.9824 -8.67188 l
27.8158 -8.67188 28.4538 -8.48958 28.8965 -8.12500  c
29.3392 -7.76042 29.5605 -7.22396 29.5605 -6.51562  c
29.5605 -5.35938 28.9772 -4.54167 27.8105 -4.06250  c
30.7012 0.00000 l
29.1855 0.00000 l
26.7168 -3.67188 l
25.5762 -3.67188 l
25.5762 0.00000 l
24.3574 0.00000 l
h
25.5762 -4.59375 m
25.9668 -4.59375 l
27.5189 -4.59375 28.2949 -5.19792 28.2949 -6.40625  c
28.2949 -7.30208 27.6439 -7.75000 26.3418 -7.75000  c
25.5762 -7.75000 l
25.5762 -4.59375 l
h
32.6328 0.00000 m
32.6328 -.875000 l
34.3672 -.875000 l
34.3672 -7.71875 l
32.6328 -7.28125 l
32.6328 -8.17188 l
35.5234 -8.89062 l
35.5234 -.875000 l
37.2578 -.875000 l
37.2578 0.00000 l
32.6328 0.00000 l
h
f
[ .874691 0.00000 0.00000 .874691 74.3620 19.2931 ] defaultmatrix matrix concatmatrix setmatrix
.960784 .317647 .200000 RG
newpath
21.6834 .442909 m
.597639 21.5287 l
-20.4881 .442909 l
.597639 -20.6429 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.597639 -22.0571 m
23.0976 .442909 l
.597639 22.9429 l
-21.9024 .442909 l
h
21.6834 .442909 m
.597639 21.5287 l
-20.4881 .442909 l
.597639 -20.6429 l
h
f*
.597639 .442909 translate
1.00000 1.00000 scale
-20.1533 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
7.75781 0.00000 m
7.75781 -8.67188 l
10.6328 -8.67188 l
11.4974 -8.67188 12.1927 -8.57552 12.7188 -8.38281  c
13.2448 -8.19010 13.7005 -7.86458 14.0859 -7.40625  c
14.7005 -6.68750 15.0078 -5.73438 15.0078 -4.54688  c
15.0078 -3.09896 14.6276 -1.97917 13.8672 -1.18750  c
13.1068 -.395833 12.0339 0.00000 10.6484 0.00000  c
7.75781 0.00000 l
h
8.97656 -.921875 m
10.5547 -.921875 l
11.6797 -.921875 12.4766 -1.22396 12.9453 -1.82812  c
13.4557 -2.47396 13.7109 -3.33854 13.7109 -4.42188  c
13.7109 -5.44271 13.4609 -6.24479 12.9609 -6.82812  c
12.6589 -7.18229 12.2995 -7.42448 11.8828 -7.55469  c
11.4661 -7.68490 10.8359 -7.75000 9.99219 -7.75000  c
8.97656 -7.75000 l
8.97656 -.921875 l
h
16.7461 0.00000 m
16.7461 -8.67188 l
17.9648 -8.67188 l
17.9648 -5.01562 l
22.0898 -5.01562 l
22.0898 -8.67188 l
23.3242 -8.67188 l
23.3242 0.00000 l
22.0898 0.00000 l
22.0898 -4.09375 l
17.9648 -4.09375 l
17.9648 0.00000 l
16.7461 0.00000 l
h
29.9551 -3.31250 m
28.4707 -7.06250 l
27.0020 -3.31250 l
29.9551 -3.31250 l
h
31.2520 0.00000 m
30.3145 -2.40625 l
26.6426 -2.40625 l
25.6895 0.00000 l
24.5332 0.00000 l
27.9863 -8.67188 l
29.2051 -8.67188 l
32.5801 0.00000 l
31.2520 0.00000 l
h
34.5312 0.00000 m
34.5312 -.875000 l
36.2656 -.875000 l
36.2656 -7.71875 l
34.5312 -7.28125 l
34.5312 -8.17188 l
37.4219 -8.89062 l
37.4219 -.875000 l
39.1562 -.875000 l
39.1562 0.00000 l
34.5312 0.00000 l
h
f
[ .874691 0.00000 0.00000 .874691 74.3620 19.2931 ] defaultmatrix matrix concatmatrix setmatrix
.976471 .352941 .200000 RG
newpath
62.8334 71.7168 m
41.7476 92.8026 l
20.6619 71.7168 l
41.7476 50.6310 l
h
f
0.00000 0.00000 0.00000 RG
newpath
41.7476 49.2168 m
64.2476 71.7168 l
41.7476 94.2168 l
19.2476 71.7168 l
h
62.8334 71.7168 m
41.7476 92.8026 l
20.6619 71.7168 l
41.7476 50.6310 l
h
f*
41.7476 71.7168 translate
1.00000 1.00000 scale
-15.9756 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
7.75781 0.00000 m
7.75781 -8.67188 l
10.6328 -8.67188 l
11.4974 -8.67188 12.1927 -8.57552 12.7188 -8.38281  c
13.2448 -8.19010 13.7005 -7.86458 14.0859 -7.40625  c
14.7005 -6.68750 15.0078 -5.73438 15.0078 -4.54688  c
15.0078 -3.09896 14.6276 -1.97917 13.8672 -1.18750  c
13.1068 -.395833 12.0339 0.00000 10.6484 0.00000  c
7.75781 0.00000 l
h
8.97656 -.921875 m
10.5547 -.921875 l
11.6797 -.921875 12.4766 -1.22396 12.9453 -1.82812  c
13.4557 -2.47396 13.7109 -3.33854 13.7109 -4.42188  c
13.7109 -5.44271 13.4609 -6.24479 12.9609 -6.82812  c
12.6589 -7.18229 12.2995 -7.42448 11.8828 -7.55469  c
11.4661 -7.68490 10.8359 -7.75000 9.99219 -7.75000  c
8.97656 -7.75000 l
8.97656 -.921875 l
h
16.7461 0.00000 m
16.7461 -8.67188 l
17.9648 -8.67188 l
17.9648 -5.01562 l
22.0898 -5.01562 l
22.0898 -8.67188 l
23.3242 -8.67188 l
23.3242 0.00000 l
22.0898 0.00000 l
22.0898 -4.09375 l
17.9648 -4.09375 l
17.9648 0.00000 l
16.7461 0.00000 l
h
24.5332 0.00000 m
27.4082 -4.35938 l
24.6738 -8.67188 l
26.1270 -8.67188 l
28.2207 -5.40625 l
30.4082 -8.67188 l
31.5645 -8.67188 l
28.7988 -4.48438 l
31.6426 0.00000 l
30.1895 0.00000 l
27.9863 -3.43750 l
25.7051 0.00000 l
24.5332 0.00000 l
h
f
[ .874691 0.00000 0.00000 .874691 74.3620 19.2931 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .505882 .305882 RG
newpath
168.500 305.981 m
168.500 317.855 158.874 327.481 147.000 327.481  c
135.126 327.481 125.500 317.855 125.500 305.981  c
125.500 294.107 135.126 284.481 147.000 284.481  c
158.874 284.481 168.500 294.107 168.500 305.981  c
h
f
0.00000 0.00000 0.00000 RG
newpath
169.500 305.981 m
169.500 318.407 159.426 328.481 147.000 328.481  c
134.574 328.481 124.500 318.407 124.500 305.981  c
124.500 293.554 134.574 283.481 147.000 283.481  c
159.426 283.481 169.500 293.554 169.500 305.981  c
h
168.500 305.981 m
168.500 317.855 158.874 327.481 147.000 327.481  c
135.126 327.481 125.500 317.855 125.500 305.981  c
125.500 294.107 135.126 284.481 147.000 284.481  c
158.874 284.481 168.500 294.107 168.500 305.981  c
h
f*
147.000 305.981 translate
1.00000 1.00000 scale
-18.9609 4.42090 translate
newpath
7.64062 -.234375 m
6.58854 .0677083 5.67188 .218750 4.89062 .218750  c
3.50521 .218750 2.44531 -.174479 1.71094 -.960938  c
.976562 -1.74740 .609375 -2.87500 .609375 -4.34375  c
.609375 -5.78125 .981771 -6.89844 1.72656 -7.69531  c
2.47135 -8.49219 3.52083 -8.89062 4.87500 -8.89062  c
5.75000 -8.89062 6.66667 -8.76042 7.62500 -8.50000  c
7.62500 -7.35938 l
6.42708 -7.76562 5.51042 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.48438 1.92188 -4.32812  c
1.92188 -3.18229 2.19792 -2.29167 2.75000 -1.65625  c
3.30208 -1.02083 4.07812 -.703125 5.07812 -.703125  c
5.49479 -.703125 5.93750 -.776042 6.40625 -.921875  c
6.40625 -3.75000 l
7.64062 -3.75000 l
7.64062 -.234375 l
h
9.79688 0.00000 m
9.79688 -8.67188 l
11.0000 -8.67188 l
15.3594 -1.96875 l
15.3594 -8.67188 l
16.4219 -8.67188 l
16.4219 0.00000 l
15.2188 0.00000 l
10.8438 -6.70312 l
10.8438 0.00000 l
9.79688 0.00000 l
h
18.6621 0.00000 m
18.6621 -8.67188 l
19.8809 -8.67188 l
19.8809 -.921875 l
23.7871 -.921875 l
23.7871 0.00000 l
18.6621 0.00000 l
h
25.1543 -.0625000 m
25.1543 -1.14062 l
25.9876 -.817708 26.6387 -.656250 27.1074 -.656250  c
27.6595 -.656250 28.1100 -.817708 28.4590 -1.14062  c
28.8079 -1.46354 28.9824 -1.88021 28.9824 -2.39062  c
28.9824 -3.60938 28.1283 -4.21875 26.4199 -4.21875  c
25.9512 -4.21875 l
25.9512 -5.00000 l
26.3574 -5.00000 l
27.9616 -5.00000 28.7637 -5.56250 28.7637 -6.68750  c
28.7637 -7.57292 28.2376 -8.01562 27.1855 -8.01562  c
26.6022 -8.01562 25.9668 -7.85417 25.2793 -7.53125  c
25.2793 -8.54688 l
25.9564 -8.77604 26.6178 -8.89062 27.2637 -8.89062  c
29.0345 -8.89062 29.9199 -8.21875 29.9199 -6.87500  c
29.9199 -5.85417 29.3158 -5.13021 28.1074 -4.70312  c
29.5137 -4.38021 30.2168 -3.61458 30.2168 -2.40625  c
30.2168 -1.58333 29.9460 -.940104 29.4043 -.476562  c
28.8626 -.0130208 28.1230 .218750 27.1855 .218750  c
26.6439 .218750 25.9668 .125000 25.1543 -.0625000  c
h
32.6484 0.00000 m
32.6484 -8.67188 l
33.8672 -8.67188 l
33.8672 -.921875 l
37.7734 -.921875 l
37.7734 0.00000 l
32.6484 0.00000 l
h
f
[ .874691 0.00000 0.00000 .874691 74.3620 19.2931 ] defaultmatrix matrix concatmatrix setmatrix
.737255 1.00000 .623529 RG
newpath
168.500 254.019 m
168.500 265.893 158.874 275.519 147.000 275.519  c
135.126 275.519 125.500 265.893 125.500 254.019  c
125.500 242.145 135.126 232.519 147.000 232.519  c
158.874 232.519 168.500 242.145 168.500 254.019  c
h
f
0.00000 0.00000 0.00000 RG
newpath
169.500 254.019 m
169.500 266.446 159.426 276.519 147.000 276.519  c
134.574 276.519 124.500 266.446 124.500 254.019  c
124.500 241.593 134.574 231.519 147.000 231.519  c
159.426 231.519 169.500 241.593 169.500 254.019  c
h
168.500 254.019 m
168.500 265.893 158.874 275.519 147.000 275.519  c
135.126 275.519 125.500 265.893 125.500 254.019  c
125.500 242.145 135.126 232.519 147.000 232.519  c
158.874 232.519 168.500 242.145 168.500 254.019  c
h
f*
147.000 254.019 translate
1.00000 1.00000 scale
-14.6777 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.32812 -8.67188 l
6.68750 -1.96875 l
6.68750 -8.67188 l
7.75000 -8.67188 l
7.75000 0.00000 l
6.54688 0.00000 l
2.17188 -6.70312 l
2.17188 0.00000 l
1.12500 0.00000 l
h
9.99023 0.00000 m
9.99023 -8.67188 l
11.2090 -8.67188 l
11.2090 -.921875 l
15.1152 -.921875 l
15.1152 0.00000 l
9.99023 0.00000 l
h
16.3887 0.00000 m
16.3887 -8.67188 l
21.2324 -8.67188 l
21.2324 -7.75000 l
17.6074 -7.75000 l
17.6074 -4.96875 l
20.6387 -4.96875 l
20.6387 -4.06250 l
17.6074 -4.06250 l
17.6074 -.921875 l
21.4824 -.921875 l
21.4824 0.00000 l
16.3887 0.00000 l
h
23.5801 0.00000 m
23.5801 -.875000 l
25.3145 -.875000 l
25.3145 -7.71875 l
23.5801 -7.28125 l
23.5801 -8.17188 l
26.4707 -8.89062 l
26.4707 -.875000 l
28.2051 -.875000 l
28.2051 0.00000 l
23.5801 0.00000 l
h
f
[ .874691 0.00000 0.00000 .874691 74.3620 19.2931 ] defaultmatrix matrix concatmatrix setmatrix
.941176 .282353 .200000 RG
newpath
213.086 280.000 m
192.000 301.086 l
170.914 280.000 l
192.000 258.914 l
h
f
0.00000 0.00000 0.00000 RG
newpath
192.000 257.500 m
214.500 280.000 l
192.000 302.500 l
169.500 280.000 l
h
213.086 280.000 m
192.000 301.086 l
170.914 280.000 l
192.000 258.914 l
h
f*
192.000 280.000 translate
1.00000 1.00000 scale
-22.0078 4.42090 translate
newpath
7.64062 -.234375 m
6.58854 .0677083 5.67188 .218750 4.89062 .218750  c
3.50521 .218750 2.44531 -.174479 1.71094 -.960938  c
.976562 -1.74740 .609375 -2.87500 .609375 -4.34375  c
.609375 -5.78125 .981771 -6.89844 1.72656 -7.69531  c
2.47135 -8.49219 3.52083 -8.89062 4.87500 -8.89062  c
5.75000 -8.89062 6.66667 -8.76042 7.62500 -8.50000  c
7.62500 -7.35938 l
6.42708 -7.76562 5.51042 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.48438 1.92188 -4.32812  c
1.92188 -3.18229 2.19792 -2.29167 2.75000 -1.65625  c
3.30208 -1.02083 4.07812 -.703125 5.07812 -.703125  c
5.49479 -.703125 5.93750 -.776042 6.40625 -.921875  c
6.40625 -3.75000 l
7.64062 -3.75000 l
7.64062 -.234375 l
h
11.8594 0.00000 m
11.8594 -7.75000 l
8.78125 -7.75000 l
8.78125 -8.67188 l
16.1562 -8.67188 l
16.1562 -7.75000 l
13.0781 -7.75000 l
13.0781 0.00000 l
11.8594 0.00000 l
h
17.3848 0.00000 m
17.3848 -8.67188 l
19.7441 -8.67188 l
20.7858 -8.67188 21.5358 -8.49479 21.9941 -8.14062  c
22.4525 -7.78646 22.6816 -7.20833 22.6816 -6.40625  c
22.6816 -5.47917 22.3691 -4.75521 21.7441 -4.23438  c
21.1191 -3.71354 20.2546 -3.45312 19.1504 -3.45312  c
18.6035 -3.45312 l
18.6035 0.00000 l
17.3848 0.00000 l
h
18.6035 -4.37500 m
19.1035 -4.37500 l
19.8327 -4.37500 20.3952 -4.54427 20.7910 -4.88281  c
21.1868 -5.22135 21.3848 -5.69792 21.3848 -6.31250  c
21.3848 -6.82292 21.2285 -7.19010 20.9160 -7.41406  c
20.6035 -7.63802 20.0827 -7.75000 19.3535 -7.75000  c
18.6035 -7.75000 l
18.6035 -4.37500 l
h
24.0176 0.00000 m
24.0176 -8.67188 l
26.2676 -8.67188 l
27.1322 -8.67188 27.7962 -8.50781 28.2598 -8.17969  c
28.7233 -7.85156 28.9551 -7.38021 28.9551 -6.76562  c
28.9551 -5.71354 28.3613 -4.96354 27.1738 -4.51562  c
28.5905 -4.08854 29.2988 -3.30729 29.2988 -2.17188  c
29.2988 -1.46354 29.0645 -.924479 28.5957 -.554688  c
28.1270 -.184896 27.4499 0.00000 26.5645 0.00000  c
24.0176 0.00000 l
h
25.2363 -.921875 m
25.4863 -.921875 l
26.3822 -.921875 26.9655 -.979167 27.2363 -1.09375  c
27.7467 -1.30208 28.0020 -1.69792 28.0020 -2.28125  c
28.0020 -2.80208 27.7702 -3.23177 27.3066 -3.57031  c
26.8431 -3.90885 26.2676 -4.07812 25.5801 -4.07812  c
25.2363 -4.07812 l
25.2363 -.921875 l
h
25.2363 -4.85938 m
25.6270 -4.85938 l
26.2832 -4.85938 26.7910 -5.00000 27.1504 -5.28125  c
27.5098 -5.56250 27.6895 -5.95833 27.6895 -6.46875  c
27.6895 -7.32292 27.0280 -7.75000 25.7051 -7.75000  c
25.2363 -7.75000 l
25.2363 -4.85938 l
h
30.9199 0.00000 m
30.9199 -8.67188 l
33.2793 -8.67188 l
34.3210 -8.67188 35.0710 -8.49479 35.5293 -8.14062  c
35.9876 -7.78646 36.2168 -7.20833 36.2168 -6.40625  c
36.2168 -5.47917 35.9043 -4.75521 35.2793 -4.23438  c
34.6543 -3.71354 33.7897 -3.45312 32.6855 -3.45312  c
32.1387 -3.45312 l
32.1387 0.00000 l
30.9199 0.00000 l
h
32.1387 -4.37500 m
32.6387 -4.37500 l
33.3678 -4.37500 33.9303 -4.54427 34.3262 -4.88281  c
34.7220 -5.22135 34.9199 -5.69792 34.9199 -6.31250  c
34.9199 -6.82292 34.7637 -7.19010 34.4512 -7.41406  c
34.1387 -7.63802 33.6178 -7.75000 32.8887 -7.75000  c
32.1387 -7.75000 l
32.1387 -4.37500 l
h
40.9434 0.00000 m
40.9434 -2.45312 l
37.0371 -2.45312 l
37.0371 -3.32812 l
40.9434 -8.67188 l
42.0371 -8.67188 l
42.0371 -3.40625 l
43.1934 -3.40625 l
43.1934 -2.45312 l
42.0371 -2.45312 l
42.0371 0.00000 l
40.9434 0.00000 l
h
38.1777 -3.40625 m
41.0215 -3.40625 l
41.0215 -7.25000 l
38.1777 -3.40625 l
h
f
[ .874691 0.00000 0.00000 .874691 74.3620 19.2931 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
