%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 11:08:24 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.97725 0.00000 0.00000 1.97725 59.9031 44.4502 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
49.4240 70.0568 m
61.9385 121.190 l
S
newpath
45.0000 29.4808 m
45.0000 22.5192 l
S
newpath
19.4856 14.7500 m
30.7356 8.25481 l
S
newpath
63.3570 56.1237 m
117.232 68.2826 l
S
newpath
19.4856 37.2500 m
30.7356 43.7452 l
S
newpath
39.6609 69.1416 m
23.0019 122.686 l
S
newpath
56.4950 62.9858 m
98.4152 103.119 l
S
.972549 .345098 .200000 RG
newpath
87.4483 139.266 m
66.3625 160.352 l
45.2767 139.266 l
66.3625 118.180 l
h
f
0.00000 0.00000 0.00000 RG
newpath
66.3625 116.766 m
88.8625 139.266 l
66.3625 161.766 l
43.8625 139.266 l
h
87.4483 139.266 m
66.3625 160.352 l
45.2767 139.266 l
66.3625 118.180 l
h
f*
66.3625 139.266 translate
1.00000 1.00000 scale
-27.6738 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
10.1152 0.00000 m
10.1152 -.875000 l
11.8496 -.875000 l
11.8496 -7.71875 l
10.1152 -7.28125 l
10.1152 -8.17188 l
13.0059 -8.89062 l
13.0059 -.875000 l
14.7402 -.875000 l
14.7402 0.00000 l
10.1152 0.00000 l
h
18.6562 -4.71875 m
17.8021 -5.31250 17.3750 -5.96875 17.3750 -6.68750  c
17.3750 -7.34375 17.6172 -7.87500 18.1016 -8.28125  c
18.5859 -8.68750 19.2135 -8.89062 19.9844 -8.89062  c
20.6927 -8.89062 21.2708 -8.71875 21.7188 -8.37500  c
22.1667 -8.03125 22.3906 -7.57812 22.3906 -7.01562  c
22.3906 -6.18229 21.8490 -5.41667 20.7656 -4.71875  c
22.0781 -4.08333 22.7344 -3.26042 22.7344 -2.25000  c
22.7344 -1.52083 22.4583 -.927083 21.9062 -.468750  c
21.3542 -.0104167 20.6458 .218750 19.7812 .218750  c
18.9271 .218750 18.2370 .00260417 17.7109 -.429688  c
17.1849 -.861979 16.9219 -1.43229 16.9219 -2.14062  c
16.9219 -3.17188 17.5000 -4.03125 18.6562 -4.71875  c
h
20.1250 -5.09375 m
20.9271 -5.62500 21.3281 -6.21354 21.3281 -6.85938  c
21.3281 -7.21354 21.1953 -7.49479 20.9297 -7.70312  c
20.6641 -7.91146 20.3073 -8.01562 19.8594 -8.01562  c
19.4323 -8.01562 19.0859 -7.91146 18.8203 -7.70312  c
18.5547 -7.49479 18.4219 -7.22396 18.4219 -6.89062  c
18.4219 -6.56771 18.5443 -6.27865 18.7891 -6.02344  c
19.0339 -5.76823 19.4792 -5.45833 20.1250 -5.09375  c
h
19.2812 -4.25000 m
18.8125 -3.89583 18.4948 -3.58333 18.3281 -3.31250  c
18.1615 -3.04167 18.0781 -2.70833 18.0781 -2.31250  c
18.0781 -1.82292 18.2396 -1.42448 18.5625 -1.11719  c
18.8854 -.809896 19.3073 -.656250 19.8281 -.656250  c
20.3281 -.656250 20.7396 -.786458 21.0625 -1.04688  c
21.3854 -1.30729 21.5469 -1.64583 21.5469 -2.06250  c
21.5469 -2.39583 21.4479 -2.67969 21.2500 -2.91406  c
21.0521 -3.14844 20.6667 -3.43229 20.0938 -3.76562  c
19.2812 -4.25000 l
h
27.1191 .140625 m
26.2129 .140625 25.4889 -.161458 24.9473 -.765625  c
24.4056 -1.36979 24.1348 -2.17708 24.1348 -3.18750  c
24.1348 -4.20833 24.4056 -5.01562 24.9473 -5.60938  c
25.4889 -6.20312 26.2285 -6.50000 27.1660 -6.50000  c
28.1035 -6.50000 28.8431 -6.20312 29.3848 -5.60938  c
29.9264 -5.01562 30.1973 -4.20833 30.1973 -3.18750  c
30.1973 -2.15625 29.9238 -1.34375 29.3770 -.750000  c
28.8301 -.156250 28.0775 .140625 27.1191 .140625  c
h
27.1348 -.718750 m
28.3639 -.718750 28.9785 -1.54167 28.9785 -3.18750  c
28.9785 -4.82292 28.3743 -5.64062 27.1660 -5.64062  c
25.9577 -5.64062 25.3535 -4.82292 25.3535 -3.18750  c
25.3535 -1.54167 25.9473 -.718750 27.1348 -.718750  c
h
32.0059 0.00000 m
32.0059 -6.35938 l
33.1621 -6.35938 l
33.1621 -5.17188 l
33.6204 -6.05729 34.2819 -6.50000 35.1465 -6.50000  c
35.2715 -6.50000 35.3965 -6.48958 35.5215 -6.46875  c
35.5215 -5.39062 l
35.3236 -5.46354 35.1465 -5.50000 34.9902 -5.50000  c
34.2611 -5.50000 33.6517 -5.06771 33.1621 -4.20312  c
33.1621 0.00000 l
32.0059 0.00000 l
h
38.2910 -5.50000 m
38.2910 0.00000 l
37.1348 0.00000 l
37.1348 -5.50000 l
36.2285 -5.50000 l
36.2285 -6.35938 l
37.1348 -6.35938 l
37.1348 -7.12500 l
37.1348 -8.64583 37.8275 -9.40625 39.2129 -9.40625  c
39.5983 -9.40625 40.0358 -9.33854 40.5254 -9.20312  c
40.5254 -8.29688 l
40.0046 -8.45312 39.5879 -8.53125 39.2754 -8.53125  c
38.9004 -8.53125 38.6426 -8.44010 38.5020 -8.25781  c
38.3613 -8.07552 38.2910 -7.73958 38.2910 -7.25000  c
38.2910 -6.35938 l
39.8848 -6.35938 l
39.8848 -5.50000 l
38.2910 -5.50000 l
h
41.9844 0.00000 m
41.9844 -.875000 l
43.7188 -.875000 l
43.7188 -7.71875 l
41.9844 -7.28125 l
41.9844 -8.17188 l
44.8750 -8.89062 l
44.8750 -.875000 l
46.6094 -.875000 l
46.6094 0.00000 l
41.9844 0.00000 l
h
51.5254 .218750 m
50.6296 .218750 49.9056 -.203125 49.3535 -1.04688  c
48.8014 -1.89062 48.5254 -2.98958 48.5254 -4.34375  c
48.5254 -5.70833 48.8040 -6.80729 49.3613 -7.64062  c
49.9186 -8.47396 50.6504 -8.89062 51.5566 -8.89062  c
52.4629 -8.89062 53.1947 -8.47396 53.7520 -7.64062  c
54.3092 -6.80729 54.5879 -5.71354 54.5879 -4.35938  c
54.5879 -2.97396 54.3092 -1.86458 53.7520 -1.03125  c
53.1947 -.197917 52.4525 .218750 51.5254 .218750  c
h
51.5410 -.656250 m
52.7598 -.656250 53.3691 -1.89583 53.3691 -4.37500  c
53.3691 -6.80208 52.7650 -8.01562 51.5566 -8.01562  c
50.3587 -8.01562 49.7598 -6.79167 49.7598 -4.34375  c
49.7598 -1.88542 50.3535 -.656250 51.5410 -.656250  c
h
f
[ 1.97725 0.00000 0.00000 1.97725 59.9031 44.4502 ] defaultmatrix matrix concatmatrix setmatrix
.941176 .278431 .200000 RG
newpath
66.0858 .0192375 m
45.0000 21.1050 l
23.9142 .0192375 l
45.0000 -21.0665 l
h
f
0.00000 0.00000 0.00000 RG
newpath
45.0000 -22.4808 m
67.5000 .0192375 l
45.0000 22.5192 l
22.5000 .0192375 l
h
66.0858 .0192375 m
45.0000 21.1050 l
23.9142 .0192375 l
45.0000 -21.0665 l
h
f*
45.0000 .0192375 translate
1.00000 1.00000 scale
-14.8711 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
13.1035 -3.31250 m
11.6191 -7.06250 l
10.1504 -3.31250 l
13.1035 -3.31250 l
h
14.4004 0.00000 m
13.4629 -2.40625 l
9.79102 -2.40625 l
8.83789 0.00000 l
7.68164 0.00000 l
11.1348 -8.67188 l
12.3535 -8.67188 l
15.7285 0.00000 l
14.4004 0.00000 l
h
16.9922 0.00000 m
16.9922 -8.67188 l
18.2109 -8.67188 l
18.2109 -.921875 l
22.1172 -.921875 l
22.1172 0.00000 l
16.9922 0.00000 l
h
25.2656 0.00000 m
25.2656 -3.62500 l
22.3594 -8.67188 l
23.7656 -8.67188 l
26.0156 -4.76562 l
28.4531 -8.67188 l
29.5938 -8.67188 l
26.4844 -3.64062 l
26.4844 0.00000 l
25.2656 0.00000 l
h
f
[ 1.97725 0.00000 0.00000 1.97725 59.9031 44.4502 ] defaultmatrix matrix concatmatrix setmatrix
.486275 1.00000 .458824 RG
newpath
160.680 73.2360 m
160.680 85.1101 151.054 94.7360 139.180 94.7360  c
127.306 94.7360 117.680 85.1101 117.680 73.2360  c
117.680 61.3619 127.306 51.7360 139.180 51.7360  c
151.054 51.7360 160.680 61.3619 160.680 73.2360  c
h
f
0.00000 0.00000 0.00000 RG
newpath
161.680 73.2360 m
161.680 85.6624 151.606 95.7360 139.180 95.7360  c
126.753 95.7360 116.680 85.6624 116.680 73.2360  c
116.680 60.8096 126.753 50.7360 139.180 50.7360  c
151.606 50.7360 161.680 60.8096 161.680 73.2360  c
h
160.680 73.2360 m
160.680 85.1101 151.054 94.7360 139.180 94.7360  c
127.306 94.7360 117.680 85.1101 117.680 73.2360  c
117.680 61.3619 127.306 51.7360 139.180 51.7360  c
151.054 51.7360 160.680 61.3619 160.680 73.2360  c
h
f*
139.180 73.2360 translate
1.00000 1.00000 scale
-24.5361 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
13.1309 .218750 m
11.7871 .218750 10.7480 -.177083 10.0137 -.968750  c
9.27930 -1.76042 8.91211 -2.88021 8.91211 -4.32812  c
8.91211 -5.77604 9.28711 -6.89844 10.0371 -7.69531  c
10.7871 -8.49219 11.8392 -8.89062 13.1934 -8.89062  c
13.9746 -8.89062 14.8861 -8.76562 15.9277 -8.51562  c
15.9277 -7.35938 l
14.7402 -7.76562 13.8236 -7.96875 13.1777 -7.96875  c
12.2402 -7.96875 11.5137 -7.65104 10.9980 -7.01562  c
10.4824 -6.38021 10.2246 -5.47917 10.2246 -4.31250  c
10.2246 -3.20833 10.4980 -2.33854 11.0449 -1.70312  c
11.5918 -1.06771 12.3444 -.750000 13.3027 -.750000  c
14.1257 -.750000 15.0059 -1.00000 15.9434 -1.50000  c
15.9434 -.453125 l
15.0892 -.00520833 14.1517 .218750 13.1309 .218750  c
h
17.7305 0.00000 m
17.7305 -8.67188 l
20.6055 -8.67188 l
21.4701 -8.67188 22.1654 -8.57552 22.6914 -8.38281  c
23.2174 -8.19010 23.6732 -7.86458 24.0586 -7.40625  c
24.6732 -6.68750 24.9805 -5.73438 24.9805 -4.54688  c
24.9805 -3.09896 24.6003 -1.97917 23.8398 -1.18750  c
23.0794 -.395833 22.0065 0.00000 20.6211 0.00000  c
17.7305 0.00000 l
h
18.9492 -.921875 m
20.5273 -.921875 l
21.6523 -.921875 22.4492 -1.22396 22.9180 -1.82812  c
23.4284 -2.47396 23.6836 -3.33854 23.6836 -4.42188  c
23.6836 -5.44271 23.4336 -6.24479 22.9336 -6.82812  c
22.6315 -7.18229 22.2721 -7.42448 21.8555 -7.55469  c
21.4388 -7.68490 20.8086 -7.75000 19.9648 -7.75000  c
18.9492 -7.75000 l
18.9492 -.921875 l
h
30.4219 .218750 m
29.0781 .218750 28.0391 -.177083 27.3047 -.968750  c
26.5703 -1.76042 26.2031 -2.88021 26.2031 -4.32812  c
26.2031 -5.77604 26.5781 -6.89844 27.3281 -7.69531  c
28.0781 -8.49219 29.1302 -8.89062 30.4844 -8.89062  c
31.2656 -8.89062 32.1771 -8.76562 33.2188 -8.51562  c
33.2188 -7.35938 l
32.0312 -7.76562 31.1146 -7.96875 30.4688 -7.96875  c
29.5312 -7.96875 28.8047 -7.65104 28.2891 -7.01562  c
27.7734 -6.38021 27.5156 -5.47917 27.5156 -4.31250  c
27.5156 -3.20833 27.7891 -2.33854 28.3359 -1.70312  c
28.8828 -1.06771 29.6354 -.750000 30.5938 -.750000  c
31.4167 -.750000 32.2969 -1.00000 33.2344 -1.50000  c
33.2344 -.453125 l
32.3802 -.00520833 31.4427 .218750 30.4219 .218750  c
h
35.2559 -.0468750 m
35.2559 -1.03125 l
35.9954 -.781250 36.6204 -.656250 37.1309 -.656250  c
37.8496 -.656250 38.4121 -.960938 38.8184 -1.57031  c
39.2246 -2.17969 39.4277 -3.03125 39.4277 -4.12500  c
38.8444 -3.39583 38.1777 -3.03125 37.4277 -3.03125  c
36.6986 -3.03125 36.0814 -3.29948 35.5762 -3.83594  c
35.0710 -4.37240 34.8184 -5.03125 34.8184 -5.81250  c
34.8184 -6.69792 35.0866 -7.43229 35.6230 -8.01562  c
36.1595 -8.59896 36.8392 -8.89062 37.6621 -8.89062  c
38.6100 -8.89062 39.3548 -8.51302 39.8965 -7.75781  c
40.4382 -7.00260 40.7090 -5.96875 40.7090 -4.65625  c
40.7090 -3.16667 40.3783 -1.98177 39.7168 -1.10156  c
39.0553 -.221354 38.1569 .218750 37.0215 .218750  c
36.5736 .218750 35.9850 .130208 35.2559 -.0468750  c
h
35.9590 -6.03125 m
35.9590 -5.36458 36.1100 -4.83854 36.4121 -4.45312  c
36.7142 -4.06771 37.1257 -3.87500 37.6465 -3.87500  c
38.1361 -3.87500 38.5527 -4.03906 38.8965 -4.36719  c
39.2402 -4.69531 39.4121 -5.09375 39.4121 -5.56250  c
39.4121 -6.30208 39.2454 -6.89844 38.9121 -7.35156  c
38.5788 -7.80469 38.1413 -8.03125 37.5996 -8.03125  c
37.0892 -8.03125 36.6882 -7.85156 36.3965 -7.49219  c
36.1048 -7.13281 35.9590 -6.64583 35.9590 -6.03125  c
h
43.2969 0.00000 m
43.2969 -.875000 l
45.0312 -.875000 l
45.0312 -7.71875 l
43.2969 -7.28125 l
43.2969 -8.17188 l
46.1875 -8.89062 l
46.1875 -.875000 l
47.9219 -.875000 l
47.9219 0.00000 l
43.2969 0.00000 l
h
f
[ 1.97725 0.00000 0.00000 1.97725 59.9031 44.4502 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .866667 .666667 RG
newpath
21.5000 26.0000 m
21.5000 37.8741 11.8741 47.5000 0.00000 47.5000  c
-11.8741 47.5000 -21.5000 37.8741 -21.5000 26.0000  c
-21.5000 14.1259 -11.8741 4.50000 0.00000 4.50000  c
11.8741 4.50000 21.5000 14.1259 21.5000 26.0000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
22.5000 26.0000 m
22.5000 38.4264 12.4264 48.5000 0.00000 48.5000  c
-12.4264 48.5000 -22.5000 38.4264 -22.5000 26.0000  c
-22.5000 13.5736 -12.4264 3.50000 0.00000 3.50000  c
12.4264 3.50000 22.5000 13.5736 22.5000 26.0000  c
h
21.5000 26.0000 m
21.5000 37.8741 11.8741 47.5000 0.00000 47.5000  c
-11.8741 47.5000 -21.5000 37.8741 -21.5000 26.0000  c
-21.5000 14.1259 -11.8741 4.50000 0.00000 4.50000  c
11.8741 4.50000 21.5000 14.1259 21.5000 26.0000  c
h
f*
0.00000 26.0000 translate
1.00000 1.00000 scale
-21.5068 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.96875 l
5.37500 -4.96875 l
5.37500 -4.06250 l
2.34375 -4.06250 l
2.34375 -.921875 l
6.21875 -.921875 l
6.21875 0.00000 l
1.12500 0.00000 l
h
7.62891 0.00000 m
7.62891 -8.67188 l
8.84766 -8.67188 l
8.84766 -.921875 l
12.7539 -.921875 l
12.7539 0.00000 l
7.62891 0.00000 l
h
18.4180 -3.31250 m
16.9336 -7.06250 l
15.4648 -3.31250 l
18.4180 -3.31250 l
h
19.7148 0.00000 m
18.7773 -2.40625 l
15.1055 -2.40625 l
14.1523 0.00000 l
12.9961 0.00000 l
16.4492 -8.67188 l
17.6680 -8.67188 l
21.0430 0.00000 l
19.7148 0.00000 l
h
24.6660 0.00000 m
21.4004 -8.67188 l
22.6191 -8.67188 l
25.3066 -1.57812 l
27.9004 -8.67188 l
28.9785 -8.67188 l
25.8223 0.00000 l
24.6660 0.00000 l
h
30.1523 0.00000 m
30.1523 -8.67188 l
31.3711 -8.67188 l
31.3711 -.921875 l
35.2773 -.921875 l
35.2773 0.00000 l
30.1523 0.00000 l
h
36.6445 -.0625000 m
36.6445 -1.14062 l
37.4779 -.817708 38.1289 -.656250 38.5977 -.656250  c
39.1497 -.656250 39.6003 -.817708 39.9492 -1.14062  c
40.2982 -1.46354 40.4727 -1.88021 40.4727 -2.39062  c
40.4727 -3.60938 39.6185 -4.21875 37.9102 -4.21875  c
37.4414 -4.21875 l
37.4414 -5.00000 l
37.8477 -5.00000 l
39.4518 -5.00000 40.2539 -5.56250 40.2539 -6.68750  c
40.2539 -7.57292 39.7279 -8.01562 38.6758 -8.01562  c
38.0924 -8.01562 37.4570 -7.85417 36.7695 -7.53125  c
36.7695 -8.54688 l
37.4466 -8.77604 38.1081 -8.89062 38.7539 -8.89062  c
40.5247 -8.89062 41.4102 -8.21875 41.4102 -6.87500  c
41.4102 -5.85417 40.8060 -5.13021 39.5977 -4.70312  c
41.0039 -4.38021 41.7070 -3.61458 41.7070 -2.40625  c
41.7070 -1.58333 41.4362 -.940104 40.8945 -.476562  c
40.3529 -.0130208 39.6133 .218750 38.6758 .218750  c
38.1341 .218750 37.4570 .125000 36.6445 -.0625000  c
h
f
[ 1.97725 0.00000 0.00000 1.97725 59.9031 44.4502 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .572549 .372549 RG
newpath
37.8176 144.171 m
37.8176 156.045 28.1917 165.671 16.3176 165.671  c
4.44350 165.671 -5.18237 156.045 -5.18237 144.171  c
-5.18237 132.296 4.44350 122.671 16.3176 122.671  c
28.1917 122.671 37.8176 132.296 37.8176 144.171  c
h
f
0.00000 0.00000 0.00000 RG
newpath
38.8176 144.171 m
38.8176 156.597 28.7440 166.671 16.3176 166.671  c
3.89122 166.671 -6.18237 156.597 -6.18237 144.171  c
-6.18237 131.744 3.89122 121.671 16.3176 121.671  c
28.7440 121.671 38.8176 131.744 38.8176 144.171  c
h
37.8176 144.171 m
37.8176 156.045 28.1917 165.671 16.3176 165.671  c
4.44350 165.671 -5.18237 156.045 -5.18237 144.171  c
-5.18237 132.296 4.44350 122.671 16.3176 122.671  c
28.1917 122.671 37.8176 132.296 37.8176 144.171  c
h
f*
16.3176 144.171 translate
1.00000 1.00000 scale
-23.1768 4.42090 translate
newpath
3.18750 0.00000 m
3.18750 -7.75000 l
.109375 -7.75000 l
.109375 -8.67188 l
7.48438 -8.67188 l
7.48438 -7.75000 l
4.40625 -7.75000 l
4.40625 0.00000 l
3.18750 0.00000 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
10.4160 -8.67188 l
12.8223 -1.96875 l
15.2910 -8.67188 l
16.8066 -8.67188 l
16.8066 0.00000 l
15.6660 0.00000 l
15.6660 -7.06250 l
13.2754 -.578125 l
12.0879 -.578125 l
9.75977 -7.07812 l
9.75977 0.00000 l
8.71289 0.00000 l
h
20.7363 .218750 m
20.1634 .218750 19.4238 .0885417 18.5176 -.171875  c
18.5176 -1.39062 l
19.4863 -.932292 20.2884 -.703125 20.9238 -.703125  c
21.4030 -.703125 21.7910 -.830729 22.0879 -1.08594  c
22.3848 -1.34115 22.5332 -1.67708 22.5332 -2.09375  c
22.5332 -2.42708 22.4368 -2.71354 22.2441 -2.95312  c
22.0514 -3.19271 21.6947 -3.45833 21.1738 -3.75000  c
20.5801 -4.09375 l
19.8405 -4.52083 19.3197 -4.91927 19.0176 -5.28906  c
18.7155 -5.65885 18.5645 -6.09375 18.5645 -6.59375  c
18.5645 -7.26042 18.8066 -7.80990 19.2910 -8.24219  c
19.7754 -8.67448 20.3926 -8.89062 21.1426 -8.89062  c
21.8092 -8.89062 22.5124 -8.78125 23.2520 -8.56250  c
23.2520 -7.43750 l
22.3353 -7.79167 21.6530 -7.96875 21.2051 -7.96875  c
20.7780 -7.96875 20.4264 -7.85677 20.1504 -7.63281  c
19.8743 -7.40885 19.7363 -7.12500 19.7363 -6.78125  c
19.7363 -6.48958 19.8379 -6.23177 20.0410 -6.00781  c
20.2441 -5.78385 20.6165 -5.51562 21.1582 -5.20312  c
21.7676 -4.85938 l
22.5176 -4.43229 23.0410 -4.02865 23.3379 -3.64844  c
23.6348 -3.26823 23.7832 -2.81250 23.7832 -2.28125  c
23.7832 -1.53125 23.5072 -.927083 22.9551 -.468750  c
22.4030 -.0104167 21.6634 .218750 20.7363 .218750  c
h
25.5117 0.00000 m
25.5117 -8.67188 l
27.7617 -8.67188 l
28.6263 -8.67188 29.2904 -8.50781 29.7539 -8.17969  c
30.2174 -7.85156 30.4492 -7.38021 30.4492 -6.76562  c
30.4492 -5.71354 29.8555 -4.96354 28.6680 -4.51562  c
30.0846 -4.08854 30.7930 -3.30729 30.7930 -2.17188  c
30.7930 -1.46354 30.5586 -.924479 30.0898 -.554688  c
29.6211 -.184896 28.9440 0.00000 28.0586 0.00000  c
25.5117 0.00000 l
h
26.7305 -.921875 m
26.9805 -.921875 l
27.8763 -.921875 28.4596 -.979167 28.7305 -1.09375  c
29.2409 -1.30208 29.4961 -1.69792 29.4961 -2.28125  c
29.4961 -2.80208 29.2643 -3.23177 28.8008 -3.57031  c
28.3372 -3.90885 27.7617 -4.07812 27.0742 -4.07812  c
26.7305 -4.07812 l
26.7305 -.921875 l
h
26.7305 -4.85938 m
27.1211 -4.85938 l
27.7773 -4.85938 28.2852 -5.00000 28.6445 -5.28125  c
29.0039 -5.56250 29.1836 -5.95833 29.1836 -6.46875  c
29.1836 -7.32292 28.5221 -7.75000 27.1992 -7.75000  c
26.7305 -7.75000 l
26.7305 -4.85938 l
h
35.8047 0.00000 m
35.8047 -2.45312 l
31.8984 -2.45312 l
31.8984 -3.32812 l
35.8047 -8.67188 l
36.8984 -8.67188 l
36.8984 -3.40625 l
38.0547 -3.40625 l
38.0547 -2.45312 l
36.8984 -2.45312 l
36.8984 0.00000 l
35.8047 0.00000 l
h
33.0391 -3.40625 m
35.8828 -3.40625 l
35.8828 -7.25000 l
33.0391 -3.40625 l
h
41.8770 0.00000 m
41.8770 -3.62500 l
38.9707 -8.67188 l
40.3770 -8.67188 l
42.6270 -4.76562 l
45.0645 -8.67188 l
46.2051 -8.67188 l
43.0957 -3.64062 l
43.0957 0.00000 l
41.8770 0.00000 l
h
f
[ 1.97725 0.00000 0.00000 1.97725 59.9031 44.4502 ] defaultmatrix matrix concatmatrix setmatrix
.968627 .337255 .200000 RG
newpath
130.996 114.124 m
109.910 135.210 l
88.8244 114.124 l
109.910 93.0382 l
h
f
0.00000 0.00000 0.00000 RG
newpath
109.910 91.6240 m
132.410 114.124 l
109.910 136.624 l
87.4102 114.124 l
h
130.996 114.124 m
109.910 135.210 l
88.8244 114.124 l
109.910 93.0382 l
h
f*
109.910 114.124 translate
1.00000 1.00000 scale
-24.0176 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.32812 -8.67188 l
6.68750 -1.96875 l
6.68750 -8.67188 l
7.75000 -8.67188 l
7.75000 0.00000 l
6.54688 0.00000 l
2.17188 -6.70312 l
2.17188 0.00000 l
1.12500 0.00000 l
h
9.99023 0.00000 m
9.99023 -8.67188 l
12.8652 -8.67188 l
13.7298 -8.67188 14.4251 -8.57552 14.9512 -8.38281  c
15.4772 -8.19010 15.9329 -7.86458 16.3184 -7.40625  c
16.9329 -6.68750 17.2402 -5.73438 17.2402 -4.54688  c
17.2402 -3.09896 16.8600 -1.97917 16.0996 -1.18750  c
15.3392 -.395833 14.2663 0.00000 12.8809 0.00000  c
9.99023 0.00000 l
h
11.2090 -.921875 m
12.7871 -.921875 l
13.9121 -.921875 14.7090 -1.22396 15.1777 -1.82812  c
15.6882 -2.47396 15.9434 -3.33854 15.9434 -4.42188  c
15.9434 -5.44271 15.6934 -6.24479 15.1934 -6.82812  c
14.8913 -7.18229 14.5319 -7.42448 14.1152 -7.55469  c
13.6986 -7.68490 13.0684 -7.75000 12.2246 -7.75000  c
11.2090 -7.75000 l
11.2090 -.921875 l
h
18.9004 -8.67188 m
20.1348 -8.67188 l
20.1348 -3.20312 l
20.1348 -2.32812 20.2962 -1.69271 20.6191 -1.29688  c
20.9421 -.901042 21.4525 -.703125 22.1504 -.703125  c
22.8379 -.703125 23.3249 -.890625 23.6113 -1.26562  c
23.8978 -1.64062 24.0410 -2.27083 24.0410 -3.15625  c
24.0410 -8.67188 l
25.1191 -8.67188 l
25.1191 -3.17188 l
25.1191 -1.99479 24.8770 -1.13542 24.3926 -.593750  c
23.9082 -.0520833 23.1348 .218750 22.0723 .218750  c
20.9889 .218750 20.1895 -.0598958 19.6738 -.617188  c
19.1582 -1.17448 18.9004 -2.04167 18.9004 -3.21875  c
18.9004 -8.67188 l
h
27.2930 0.00000 m
27.2930 -8.67188 l
32.1367 -8.67188 l
32.1367 -7.75000 l
28.5117 -7.75000 l
28.5117 -4.84375 l
31.5586 -4.84375 l
31.5586 -3.93750 l
28.5117 -3.93750 l
28.5117 0.00000 l
27.2930 0.00000 l
h
36.0859 0.00000 m
32.8203 -8.67188 l
34.0391 -8.67188 l
36.7266 -1.57812 l
39.3203 -8.67188 l
40.3984 -8.67188 l
37.2422 0.00000 l
36.0859 0.00000 l
h
42.2598 0.00000 m
42.2598 -.875000 l
43.9941 -.875000 l
43.9941 -7.71875 l
42.2598 -7.28125 l
42.2598 -8.17188 l
45.1504 -8.89062 l
45.1504 -.875000 l
46.8848 -.875000 l
46.8848 0.00000 l
42.2598 0.00000 l
h
f
[ 1.97725 0.00000 0.00000 1.97725 59.9031 44.4502 ] defaultmatrix matrix concatmatrix setmatrix
.909804 .219608 .200000 RG
newpath
66.0858 51.9808 m
45.0000 73.0665 l
23.9142 51.9808 l
45.0000 30.8950 l
h
f
0.00000 0.00000 0.00000 RG
newpath
45.0000 29.4808 m
67.5000 51.9808 l
45.0000 74.4808 l
22.5000 51.9808 l
h
66.0858 51.9808 m
45.0000 73.0665 l
23.9142 51.9808 l
45.0000 30.8950 l
h
f*
45.0000 51.9808 translate
1.00000 1.00000 scale
-19.2041 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.96875 l
5.37500 -4.96875 l
5.37500 -4.06250 l
2.34375 -4.06250 l
2.34375 -.921875 l
6.21875 -.921875 l
6.21875 0.00000 l
1.12500 0.00000 l
h
8.75391 0.00000 m
6.51953 -8.67188 l
7.70703 -8.67188 l
9.47266 -1.82812 l
11.1133 -8.67188 l
12.3008 -8.67188 l
13.8477 -1.92188 l
15.7539 -8.67188 l
16.7539 -8.67188 l
14.3164 0.00000 l
13.0977 0.00000 l
11.5664 -6.68750 l
9.97266 0.00000 l
8.75391 0.00000 l
h
19.5820 .218750 m
19.0091 .218750 18.2695 .0885417 17.3633 -.171875  c
17.3633 -1.39062 l
18.3320 -.932292 19.1341 -.703125 19.7695 -.703125  c
20.2487 -.703125 20.6367 -.830729 20.9336 -1.08594  c
21.2305 -1.34115 21.3789 -1.67708 21.3789 -2.09375  c
21.3789 -2.42708 21.2826 -2.71354 21.0898 -2.95312  c
20.8971 -3.19271 20.5404 -3.45833 20.0195 -3.75000  c
19.4258 -4.09375 l
18.6862 -4.52083 18.1654 -4.91927 17.8633 -5.28906  c
17.5612 -5.65885 17.4102 -6.09375 17.4102 -6.59375  c
17.4102 -7.26042 17.6523 -7.80990 18.1367 -8.24219  c
18.6211 -8.67448 19.2383 -8.89062 19.9883 -8.89062  c
20.6549 -8.89062 21.3581 -8.78125 22.0977 -8.56250  c
22.0977 -7.43750 l
21.1810 -7.79167 20.4987 -7.96875 20.0508 -7.96875  c
19.6237 -7.96875 19.2721 -7.85677 18.9961 -7.63281  c
18.7201 -7.40885 18.5820 -7.12500 18.5820 -6.78125  c
18.5820 -6.48958 18.6836 -6.23177 18.8867 -6.00781  c
19.0898 -5.78385 19.4622 -5.51562 20.0039 -5.20312  c
20.6133 -4.85938 l
21.3633 -4.43229 21.8867 -4.02865 22.1836 -3.64844  c
22.4805 -3.26823 22.6289 -2.81250 22.6289 -2.28125  c
22.6289 -1.53125 22.3529 -.927083 21.8008 -.468750  c
21.2487 -.0104167 20.5091 .218750 19.5820 .218750  c
h
24.3574 0.00000 m
24.3574 -8.67188 l
26.9824 -8.67188 l
27.8158 -8.67188 28.4538 -8.48958 28.8965 -8.12500  c
29.3392 -7.76042 29.5605 -7.22396 29.5605 -6.51562  c
29.5605 -5.35938 28.9772 -4.54167 27.8105 -4.06250  c
30.7012 0.00000 l
29.1855 0.00000 l
26.7168 -3.67188 l
25.5762 -3.67188 l
25.5762 0.00000 l
24.3574 0.00000 l
h
25.5762 -4.59375 m
25.9668 -4.59375 l
27.5189 -4.59375 28.2949 -5.19792 28.2949 -6.40625  c
28.2949 -7.30208 27.6439 -7.75000 26.3418 -7.75000  c
25.5762 -7.75000 l
25.5762 -4.59375 l
h
32.6328 0.00000 m
32.6328 -.875000 l
34.3672 -.875000 l
34.3672 -7.71875 l
32.6328 -7.28125 l
32.6328 -8.17188 l
35.5234 -8.89062 l
35.5234 -.875000 l
37.2578 -.875000 l
37.2578 0.00000 l
32.6328 0.00000 l
h
f
[ 1.97725 0.00000 0.00000 1.97725 59.9031 44.4502 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
