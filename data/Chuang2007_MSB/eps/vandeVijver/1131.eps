%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 11:09:31 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ .909065 0.00000 0.00000 .909065 128.443 20.0592 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
60.1470 264.647 m
64.2735 225.530 l
S
newpath
51.5131 346.493 m
55.8530 305.353 l
S
newpath
81.5320 61.9272 m
85.8719 20.7872 l
S
newpath
93.7855 90.3796 m
131.507 111.595 l
S
newpath
77.2380 102.633 m
68.9944 180.778 l
S
newpath
62.2315 87.6266 m
17.9666 101.423 l
S
.949020 .298039 .200000 RG
newpath
79.0858 285.000 m
58.0000 306.086 l
36.9142 285.000 l
58.0000 263.914 l
h
f
0.00000 0.00000 0.00000 RG
newpath
58.0000 262.500 m
80.5000 285.000 l
58.0000 307.500 l
35.5000 285.000 l
h
79.0858 285.000 m
58.0000 306.086 l
36.9142 285.000 l
58.0000 263.914 l
h
f*
58.0000 285.000 translate
1.00000 1.00000 scale
-15.8408 4.42090 translate
newpath
7.64062 -.234375 m
6.58854 .0677083 5.67188 .218750 4.89062 .218750  c
3.50521 .218750 2.44531 -.174479 1.71094 -.960938  c
.976562 -1.74740 .609375 -2.87500 .609375 -4.34375  c
.609375 -5.78125 .981771 -6.89844 1.72656 -7.69531  c
2.47135 -8.49219 3.52083 -8.89062 4.87500 -8.89062  c
5.75000 -8.89062 6.66667 -8.76042 7.62500 -8.50000  c
7.62500 -7.35938 l
6.42708 -7.76562 5.51042 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.48438 1.92188 -4.32812  c
1.92188 -3.18229 2.19792 -2.29167 2.75000 -1.65625  c
3.30208 -1.02083 4.07812 -.703125 5.07812 -.703125  c
5.49479 -.703125 5.93750 -.776042 6.40625 -.921875  c
6.40625 -3.75000 l
7.64062 -3.75000 l
7.64062 -.234375 l
h
9.79688 0.00000 m
9.79688 -8.67188 l
12.4219 -8.67188 l
13.2552 -8.67188 13.8932 -8.48958 14.3359 -8.12500  c
14.7786 -7.76042 15.0000 -7.22396 15.0000 -6.51562  c
15.0000 -5.35938 14.4167 -4.54167 13.2500 -4.06250  c
16.1406 0.00000 l
14.6250 0.00000 l
12.1562 -3.67188 l
11.0156 -3.67188 l
11.0156 0.00000 l
9.79688 0.00000 l
h
11.0156 -4.59375 m
11.4062 -4.59375 l
12.9583 -4.59375 13.7344 -5.19792 13.7344 -6.40625  c
13.7344 -7.30208 13.0833 -7.75000 11.7812 -7.75000  c
11.0156 -7.75000 l
11.0156 -4.59375 l
h
17.3848 0.00000 m
17.3848 -8.67188 l
18.5410 -8.67188 l
18.5410 -4.40625 l
22.0410 -8.67188 l
23.2754 -8.67188 l
19.8848 -4.53125 l
23.8848 0.00000 l
22.3223 0.00000 l
18.5410 -4.39062 l
18.5410 0.00000 l
17.3848 0.00000 l
h
26.1562 -4.50000 m
26.7083 -5.20833 27.4010 -5.56250 28.2344 -5.56250  c
28.9948 -5.56250 29.6172 -5.31250 30.1016 -4.81250  c
30.5859 -4.31250 30.8281 -3.67188 30.8281 -2.89062  c
30.8281 -1.98438 30.5573 -1.23958 30.0156 -.656250  c
29.4740 -.0729167 28.7865 .218750 27.9531 .218750  c
26.9948 .218750 26.2448 -.166667 25.7031 -.937500  c
25.1615 -1.70833 24.8906 -2.77604 24.8906 -4.14062  c
24.8906 -5.65104 25.2005 -6.82031 25.8203 -7.64844  c
26.4401 -8.47656 27.3125 -8.89062 28.4375 -8.89062  c
28.9583 -8.89062 29.6042 -8.78125 30.3750 -8.56250  c
30.3750 -7.56250 l
29.5625 -7.87500 28.8958 -8.03125 28.3750 -8.03125  c
26.8958 -8.03125 26.1562 -6.85417 26.1562 -4.50000  c
h
29.6562 -2.62500 m
29.6562 -3.28125 29.5104 -3.79688 29.2188 -4.17188  c
28.9271 -4.54688 28.5156 -4.73438 27.9844 -4.73438  c
27.5052 -4.73438 27.0885 -4.57031 26.7344 -4.24219  c
26.3802 -3.91406 26.2031 -3.52083 26.2031 -3.06250  c
26.2031 -2.33333 26.3698 -1.75000 26.7031 -1.31250  c
27.0365 -.875000 27.4792 -.656250 28.0312 -.656250  c
28.5312 -.656250 28.9271 -.833333 29.2188 -1.18750  c
29.5104 -1.54167 29.6562 -2.02083 29.6562 -2.62500  c
h
f
[ .909065 0.00000 0.00000 .909065 128.443 20.0592 ] defaultmatrix matrix concatmatrix setmatrix
.960784 .325490 .200000 RG
newpath
109.105 .434254 m
88.0190 21.5200 l
66.9332 .434254 l
88.0190 -20.6515 l
h
f
0.00000 0.00000 0.00000 RG
newpath
88.0190 -22.0657 m
110.519 .434254 l
88.0190 22.9343 l
65.5190 .434254 l
h
109.105 .434254 m
88.0190 21.5200 l
66.9332 .434254 l
88.0190 -20.6515 l
h
f*
88.0190 .434254 translate
1.00000 1.00000 scale
-11.6543 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -5.01562 l
6.46875 -5.01562 l
6.46875 -8.67188 l
7.70312 -8.67188 l
7.70312 0.00000 l
6.46875 0.00000 l
6.46875 -4.09375 l
2.34375 -4.09375 l
2.34375 0.00000 l
1.12500 0.00000 l
h
9.94336 0.00000 m
9.94336 -8.67188 l
12.5684 -8.67188 l
13.4017 -8.67188 14.0397 -8.48958 14.4824 -8.12500  c
14.9251 -7.76042 15.1465 -7.22396 15.1465 -6.51562  c
15.1465 -5.35938 14.5632 -4.54167 13.3965 -4.06250  c
16.2871 0.00000 l
14.7715 0.00000 l
12.3027 -3.67188 l
11.1621 -3.67188 l
11.1621 0.00000 l
9.94336 0.00000 l
h
11.1621 -4.59375 m
11.5527 -4.59375 l
13.1048 -4.59375 13.8809 -5.19792 13.8809 -6.40625  c
13.8809 -7.30208 13.2298 -7.75000 11.9277 -7.75000  c
11.1621 -7.75000 l
11.1621 -4.59375 l
h
17.5312 0.00000 m
17.5312 -8.67188 l
19.7812 -8.67188 l
20.6458 -8.67188 21.3099 -8.50781 21.7734 -8.17969  c
22.2370 -7.85156 22.4688 -7.38021 22.4688 -6.76562  c
22.4688 -5.71354 21.8750 -4.96354 20.6875 -4.51562  c
22.1042 -4.08854 22.8125 -3.30729 22.8125 -2.17188  c
22.8125 -1.46354 22.5781 -.924479 22.1094 -.554688  c
21.6406 -.184896 20.9635 0.00000 20.0781 0.00000  c
17.5312 0.00000 l
h
18.7500 -.921875 m
19.0000 -.921875 l
19.8958 -.921875 20.4792 -.979167 20.7500 -1.09375  c
21.2604 -1.30208 21.5156 -1.69792 21.5156 -2.28125  c
21.5156 -2.80208 21.2839 -3.23177 20.8203 -3.57031  c
20.3568 -3.90885 19.7812 -4.07812 19.0938 -4.07812  c
18.7500 -4.07812 l
18.7500 -.921875 l
h
18.7500 -4.85938 m
19.1406 -4.85938 l
19.7969 -4.85938 20.3047 -5.00000 20.6641 -5.28125  c
21.0234 -5.56250 21.2031 -5.95833 21.2031 -6.46875  c
21.2031 -7.32292 20.5417 -7.75000 19.2188 -7.75000  c
18.7500 -7.75000 l
18.7500 -4.85938 l
h
f
[ .909065 0.00000 0.00000 .909065 128.443 20.0592 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .505882 .305882 RG
newpath
172.617 122.625 m
172.617 134.500 162.992 144.125 151.117 144.125  c
139.243 144.125 129.617 134.500 129.617 122.625  c
129.617 110.751 139.243 101.125 151.117 101.125  c
162.992 101.125 172.617 110.751 172.617 122.625  c
h
f
0.00000 0.00000 0.00000 RG
newpath
173.617 122.625 m
173.617 135.052 163.544 145.125 151.117 145.125  c
138.691 145.125 128.617 135.052 128.617 122.625  c
128.617 110.199 138.691 100.125 151.117 100.125  c
163.544 100.125 173.617 110.199 173.617 122.625  c
h
172.617 122.625 m
172.617 134.500 162.992 144.125 151.117 144.125  c
139.243 144.125 129.617 134.500 129.617 122.625  c
129.617 110.751 139.243 101.125 151.117 101.125  c
162.992 101.125 172.617 110.751 172.617 122.625  c
h
f*
151.117 122.625 translate
1.00000 1.00000 scale
-31.1309 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.34375 -8.67188 l
2.34375 -5.01562 l
6.46875 -5.01562 l
6.46875 -8.67188 l
7.70312 -8.67188 l
7.70312 0.00000 l
6.46875 0.00000 l
6.46875 -4.09375 l
2.34375 -4.09375 l
2.34375 0.00000 l
1.12500 0.00000 l
h
9.94336 0.00000 m
9.94336 -8.67188 l
11.1465 -8.67188 l
15.5059 -1.96875 l
15.5059 -8.67188 l
16.5684 -8.67188 l
16.5684 0.00000 l
15.3652 0.00000 l
10.9902 -6.70312 l
10.9902 0.00000 l
9.94336 0.00000 l
h
18.8086 0.00000 m
18.8086 -8.67188 l
21.4336 -8.67188 l
22.2669 -8.67188 22.9049 -8.48958 23.3477 -8.12500  c
23.7904 -7.76042 24.0117 -7.22396 24.0117 -6.51562  c
24.0117 -5.35938 23.4284 -4.54167 22.2617 -4.06250  c
25.1523 0.00000 l
23.6367 0.00000 l
21.1680 -3.67188 l
20.0273 -3.67188 l
20.0273 0.00000 l
18.8086 0.00000 l
h
20.0273 -4.59375 m
20.4180 -4.59375 l
21.9701 -4.59375 22.7461 -5.19792 22.7461 -6.40625  c
22.7461 -7.30208 22.0951 -7.75000 20.7930 -7.75000  c
20.0273 -7.75000 l
20.0273 -4.59375 l
h
26.3965 0.00000 m
26.3965 -8.67188 l
28.7559 -8.67188 l
29.7975 -8.67188 30.5475 -8.49479 31.0059 -8.14062  c
31.4642 -7.78646 31.6934 -7.20833 31.6934 -6.40625  c
31.6934 -5.47917 31.3809 -4.75521 30.7559 -4.23438  c
30.1309 -3.71354 29.2663 -3.45312 28.1621 -3.45312  c
27.6152 -3.45312 l
27.6152 0.00000 l
26.3965 0.00000 l
h
27.6152 -4.37500 m
28.1152 -4.37500 l
28.8444 -4.37500 29.4069 -4.54427 29.8027 -4.88281  c
30.1986 -5.22135 30.3965 -5.69792 30.3965 -6.31250  c
30.3965 -6.82292 30.2402 -7.19010 29.9277 -7.41406  c
29.6152 -7.63802 29.0944 -7.75000 28.3652 -7.75000  c
27.6152 -7.75000 l
27.6152 -4.37500 l
h
37.4199 -3.31250 m
35.9355 -7.06250 l
34.4668 -3.31250 l
37.4199 -3.31250 l
h
38.7168 0.00000 m
37.7793 -2.40625 l
34.1074 -2.40625 l
33.1543 0.00000 l
31.9980 0.00000 l
35.4512 -8.67188 l
36.6699 -8.67188 l
40.0449 0.00000 l
38.7168 0.00000 l
h
41.1836 0.00000 m
41.1836 -1.01562 l
41.5169 -1.79688 42.1940 -2.65104 43.2148 -3.57812  c
43.8867 -4.17188 l
44.7305 -4.94271 45.1523 -5.70833 45.1523 -6.46875  c
45.1523 -6.94792 45.0091 -7.32552 44.7227 -7.60156  c
44.4362 -7.87760 44.0378 -8.01562 43.5273 -8.01562  c
42.9232 -8.01562 42.2148 -7.78646 41.4023 -7.32812  c
41.4023 -8.34375 l
42.1732 -8.70833 42.9336 -8.89062 43.6836 -8.89062  c
44.4961 -8.89062 45.1497 -8.67188 45.6445 -8.23438  c
46.1393 -7.79688 46.3867 -7.21875 46.3867 -6.50000  c
46.3867 -5.97917 46.2617 -5.51562 46.0117 -5.10938  c
45.7617 -4.70312 45.2982 -4.21354 44.6211 -3.64062  c
44.1836 -3.26562 l
43.2565 -2.48438 42.7201 -1.73438 42.5742 -1.01562  c
46.3398 -1.01562 l
46.3398 0.00000 l
41.1836 0.00000 l
h
48.8965 0.00000 m
48.8965 -8.67188 l
51.1465 -8.67188 l
52.0111 -8.67188 52.6751 -8.50781 53.1387 -8.17969  c
53.6022 -7.85156 53.8340 -7.38021 53.8340 -6.76562  c
53.8340 -5.71354 53.2402 -4.96354 52.0527 -4.51562  c
53.4694 -4.08854 54.1777 -3.30729 54.1777 -2.17188  c
54.1777 -1.46354 53.9434 -.924479 53.4746 -.554688  c
53.0059 -.184896 52.3288 0.00000 51.4434 0.00000  c
48.8965 0.00000 l
h
50.1152 -.921875 m
50.3652 -.921875 l
51.2611 -.921875 51.8444 -.979167 52.1152 -1.09375  c
52.6257 -1.30208 52.8809 -1.69792 52.8809 -2.28125  c
52.8809 -2.80208 52.6491 -3.23177 52.1855 -3.57031  c
51.7220 -3.90885 51.1465 -4.07812 50.4590 -4.07812  c
50.1152 -4.07812 l
50.1152 -.921875 l
h
50.1152 -4.85938 m
50.5059 -4.85938 l
51.1621 -4.85938 51.6699 -5.00000 52.0293 -5.28125  c
52.3887 -5.56250 52.5684 -5.95833 52.5684 -6.46875  c
52.5684 -7.32292 51.9069 -7.75000 50.5840 -7.75000  c
50.1152 -7.75000 l
50.1152 -4.85938 l
h
56.4863 0.00000 m
56.4863 -.875000 l
58.2207 -.875000 l
58.2207 -7.71875 l
56.4863 -7.28125 l
56.4863 -8.17188 l
59.3770 -8.89062 l
59.3770 -.875000 l
61.1113 -.875000 l
61.1113 0.00000 l
56.4863 0.00000 l
h
f
[ .909065 0.00000 0.00000 .909065 128.443 20.0592 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .698039 .498039 RG
newpath
88.1340 203.154 m
88.1340 215.028 78.5081 224.654 66.6340 224.654  c
54.7598 224.654 45.1340 215.028 45.1340 203.154  c
45.1340 191.280 54.7598 181.654 66.6340 181.654  c
78.5081 181.654 88.1340 191.280 88.1340 203.154  c
h
f
0.00000 0.00000 0.00000 RG
newpath
89.1340 203.154 m
89.1340 215.581 79.0604 225.654 66.6340 225.654  c
54.2075 225.654 44.1340 215.581 44.1340 203.154  c
44.1340 190.728 54.2075 180.654 66.6340 180.654  c
79.0604 180.654 89.1340 190.728 89.1340 203.154  c
h
88.1340 203.154 m
88.1340 215.028 78.5081 224.654 66.6340 224.654  c
54.7598 224.654 45.1340 215.028 45.1340 203.154  c
45.1340 191.280 54.7598 181.654 66.6340 181.654  c
78.5081 181.654 88.1340 191.280 88.1340 203.154  c
h
f*
66.6340 203.154 translate
1.00000 1.00000 scale
-21.3164 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
9.42773 0.00000 m
9.42773 -8.67188 l
10.6465 -8.67188 l
10.6465 -5.01562 l
14.7715 -5.01562 l
14.7715 -8.67188 l
16.0059 -8.67188 l
16.0059 0.00000 l
14.7715 0.00000 l
14.7715 -4.09375 l
10.6465 -4.09375 l
10.6465 0.00000 l
9.42773 0.00000 l
h
18.2461 0.00000 m
18.2461 -8.67188 l
20.8711 -8.67188 l
21.7044 -8.67188 22.3424 -8.48958 22.7852 -8.12500  c
23.2279 -7.76042 23.4492 -7.22396 23.4492 -6.51562  c
23.4492 -5.35938 22.8659 -4.54167 21.6992 -4.06250  c
24.5898 0.00000 l
23.0742 0.00000 l
20.6055 -3.67188 l
19.4648 -3.67188 l
19.4648 0.00000 l
18.2461 0.00000 l
h
19.4648 -4.59375 m
19.8555 -4.59375 l
21.4076 -4.59375 22.1836 -5.19792 22.1836 -6.40625  c
22.1836 -7.30208 21.5326 -7.75000 20.2305 -7.75000  c
19.4648 -7.75000 l
19.4648 -4.59375 l
h
25.8340 0.00000 m
25.8340 -8.67188 l
27.5371 -8.67188 l
29.9434 -1.96875 l
32.4121 -8.67188 l
33.9277 -8.67188 l
33.9277 0.00000 l
32.7871 0.00000 l
32.7871 -7.06250 l
30.3965 -.578125 l
29.2090 -.578125 l
26.8809 -7.07812 l
26.8809 0.00000 l
25.8340 0.00000 l
h
36.2637 -.0625000 m
36.2637 -1.14062 l
37.0970 -.817708 37.7480 -.656250 38.2168 -.656250  c
38.7689 -.656250 39.2194 -.817708 39.5684 -1.14062  c
39.9173 -1.46354 40.0918 -1.88021 40.0918 -2.39062  c
40.0918 -3.60938 39.2376 -4.21875 37.5293 -4.21875  c
37.0605 -4.21875 l
37.0605 -5.00000 l
37.4668 -5.00000 l
39.0710 -5.00000 39.8730 -5.56250 39.8730 -6.68750  c
39.8730 -7.57292 39.3470 -8.01562 38.2949 -8.01562  c
37.7116 -8.01562 37.0762 -7.85417 36.3887 -7.53125  c
36.3887 -8.54688 l
37.0658 -8.77604 37.7272 -8.89062 38.3730 -8.89062  c
40.1439 -8.89062 41.0293 -8.21875 41.0293 -6.87500  c
41.0293 -5.85417 40.4251 -5.13021 39.2168 -4.70312  c
40.6230 -4.38021 41.3262 -3.61458 41.3262 -2.40625  c
41.3262 -1.58333 41.0553 -.940104 40.5137 -.476562  c
39.9720 -.0130208 39.2324 .218750 38.2949 .218750  c
37.7533 .218750 37.0762 .125000 36.2637 -.0625000  c
h
f
[ .909065 0.00000 0.00000 .909065 128.443 20.0592 ] defaultmatrix matrix concatmatrix setmatrix
.992157 .388235 .200000 RG
newpath
70.4518 366.846 m
49.3660 387.932 l
28.2803 366.846 l
49.3660 345.760 l
h
f
0.00000 0.00000 0.00000 RG
newpath
49.3660 344.346 m
71.8660 366.846 l
49.3660 389.346 l
26.8660 366.846 l
h
70.4518 366.846 m
49.3660 387.932 l
28.2803 366.846 l
49.3660 345.760 l
h
f*
49.3660 366.846 translate
1.00000 1.00000 scale
-29.8975 4.42090 translate
newpath
2.81250 .218750 m
2.23958 .218750 1.50000 .0885417 .593750 -.171875  c
.593750 -1.39062 l
1.56250 -.932292 2.36458 -.703125 3.00000 -.703125  c
3.47917 -.703125 3.86719 -.830729 4.16406 -1.08594  c
4.46094 -1.34115 4.60938 -1.67708 4.60938 -2.09375  c
4.60938 -2.42708 4.51302 -2.71354 4.32031 -2.95312  c
4.12760 -3.19271 3.77083 -3.45833 3.25000 -3.75000  c
2.65625 -4.09375 l
1.91667 -4.52083 1.39583 -4.91927 1.09375 -5.28906  c
.791667 -5.65885 .640625 -6.09375 .640625 -6.59375  c
.640625 -7.26042 .882812 -7.80990 1.36719 -8.24219  c
1.85156 -8.67448 2.46875 -8.89062 3.21875 -8.89062  c
3.88542 -8.89062 4.58854 -8.78125 5.32812 -8.56250  c
5.32812 -7.43750 l
4.41146 -7.79167 3.72917 -7.96875 3.28125 -7.96875  c
2.85417 -7.96875 2.50260 -7.85677 2.22656 -7.63281  c
1.95052 -7.40885 1.81250 -7.12500 1.81250 -6.78125  c
1.81250 -6.48958 1.91406 -6.23177 2.11719 -6.00781  c
2.32031 -5.78385 2.69271 -5.51562 3.23438 -5.20312  c
3.84375 -4.85938 l
4.59375 -4.43229 5.11719 -4.02865 5.41406 -3.64844  c
5.71094 -3.26823 5.85938 -2.81250 5.85938 -2.28125  c
5.85938 -1.53125 5.58333 -.927083 5.03125 -.468750  c
4.47917 -.0104167 3.73958 .218750 2.81250 .218750  c
h
7.58789 0.00000 m
7.58789 -8.67188 l
8.80664 -8.67188 l
8.80664 -.921875 l
12.7129 -.921875 l
12.7129 0.00000 l
7.58789 0.00000 l
h
17.6895 .218750 m
16.3457 .218750 15.3066 -.177083 14.5723 -.968750  c
13.8379 -1.76042 13.4707 -2.88021 13.4707 -4.32812  c
13.4707 -5.77604 13.8457 -6.89844 14.5957 -7.69531  c
15.3457 -8.49219 16.3978 -8.89062 17.7520 -8.89062  c
18.5332 -8.89062 19.4447 -8.76562 20.4863 -8.51562  c
20.4863 -7.35938 l
19.2988 -7.76562 18.3822 -7.96875 17.7363 -7.96875  c
16.7988 -7.96875 16.0723 -7.65104 15.5566 -7.01562  c
15.0410 -6.38021 14.7832 -5.47917 14.7832 -4.31250  c
14.7832 -3.20833 15.0566 -2.33854 15.6035 -1.70312  c
16.1504 -1.06771 16.9030 -.750000 17.8613 -.750000  c
18.6842 -.750000 19.5645 -1.00000 20.5020 -1.50000  c
20.5020 -.453125 l
19.6478 -.00520833 18.7103 .218750 17.6895 .218750  c
h
22.5234 -.0468750 m
22.5234 -1.03125 l
23.2630 -.781250 23.8880 -.656250 24.3984 -.656250  c
25.1172 -.656250 25.6797 -.960938 26.0859 -1.57031  c
26.4922 -2.17969 26.6953 -3.03125 26.6953 -4.12500  c
26.1120 -3.39583 25.4453 -3.03125 24.6953 -3.03125  c
23.9661 -3.03125 23.3490 -3.29948 22.8438 -3.83594  c
22.3385 -4.37240 22.0859 -5.03125 22.0859 -5.81250  c
22.0859 -6.69792 22.3542 -7.43229 22.8906 -8.01562  c
23.4271 -8.59896 24.1068 -8.89062 24.9297 -8.89062  c
25.8776 -8.89062 26.6224 -8.51302 27.1641 -7.75781  c
27.7057 -7.00260 27.9766 -5.96875 27.9766 -4.65625  c
27.9766 -3.16667 27.6458 -1.98177 26.9844 -1.10156  c
26.3229 -.221354 25.4245 .218750 24.2891 .218750  c
23.8411 .218750 23.2526 .130208 22.5234 -.0468750  c
h
23.2266 -6.03125 m
23.2266 -5.36458 23.3776 -4.83854 23.6797 -4.45312  c
23.9818 -4.06771 24.3932 -3.87500 24.9141 -3.87500  c
25.4036 -3.87500 25.8203 -4.03906 26.1641 -4.36719  c
26.5078 -4.69531 26.6797 -5.09375 26.6797 -5.56250  c
26.6797 -6.30208 26.5130 -6.89844 26.1797 -7.35156  c
25.8464 -7.80469 25.4089 -8.03125 24.8672 -8.03125  c
24.3568 -8.03125 23.9557 -7.85156 23.6641 -7.49219  c
23.3724 -7.13281 23.2266 -6.64583 23.2266 -6.03125  c
h
34.2676 -3.31250 m
32.7832 -7.06250 l
31.3145 -3.31250 l
34.2676 -3.31250 l
h
35.5645 0.00000 m
34.6270 -2.40625 l
30.9551 -2.40625 l
30.0020 0.00000 l
28.8457 0.00000 l
32.2988 -8.67188 l
33.5176 -8.67188 l
36.8926 0.00000 l
35.5645 0.00000 l
h
38.2500 -.0625000 m
38.2500 -1.14062 l
39.0833 -.817708 39.7344 -.656250 40.2031 -.656250  c
40.7552 -.656250 41.2057 -.817708 41.5547 -1.14062  c
41.9036 -1.46354 42.0781 -1.88021 42.0781 -2.39062  c
42.0781 -3.60938 41.2240 -4.21875 39.5156 -4.21875  c
39.0469 -4.21875 l
39.0469 -5.00000 l
39.4531 -5.00000 l
41.0573 -5.00000 41.8594 -5.56250 41.8594 -6.68750  c
41.8594 -7.57292 41.3333 -8.01562 40.2812 -8.01562  c
39.6979 -8.01562 39.0625 -7.85417 38.3750 -7.53125  c
38.3750 -8.54688 l
39.0521 -8.77604 39.7135 -8.89062 40.3594 -8.89062  c
42.1302 -8.89062 43.0156 -8.21875 43.0156 -6.87500  c
43.0156 -5.85417 42.4115 -5.13021 41.2031 -4.70312  c
42.6094 -4.38021 43.3125 -3.61458 43.3125 -2.40625  c
43.3125 -1.58333 43.0417 -.940104 42.5000 -.476562  c
41.9583 -.0130208 41.2188 .218750 40.2812 .218750  c
39.7396 .218750 39.0625 .125000 38.2500 -.0625000  c
h
45.7441 0.00000 m
45.7441 -8.67188 l
48.3691 -8.67188 l
49.2025 -8.67188 49.8405 -8.48958 50.2832 -8.12500  c
50.7259 -7.76042 50.9473 -7.22396 50.9473 -6.51562  c
50.9473 -5.35938 50.3639 -4.54167 49.1973 -4.06250  c
52.0879 0.00000 l
50.5723 0.00000 l
48.1035 -3.67188 l
46.9629 -3.67188 l
46.9629 0.00000 l
45.7441 0.00000 l
h
46.9629 -4.59375 m
47.3535 -4.59375 l
48.9056 -4.59375 49.6816 -5.19792 49.6816 -6.40625  c
49.6816 -7.30208 49.0306 -7.75000 47.7285 -7.75000  c
46.9629 -7.75000 l
46.9629 -4.59375 l
h
54.0195 0.00000 m
54.0195 -.875000 l
55.7539 -.875000 l
55.7539 -7.71875 l
54.0195 -7.28125 l
54.0195 -8.17188 l
56.9102 -8.89062 l
56.9102 -.875000 l
58.6445 -.875000 l
58.6445 0.00000 l
54.0195 0.00000 l
h
f
[ .909065 0.00000 0.00000 .909065 128.443 20.0592 ] defaultmatrix matrix concatmatrix setmatrix
.972549 .341176 .200000 RG
newpath
21.8989 106.770 m
.813084 127.856 l
-20.2727 106.770 l
.813084 85.6840 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.813084 84.2698 m
23.3131 106.770 l
.813084 129.270 l
-21.6869 106.770 l
h
21.8989 106.770 m
.813084 127.856 l
-20.2727 106.770 l
.813084 85.6840 l
h
f*
.813084 106.770 translate
1.00000 1.00000 scale
-26.7363 4.42090 translate
newpath
5.51562 -3.31250 m
4.03125 -7.06250 l
2.56250 -3.31250 l
5.51562 -3.31250 l
h
6.81250 0.00000 m
5.87500 -2.40625 l
2.20312 -2.40625 l
1.25000 0.00000 l
.0937500 0.00000 l
3.54688 -8.67188 l
4.76562 -8.67188 l
8.14062 0.00000 l
6.81250 0.00000 l
h
9.40430 0.00000 m
9.40430 -8.67188 l
12.0293 -8.67188 l
12.8626 -8.67188 13.5007 -8.48958 13.9434 -8.12500  c
14.3861 -7.76042 14.6074 -7.22396 14.6074 -6.51562  c
14.6074 -5.35938 14.0241 -4.54167 12.8574 -4.06250  c
15.7480 0.00000 l
14.2324 0.00000 l
11.7637 -3.67188 l
10.6230 -3.67188 l
10.6230 0.00000 l
9.40430 0.00000 l
h
10.6230 -4.59375 m
11.0137 -4.59375 l
12.5658 -4.59375 13.3418 -5.19792 13.3418 -6.40625  c
13.3418 -7.30208 12.6908 -7.75000 11.3887 -7.75000  c
10.6230 -7.75000 l
10.6230 -4.59375 l
h
16.9922 0.00000 m
16.9922 -8.67188 l
21.8359 -8.67188 l
21.8359 -7.75000 l
18.2109 -7.75000 l
18.2109 -4.84375 l
21.2578 -4.84375 l
21.2578 -3.93750 l
18.2109 -3.93750 l
18.2109 0.00000 l
16.9922 0.00000 l
h
29.9414 -.234375 m
28.8893 .0677083 27.9727 .218750 27.1914 .218750  c
25.8060 .218750 24.7461 -.174479 24.0117 -.960938  c
23.2773 -1.74740 22.9102 -2.87500 22.9102 -4.34375  c
22.9102 -5.78125 23.2826 -6.89844 24.0273 -7.69531  c
24.7721 -8.49219 25.8216 -8.89062 27.1758 -8.89062  c
28.0508 -8.89062 28.9674 -8.76042 29.9258 -8.50000  c
29.9258 -7.35938 l
28.7279 -7.76562 27.8112 -7.96875 27.1758 -7.96875  c
26.2383 -7.96875 25.5117 -7.65104 24.9961 -7.01562  c
24.4805 -6.38021 24.2227 -5.48438 24.2227 -4.32812  c
24.2227 -3.18229 24.4987 -2.29167 25.0508 -1.65625  c
25.6029 -1.02083 26.3789 -.703125 27.3789 -.703125  c
27.7956 -.703125 28.2383 -.776042 28.7070 -.921875  c
28.7070 -3.75000 l
29.9414 -3.75000 l
29.9414 -.234375 l
h
36.4883 -3.31250 m
35.0039 -7.06250 l
33.5352 -3.31250 l
36.4883 -3.31250 l
h
37.7852 0.00000 m
36.8477 -2.40625 l
33.1758 -2.40625 l
32.2227 0.00000 l
31.0664 0.00000 l
34.5195 -8.67188 l
35.7383 -8.67188 l
39.1133 0.00000 l
37.7852 0.00000 l
h
40.3770 0.00000 m
40.3770 -8.67188 l
42.7363 -8.67188 l
43.7780 -8.67188 44.5280 -8.49479 44.9863 -8.14062  c
45.4447 -7.78646 45.6738 -7.20833 45.6738 -6.40625  c
45.6738 -5.47917 45.3613 -4.75521 44.7363 -4.23438  c
44.1113 -3.71354 43.2467 -3.45312 42.1426 -3.45312  c
41.5957 -3.45312 l
41.5957 0.00000 l
40.3770 0.00000 l
h
41.5957 -4.37500 m
42.0957 -4.37500 l
42.8249 -4.37500 43.3874 -4.54427 43.7832 -4.88281  c
44.1790 -5.22135 44.3770 -5.69792 44.3770 -6.31250  c
44.3770 -6.82292 44.2207 -7.19010 43.9082 -7.41406  c
43.5957 -7.63802 43.0749 -7.75000 42.3457 -7.75000  c
41.5957 -7.75000 l
41.5957 -4.37500 l
h
47.6973 0.00000 m
47.6973 -.875000 l
49.4316 -.875000 l
49.4316 -7.71875 l
47.6973 -7.28125 l
47.6973 -8.17188 l
50.5879 -8.89062 l
50.5879 -.875000 l
52.3223 -.875000 l
52.3223 0.00000 l
47.6973 0.00000 l
h
f
[ .909065 0.00000 0.00000 .909065 128.443 20.0592 ] defaultmatrix matrix concatmatrix setmatrix
.921569 .247059 .200000 RG
newpath
100.471 82.2801 m
79.3850 103.366 l
58.2992 82.2801 l
79.3850 61.1943 l
h
f
0.00000 0.00000 0.00000 RG
newpath
79.3850 59.7801 m
101.885 82.2801 l
79.3850 104.780 l
56.8850 82.2801 l
h
100.471 82.2801 m
79.3850 103.366 l
58.2992 82.2801 l
79.3850 61.1943 l
h
f*
79.3850 82.2801 translate
1.00000 1.00000 scale
-14.9443 4.42090 translate
newpath
5.51562 -3.31250 m
4.03125 -7.06250 l
2.56250 -3.31250 l
5.51562 -3.31250 l
h
6.81250 0.00000 m
5.87500 -2.40625 l
2.20312 -2.40625 l
1.25000 0.00000 l
.0937500 0.00000 l
3.54688 -8.67188 l
4.76562 -8.67188 l
8.14062 0.00000 l
6.81250 0.00000 l
h
9.40430 0.00000 m
9.40430 -8.67188 l
12.0293 -8.67188 l
12.8626 -8.67188 13.5007 -8.48958 13.9434 -8.12500  c
14.3861 -7.76042 14.6074 -7.22396 14.6074 -6.51562  c
14.6074 -5.35938 14.0241 -4.54167 12.8574 -4.06250  c
15.7480 0.00000 l
14.2324 0.00000 l
11.7637 -3.67188 l
10.6230 -3.67188 l
10.6230 0.00000 l
9.40430 0.00000 l
h
10.6230 -4.59375 m
11.0137 -4.59375 l
12.5658 -4.59375 13.3418 -5.19792 13.3418 -6.40625  c
13.3418 -7.30208 12.6908 -7.75000 11.3887 -7.75000  c
10.6230 -7.75000 l
10.6230 -4.59375 l
h
16.9922 0.00000 m
16.9922 -8.67188 l
21.8359 -8.67188 l
21.8359 -7.75000 l
18.2109 -7.75000 l
18.2109 -4.84375 l
21.2578 -4.84375 l
21.2578 -3.93750 l
18.2109 -3.93750 l
18.2109 0.00000 l
16.9922 0.00000 l
h
24.1133 0.00000 m
24.1133 -.875000 l
25.8477 -.875000 l
25.8477 -7.71875 l
24.1133 -7.28125 l
24.1133 -8.17188 l
27.0039 -8.89062 l
27.0039 -.875000 l
28.7383 -.875000 l
28.7383 0.00000 l
24.1133 0.00000 l
h
f
[ .909065 0.00000 0.00000 .909065 128.443 20.0592 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
