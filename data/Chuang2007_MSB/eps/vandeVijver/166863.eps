%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 11:09:43 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.97493 0.00000 0.00000 1.97493 72.3583 43.2369 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
44.2020 71.3172 m
42.4001 22.3092 l
S
newpath
53.2356 78.7548 m
78.2300 35.4632 l
S
newpath
14.2644 127.236 m
30.7356 136.745 l
S
newpath
45.0000 115.519 m
45.0000 122.481 l
S
newpath
59.7122 85.2314 m
106.844 60.2822 l
S
newpath
14.2644 110.764 m
30.7356 101.255 l
S
.890196 .176471 .200000 RG
newpath
62.6879 .607130 m
41.6021 21.6929 l
20.5164 .607130 l
41.6021 -20.4787 l
h
f
0.00000 0.00000 0.00000 RG
newpath
41.6021 -21.8929 m
64.1021 .607130 l
41.6021 23.1071 l
19.1021 .607130 l
h
62.6879 .607130 m
41.6021 21.6929 l
20.5164 .607130 l
41.6021 -20.4787 l
h
f*
41.6021 .607130 translate
1.00000 1.00000 scale
-16.5498 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
11.3379 -8.67188 l
12.1712 -8.67188 12.8092 -8.48958 13.2520 -8.12500  c
13.6947 -7.76042 13.9160 -7.22396 13.9160 -6.51562  c
13.9160 -5.35938 13.3327 -4.54167 12.1660 -4.06250  c
15.0566 0.00000 l
13.5410 0.00000 l
11.0723 -3.67188 l
9.93164 -3.67188 l
9.93164 0.00000 l
8.71289 0.00000 l
h
9.93164 -4.59375 m
10.3223 -4.59375 l
11.8743 -4.59375 12.6504 -5.19792 12.6504 -6.40625  c
12.6504 -7.30208 11.9993 -7.75000 10.6973 -7.75000  c
9.93164 -7.75000 l
9.93164 -4.59375 l
h
16.3008 0.00000 m
16.3008 -8.67188 l
18.0039 -8.67188 l
20.4102 -1.96875 l
22.8789 -8.67188 l
24.3945 -8.67188 l
24.3945 0.00000 l
23.2539 0.00000 l
23.2539 -7.06250 l
20.8633 -.578125 l
19.6758 -.578125 l
17.3477 -7.07812 l
17.3477 0.00000 l
16.3008 0.00000 l
h
26.5117 0.00000 m
26.5117 -1.01562 l
26.8451 -1.79688 27.5221 -2.65104 28.5430 -3.57812  c
29.2148 -4.17188 l
30.0586 -4.94271 30.4805 -5.70833 30.4805 -6.46875  c
30.4805 -6.94792 30.3372 -7.32552 30.0508 -7.60156  c
29.7643 -7.87760 29.3659 -8.01562 28.8555 -8.01562  c
28.2513 -8.01562 27.5430 -7.78646 26.7305 -7.32812  c
26.7305 -8.34375 l
27.5013 -8.70833 28.2617 -8.89062 29.0117 -8.89062  c
29.8242 -8.89062 30.4779 -8.67188 30.9727 -8.23438  c
31.4674 -7.79688 31.7148 -7.21875 31.7148 -6.50000  c
31.7148 -5.97917 31.5898 -5.51562 31.3398 -5.10938  c
31.0898 -4.70312 30.6263 -4.21354 29.9492 -3.64062  c
29.5117 -3.26562 l
28.5846 -2.48438 28.0482 -1.73438 27.9023 -1.01562  c
31.6680 -1.01562 l
31.6680 0.00000 l
26.5117 0.00000 l
h
f
[ 1.97493 0.00000 0.00000 1.97493 72.3583 43.2369 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
110.980 15.9776 m
110.980 27.8517 101.354 37.4776 89.4800 37.4776  c
77.6059 37.4776 67.9800 27.8517 67.9800 15.9776  c
67.9800 4.10350 77.6059 -5.52238 89.4800 -5.52238  c
101.354 -5.52238 110.980 4.10350 110.980 15.9776  c
h
f
0.00000 0.00000 0.00000 RG
newpath
111.980 15.9776 m
111.980 28.4040 101.906 38.4776 89.4800 38.4776  c
77.0536 38.4776 66.9800 28.4040 66.9800 15.9776  c
66.9800 3.55121 77.0536 -6.52238 89.4800 -6.52238  c
101.906 -6.52238 111.980 3.55121 111.980 15.9776  c
h
110.980 15.9776 m
110.980 27.8517 101.354 37.4776 89.4800 37.4776  c
77.6059 37.4776 67.9800 27.8517 67.9800 15.9776  c
67.9800 4.10350 77.6059 -5.52238 89.4800 -5.52238  c
101.354 -5.52238 110.980 4.10350 110.980 15.9776  c
h
f*
89.4800 15.9776 translate
1.00000 1.00000 scale
-32.6250 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.82812 -8.67188 l
5.23438 -1.96875 l
7.70312 -8.67188 l
9.21875 -8.67188 l
9.21875 0.00000 l
8.07812 0.00000 l
8.07812 -7.06250 l
5.68750 -.578125 l
4.50000 -.578125 l
2.17188 -7.07812 l
2.17188 0.00000 l
1.12500 0.00000 l
h
17.9766 -.234375 m
16.9245 .0677083 16.0078 .218750 15.2266 .218750  c
13.8411 .218750 12.7812 -.174479 12.0469 -.960938  c
11.3125 -1.74740 10.9453 -2.87500 10.9453 -4.34375  c
10.9453 -5.78125 11.3177 -6.89844 12.0625 -7.69531  c
12.8073 -8.49219 13.8568 -8.89062 15.2109 -8.89062  c
16.0859 -8.89062 17.0026 -8.76042 17.9609 -8.50000  c
17.9609 -7.35938 l
16.7630 -7.76562 15.8464 -7.96875 15.2109 -7.96875  c
14.2734 -7.96875 13.5469 -7.65104 13.0312 -7.01562  c
12.5156 -6.38021 12.2578 -5.48438 12.2578 -4.32812  c
12.2578 -3.18229 12.5339 -2.29167 13.0859 -1.65625  c
13.6380 -1.02083 14.4141 -.703125 15.4141 -.703125  c
15.8307 -.703125 16.2734 -.776042 16.7422 -.921875  c
16.7422 -3.75000 l
17.9766 -3.75000 l
17.9766 -.234375 l
h
23.8359 .218750 m
22.4922 .218750 21.4531 -.177083 20.7188 -.968750  c
19.9844 -1.76042 19.6172 -2.88021 19.6172 -4.32812  c
19.6172 -5.77604 19.9922 -6.89844 20.7422 -7.69531  c
21.4922 -8.49219 22.5443 -8.89062 23.8984 -8.89062  c
24.6797 -8.89062 25.5911 -8.76562 26.6328 -8.51562  c
26.6328 -7.35938 l
25.4453 -7.76562 24.5286 -7.96875 23.8828 -7.96875  c
22.9453 -7.96875 22.2188 -7.65104 21.7031 -7.01562  c
21.1875 -6.38021 20.9297 -5.47917 20.9297 -4.31250  c
20.9297 -3.20833 21.2031 -2.33854 21.7500 -1.70312  c
22.2969 -1.06771 23.0495 -.750000 24.0078 -.750000  c
24.8307 -.750000 25.7109 -1.00000 26.6484 -1.50000  c
26.6484 -.453125 l
25.7943 -.00520833 24.8568 .218750 23.8359 .218750  c
h
28.3105 0.00000 m
28.3105 -1.01562 l
28.6439 -1.79688 29.3210 -2.65104 30.3418 -3.57812  c
31.0137 -4.17188 l
31.8574 -4.94271 32.2793 -5.70833 32.2793 -6.46875  c
32.2793 -6.94792 32.1361 -7.32552 31.8496 -7.60156  c
31.5632 -7.87760 31.1647 -8.01562 30.6543 -8.01562  c
30.0501 -8.01562 29.3418 -7.78646 28.5293 -7.32812  c
28.5293 -8.34375 l
29.3001 -8.70833 30.0605 -8.89062 30.8105 -8.89062  c
31.6230 -8.89062 32.2767 -8.67188 32.7715 -8.23438  c
33.2663 -7.79688 33.5137 -7.21875 33.5137 -6.50000  c
33.5137 -5.97917 33.3887 -5.51562 33.1387 -5.10938  c
32.8887 -4.70312 32.4251 -4.21354 31.7480 -3.64062  c
31.3105 -3.26562 l
30.3835 -2.48438 29.8470 -1.73438 29.7012 -1.01562  c
33.4668 -1.01562 l
33.4668 0.00000 l
28.3105 0.00000 l
h
36.7109 0.00000 m
36.8151 -.677083 36.9740 -1.26042 37.1875 -1.75000  c
37.4010 -2.23958 37.7734 -2.91667 38.3047 -3.78125  c
40.6641 -7.59375 l
36.1953 -7.59375 l
36.1953 -8.67188 l
41.7734 -8.67188 l
41.7734 -7.59375 l
39.5443 -4.31250 38.2995 -1.78125 38.0391 0.00000  c
36.7109 0.00000 l
h
46.2520 .218750 m
45.3561 .218750 44.6322 -.203125 44.0801 -1.04688  c
43.5280 -1.89062 43.2520 -2.98958 43.2520 -4.34375  c
43.2520 -5.70833 43.5306 -6.80729 44.0879 -7.64062  c
44.6452 -8.47396 45.3770 -8.89062 46.2832 -8.89062  c
47.1895 -8.89062 47.9212 -8.47396 48.4785 -7.64062  c
49.0358 -6.80729 49.3145 -5.71354 49.3145 -4.35938  c
49.3145 -2.97396 49.0358 -1.86458 48.4785 -1.03125  c
47.9212 -.197917 47.1790 .218750 46.2520 .218750  c
h
46.2676 -.656250 m
47.4863 -.656250 48.0957 -1.89583 48.0957 -4.37500  c
48.0957 -6.80208 47.4915 -8.01562 46.2832 -8.01562  c
45.0853 -8.01562 44.4863 -6.79167 44.4863 -4.34375  c
44.4863 -1.88542 45.0801 -.656250 46.2676 -.656250  c
h
51.8867 0.00000 m
51.8867 -.875000 l
53.6211 -.875000 l
53.6211 -7.71875 l
51.8867 -7.28125 l
51.8867 -8.17188 l
54.7773 -8.89062 l
54.7773 -.875000 l
56.5117 -.875000 l
56.5117 0.00000 l
51.8867 0.00000 l
h
59.7246 -4.50000 m
60.2767 -5.20833 60.9694 -5.56250 61.8027 -5.56250  c
62.5632 -5.56250 63.1855 -5.31250 63.6699 -4.81250  c
64.1543 -4.31250 64.3965 -3.67188 64.3965 -2.89062  c
64.3965 -1.98438 64.1257 -1.23958 63.5840 -.656250  c
63.0423 -.0729167 62.3548 .218750 61.5215 .218750  c
60.5632 .218750 59.8132 -.166667 59.2715 -.937500  c
58.7298 -1.70833 58.4590 -2.77604 58.4590 -4.14062  c
58.4590 -5.65104 58.7689 -6.82031 59.3887 -7.64844  c
60.0085 -8.47656 60.8809 -8.89062 62.0059 -8.89062  c
62.5267 -8.89062 63.1725 -8.78125 63.9434 -8.56250  c
63.9434 -7.56250 l
63.1309 -7.87500 62.4642 -8.03125 61.9434 -8.03125  c
60.4642 -8.03125 59.7246 -6.85417 59.7246 -4.50000  c
h
63.2246 -2.62500 m
63.2246 -3.28125 63.0788 -3.79688 62.7871 -4.17188  c
62.4954 -4.54688 62.0840 -4.73438 61.5527 -4.73438  c
61.0736 -4.73438 60.6569 -4.57031 60.3027 -4.24219  c
59.9486 -3.91406 59.7715 -3.52083 59.7715 -3.06250  c
59.7715 -2.33333 59.9382 -1.75000 60.2715 -1.31250  c
60.6048 -.875000 61.0475 -.656250 61.5996 -.656250  c
62.0996 -.656250 62.4954 -.833333 62.7871 -1.18750  c
63.0788 -1.54167 63.2246 -2.02083 63.2246 -2.62500  c
h
f
[ 1.97493 0.00000 0.00000 1.97493 72.3583 43.2369 ] defaultmatrix matrix concatmatrix setmatrix
.980392 .364706 .200000 RG
newpath
66.0858 144.981 m
45.0000 166.067 l
23.9142 144.981 l
45.0000 123.895 l
h
f
0.00000 0.00000 0.00000 RG
newpath
45.0000 122.481 m
67.5000 144.981 l
45.0000 167.481 l
22.5000 144.981 l
h
66.0858 144.981 m
45.0000 166.067 l
23.9142 144.981 l
45.0000 123.895 l
h
f*
45.0000 144.981 translate
1.00000 1.00000 scale
-15.2432 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.96875 l
5.37500 -4.96875 l
5.37500 -4.06250 l
2.34375 -4.06250 l
2.34375 -.921875 l
6.21875 -.921875 l
6.21875 0.00000 l
1.12500 0.00000 l
h
7.61328 0.00000 m
7.61328 -8.67188 l
8.84766 -8.67188 l
8.84766 0.00000 l
7.61328 0.00000 l
h
11.0859 0.00000 m
11.0859 -8.67188 l
15.9297 -8.67188 l
15.9297 -7.75000 l
12.3047 -7.75000 l
12.3047 -4.84375 l
15.3516 -4.84375 l
15.3516 -3.93750 l
12.3047 -3.93750 l
12.3047 0.00000 l
11.0859 0.00000 l
h
20.9102 0.00000 m
20.9102 -2.45312 l
17.0039 -2.45312 l
17.0039 -3.32812 l
20.9102 -8.67188 l
22.0039 -8.67188 l
22.0039 -3.40625 l
23.1602 -3.40625 l
23.1602 -2.45312 l
22.0039 -2.45312 l
22.0039 0.00000 l
20.9102 0.00000 l
h
18.1445 -3.40625 m
20.9883 -3.40625 l
20.9883 -7.25000 l
18.1445 -3.40625 l
h
25.1074 0.00000 m
25.1074 -8.67188 l
29.9512 -8.67188 l
29.9512 -7.75000 l
26.3262 -7.75000 l
26.3262 -4.96875 l
29.3574 -4.96875 l
29.3574 -4.06250 l
26.3262 -4.06250 l
26.3262 -.921875 l
30.2012 -.921875 l
30.2012 0.00000 l
25.1074 0.00000 l
h
f
[ 1.97493 0.00000 0.00000 1.97493 72.3583 43.2369 ] defaultmatrix matrix concatmatrix setmatrix
.886275 .172549 .200000 RG
newpath
66.0858 93.0192 m
45.0000 114.105 l
23.9142 93.0192 l
45.0000 71.9335 l
h
f
0.00000 0.00000 0.00000 RG
newpath
45.0000 70.5192 m
67.5000 93.0192 l
45.0000 115.519 l
22.5000 93.0192 l
h
66.0858 93.0192 m
45.0000 114.105 l
23.9142 93.0192 l
45.0000 71.9335 l
h
f*
45.0000 93.0192 translate
1.00000 1.00000 scale
-20.1211 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.96875 l
5.37500 -4.96875 l
5.37500 -4.06250 l
2.34375 -4.06250 l
2.34375 -.921875 l
6.21875 -.921875 l
6.21875 0.00000 l
1.12500 0.00000 l
h
7.61328 0.00000 m
7.61328 -8.67188 l
8.84766 -8.67188 l
8.84766 0.00000 l
7.61328 0.00000 l
h
11.0859 0.00000 m
11.0859 -8.67188 l
15.9297 -8.67188 l
15.9297 -7.75000 l
12.3047 -7.75000 l
12.3047 -4.84375 l
15.3516 -4.84375 l
15.3516 -3.93750 l
12.3047 -3.93750 l
12.3047 0.00000 l
11.0859 0.00000 l
h
20.9102 0.00000 m
20.9102 -2.45312 l
17.0039 -2.45312 l
17.0039 -3.32812 l
20.9102 -8.67188 l
22.0039 -8.67188 l
22.0039 -3.40625 l
23.1602 -3.40625 l
23.1602 -2.45312 l
22.0039 -2.45312 l
22.0039 0.00000 l
20.9102 0.00000 l
h
18.1445 -3.40625 m
20.9883 -3.40625 l
20.9883 -7.25000 l
18.1445 -3.40625 l
h
31.6230 -.234375 m
30.5710 .0677083 29.6543 .218750 28.8730 .218750  c
27.4876 .218750 26.4277 -.174479 25.6934 -.960938  c
24.9590 -1.74740 24.5918 -2.87500 24.5918 -4.34375  c
24.5918 -5.78125 24.9642 -6.89844 25.7090 -7.69531  c
26.4538 -8.49219 27.5033 -8.89062 28.8574 -8.89062  c
29.7324 -8.89062 30.6491 -8.76042 31.6074 -8.50000  c
31.6074 -7.35938 l
30.4095 -7.76562 29.4928 -7.96875 28.8574 -7.96875  c
27.9199 -7.96875 27.1934 -7.65104 26.6777 -7.01562  c
26.1621 -6.38021 25.9043 -5.48438 25.9043 -4.32812  c
25.9043 -3.18229 26.1803 -2.29167 26.7324 -1.65625  c
27.2845 -1.02083 28.0605 -.703125 29.0605 -.703125  c
29.4772 -.703125 29.9199 -.776042 30.3887 -.921875  c
30.3887 -3.75000 l
31.6230 -3.75000 l
31.6230 -.234375 l
h
34.4668 0.00000 m
34.4668 -.875000 l
36.2012 -.875000 l
36.2012 -7.71875 l
34.4668 -7.28125 l
34.4668 -8.17188 l
37.3574 -8.89062 l
37.3574 -.875000 l
39.0918 -.875000 l
39.0918 0.00000 l
34.4668 0.00000 l
h
f
[ 1.97493 0.00000 0.00000 1.97493 72.3583 43.2369 ] defaultmatrix matrix concatmatrix setmatrix
.933333 .262745 .200000 RG
newpath
21.0858 119.000 m
0.00000 140.086 l
-21.0858 119.000 l
0.00000 97.9142 l
h
f
0.00000 0.00000 0.00000 RG
newpath
0.00000 96.5000 m
22.5000 119.000 l
0.00000 141.500 l
-22.5000 119.000 l
h
21.0858 119.000 m
0.00000 140.086 l
-21.0858 119.000 l
0.00000 97.9142 l
h
f*
0.00000 119.000 translate
1.00000 1.00000 scale
-19.0166 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.96875 l
5.37500 -4.96875 l
5.37500 -4.06250 l
2.34375 -4.06250 l
2.34375 -.921875 l
6.21875 -.921875 l
6.21875 0.00000 l
1.12500 0.00000 l
h
7.61328 0.00000 m
7.61328 -8.67188 l
8.84766 -8.67188 l
8.84766 0.00000 l
7.61328 0.00000 l
h
11.0859 0.00000 m
11.0859 -8.67188 l
15.9297 -8.67188 l
15.9297 -7.75000 l
12.3047 -7.75000 l
12.3047 -4.84375 l
15.3516 -4.84375 l
15.3516 -3.93750 l
12.3047 -3.93750 l
12.3047 0.00000 l
11.0859 0.00000 l
h
17.6133 -.0625000 m
17.6133 -1.14062 l
18.4466 -.817708 19.0977 -.656250 19.5664 -.656250  c
20.1185 -.656250 20.5690 -.817708 20.9180 -1.14062  c
21.2669 -1.46354 21.4414 -1.88021 21.4414 -2.39062  c
21.4414 -3.60938 20.5872 -4.21875 18.8789 -4.21875  c
18.4102 -4.21875 l
18.4102 -5.00000 l
18.8164 -5.00000 l
20.4206 -5.00000 21.2227 -5.56250 21.2227 -6.68750  c
21.2227 -7.57292 20.6966 -8.01562 19.6445 -8.01562  c
19.0612 -8.01562 18.4258 -7.85417 17.7383 -7.53125  c
17.7383 -8.54688 l
18.4154 -8.77604 19.0768 -8.89062 19.7227 -8.89062  c
21.4935 -8.89062 22.3789 -8.21875 22.3789 -6.87500  c
22.3789 -5.85417 21.7747 -5.13021 20.5664 -4.70312  c
21.9727 -4.38021 22.6758 -3.61458 22.6758 -2.40625  c
22.6758 -1.58333 22.4049 -.940104 21.8633 -.476562  c
21.3216 -.0130208 20.5820 .218750 19.6445 .218750  c
19.1029 .218750 18.4258 .125000 17.6133 -.0625000  c
h
26.7949 .218750 m
26.2220 .218750 25.4824 .0885417 24.5762 -.171875  c
24.5762 -1.39062 l
25.5449 -.932292 26.3470 -.703125 26.9824 -.703125  c
27.4616 -.703125 27.8496 -.830729 28.1465 -1.08594  c
28.4434 -1.34115 28.5918 -1.67708 28.5918 -2.09375  c
28.5918 -2.42708 28.4954 -2.71354 28.3027 -2.95312  c
28.1100 -3.19271 27.7533 -3.45833 27.2324 -3.75000  c
26.6387 -4.09375 l
25.8991 -4.52083 25.3783 -4.91927 25.0762 -5.28906  c
24.7741 -5.65885 24.6230 -6.09375 24.6230 -6.59375  c
24.6230 -7.26042 24.8652 -7.80990 25.3496 -8.24219  c
25.8340 -8.67448 26.4512 -8.89062 27.2012 -8.89062  c
27.8678 -8.89062 28.5710 -8.78125 29.3105 -8.56250  c
29.3105 -7.43750 l
28.3939 -7.79167 27.7116 -7.96875 27.2637 -7.96875  c
26.8366 -7.96875 26.4850 -7.85677 26.2090 -7.63281  c
25.9329 -7.40885 25.7949 -7.12500 25.7949 -6.78125  c
25.7949 -6.48958 25.8965 -6.23177 26.0996 -6.00781  c
26.3027 -5.78385 26.6751 -5.51562 27.2168 -5.20312  c
27.8262 -4.85938 l
28.5762 -4.43229 29.0996 -4.02865 29.3965 -3.64844  c
29.6934 -3.26823 29.8418 -2.81250 29.8418 -2.28125  c
29.8418 -1.53125 29.5658 -.927083 29.0137 -.468750  c
28.4616 -.0104167 27.7220 .218750 26.7949 .218750  c
h
31.8047 -.0468750 m
31.8047 -1.03125 l
32.5443 -.781250 33.1693 -.656250 33.6797 -.656250  c
34.3984 -.656250 34.9609 -.960938 35.3672 -1.57031  c
35.7734 -2.17969 35.9766 -3.03125 35.9766 -4.12500  c
35.3932 -3.39583 34.7266 -3.03125 33.9766 -3.03125  c
33.2474 -3.03125 32.6302 -3.29948 32.1250 -3.83594  c
31.6198 -4.37240 31.3672 -5.03125 31.3672 -5.81250  c
31.3672 -6.69792 31.6354 -7.43229 32.1719 -8.01562  c
32.7083 -8.59896 33.3880 -8.89062 34.2109 -8.89062  c
35.1589 -8.89062 35.9036 -8.51302 36.4453 -7.75781  c
36.9870 -7.00260 37.2578 -5.96875 37.2578 -4.65625  c
37.2578 -3.16667 36.9271 -1.98177 36.2656 -1.10156  c
35.6042 -.221354 34.7057 .218750 33.5703 .218750  c
33.1224 .218750 32.5339 .130208 31.8047 -.0468750  c
h
32.5078 -6.03125 m
32.5078 -5.36458 32.6589 -4.83854 32.9609 -4.45312  c
33.2630 -4.06771 33.6745 -3.87500 34.1953 -3.87500  c
34.6849 -3.87500 35.1016 -4.03906 35.4453 -4.36719  c
35.7891 -4.69531 35.9609 -5.09375 35.9609 -5.56250  c
35.9609 -6.30208 35.7943 -6.89844 35.4609 -7.35156  c
35.1276 -7.80469 34.6901 -8.03125 34.1484 -8.03125  c
33.6380 -8.03125 33.2370 -7.85156 32.9453 -7.49219  c
32.6536 -7.13281 32.5078 -6.64583 32.5078 -6.03125  c
h
f
[ 1.97493 0.00000 0.00000 1.97493 72.3583 43.2369 ] defaultmatrix matrix concatmatrix setmatrix
.964706 1.00000 .776471 RG
newpath
148.230 49.7558 m
148.230 61.6299 138.604 71.2558 126.730 71.2558  c
114.856 71.2558 105.230 61.6299 105.230 49.7558  c
105.230 37.8817 114.856 28.2558 126.730 28.2558  c
138.604 28.2558 148.230 37.8817 148.230 49.7558  c
h
f
0.00000 0.00000 0.00000 RG
newpath
149.230 49.7558 m
149.230 62.1822 139.157 72.2558 126.730 72.2558  c
114.304 72.2558 104.230 62.1822 104.230 49.7558  c
104.230 37.3294 114.304 27.2558 126.730 27.2558  c
139.157 27.2558 149.230 37.3294 149.230 49.7558  c
h
148.230 49.7558 m
148.230 61.6299 138.604 71.2558 126.730 71.2558  c
114.856 71.2558 105.230 61.6299 105.230 49.7558  c
105.230 37.8817 114.856 28.2558 126.730 28.2558  c
138.604 28.2558 148.230 37.8817 148.230 49.7558  c
h
f*
126.730 49.7558 translate
1.00000 1.00000 scale
-15.9229 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
9.42773 0.00000 m
9.42773 -8.67188 l
12.0527 -8.67188 l
12.8861 -8.67188 13.5241 -8.48958 13.9668 -8.12500  c
14.4095 -7.76042 14.6309 -7.22396 14.6309 -6.51562  c
14.6309 -5.35938 14.0475 -4.54167 12.8809 -4.06250  c
15.7715 0.00000 l
14.2559 0.00000 l
11.7871 -3.67188 l
10.6465 -3.67188 l
10.6465 0.00000 l
9.42773 0.00000 l
h
10.6465 -4.59375 m
11.0371 -4.59375 l
12.5892 -4.59375 13.3652 -5.19792 13.3652 -6.40625  c
13.3652 -7.30208 12.7142 -7.75000 11.4121 -7.75000  c
10.6465 -7.75000 l
10.6465 -4.59375 l
h
20.5000 .218750 m
19.3021 .218750 18.3359 -.197917 17.6016 -1.03125  c
16.8672 -1.86458 16.5000 -2.96875 16.5000 -4.34375  c
16.5000 -5.71875 16.8672 -6.82031 17.6016 -7.64844  c
18.3359 -8.47656 19.3229 -8.89062 20.5625 -8.89062  c
21.7812 -8.89062 22.7604 -8.47917 23.5000 -7.65625  c
24.2396 -6.83333 24.6094 -5.73438 24.6094 -4.35938  c
24.6094 -2.95312 24.2396 -1.83854 23.5000 -1.01562  c
22.7604 -.192708 21.7604 .218750 20.5000 .218750  c
h
20.5156 -.703125 m
21.4010 -.703125 22.0859 -1.02344 22.5703 -1.66406  c
23.0547 -2.30469 23.2969 -3.20312 23.2969 -4.35938  c
23.2969 -5.49479 23.0547 -6.38021 22.5703 -7.01562  c
22.0859 -7.65104 21.4167 -7.96875 20.5625 -7.96875  c
19.6979 -7.96875 19.0234 -7.64844 18.5391 -7.00781  c
18.0547 -6.36719 17.8125 -5.47917 17.8125 -4.34375  c
17.8125 -3.21875 18.0521 -2.33073 18.5312 -1.67969  c
19.0104 -1.02865 19.6719 -.703125 20.5156 -.703125  c
h
26.3379 0.00000 m
26.3379 -8.67188 l
28.6973 -8.67188 l
29.7389 -8.67188 30.4889 -8.49479 30.9473 -8.14062  c
31.4056 -7.78646 31.6348 -7.20833 31.6348 -6.40625  c
31.6348 -5.47917 31.3223 -4.75521 30.6973 -4.23438  c
30.0723 -3.71354 29.2077 -3.45312 28.1035 -3.45312  c
27.5566 -3.45312 l
27.5566 0.00000 l
26.3379 0.00000 l
h
27.5566 -4.37500 m
28.0566 -4.37500 l
28.7858 -4.37500 29.3483 -4.54427 29.7441 -4.88281  c
30.1400 -5.22135 30.3379 -5.69792 30.3379 -6.31250  c
30.3379 -6.82292 30.1816 -7.19010 29.8691 -7.41406  c
29.5566 -7.63802 29.0358 -7.75000 28.3066 -7.75000  c
27.5566 -7.75000 l
27.5566 -4.37500 l
h
f
[ 1.97493 0.00000 0.00000 1.97493 72.3583 43.2369 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
