%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 11:12:34 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ .949095 0.00000 0.00000 .949095 113.554 21.2250 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
105.433 335.690 m
81.2839 299.421 l
S
newpath
104.479 102.890 m
89.4252 177.939 l
S
newpath
127.408 93.6301 m
163.287 118.452 l
S
newpath
121.332 18.8773 m
113.330 58.7686 l
S
newpath
46.9587 93.9858 m
86.8956 85.5037 l
S
newpath
73.2389 258.632 m
80.5748 222.061 l
S
newpath
50.0855 293.163 m
13.8167 317.312 l
S
.929412 .254902 .200000 RG
newpath
135.512 349.196 m
114.427 370.282 l
93.3409 349.196 l
114.427 328.111 l
h
f
0.00000 0.00000 0.00000 RG
newpath
114.427 326.696 m
136.927 349.196 l
114.427 371.696 l
91.9267 349.196 l
h
135.512 349.196 m
114.427 370.282 l
93.3409 349.196 l
114.427 328.111 l
h
f*
114.427 349.196 translate
1.00000 1.00000 scale
-15.0439 4.42090 translate
newpath
5.51562 -3.31250 m
4.03125 -7.06250 l
2.56250 -3.31250 l
5.51562 -3.31250 l
h
6.81250 0.00000 m
5.87500 -2.40625 l
2.20312 -2.40625 l
1.25000 0.00000 l
.0937500 0.00000 l
3.54688 -8.67188 l
4.76562 -8.67188 l
8.14062 0.00000 l
6.81250 0.00000 l
h
9.40430 0.00000 m
9.40430 -8.67188 l
11.7637 -8.67188 l
12.8053 -8.67188 13.5553 -8.49479 14.0137 -8.14062  c
14.4720 -7.78646 14.7012 -7.20833 14.7012 -6.40625  c
14.7012 -5.47917 14.3887 -4.75521 13.7637 -4.23438  c
13.1387 -3.71354 12.2741 -3.45312 11.1699 -3.45312  c
10.6230 -3.45312 l
10.6230 0.00000 l
9.40430 0.00000 l
h
10.6230 -4.37500 m
11.1230 -4.37500 l
11.8522 -4.37500 12.4147 -4.54427 12.8105 -4.88281  c
13.2064 -5.22135 13.4043 -5.69792 13.4043 -6.31250  c
13.4043 -6.82292 13.2480 -7.19010 12.9355 -7.41406  c
12.6230 -7.63802 12.1022 -7.75000 11.3730 -7.75000  c
10.6230 -7.75000 l
10.6230 -4.37500 l
h
16.0371 0.00000 m
16.0371 -8.67188 l
18.6621 -8.67188 l
19.4954 -8.67188 20.1335 -8.48958 20.5762 -8.12500  c
21.0189 -7.76042 21.2402 -7.22396 21.2402 -6.51562  c
21.2402 -5.35938 20.6569 -4.54167 19.4902 -4.06250  c
22.3809 0.00000 l
20.8652 0.00000 l
18.3965 -3.67188 l
17.2559 -3.67188 l
17.2559 0.00000 l
16.0371 0.00000 l
h
17.2559 -4.59375 m
17.6465 -4.59375 l
19.1986 -4.59375 19.9746 -5.19792 19.9746 -6.40625  c
19.9746 -7.30208 19.3236 -7.75000 18.0215 -7.75000  c
17.2559 -7.75000 l
17.2559 -4.59375 l
h
25.6875 0.00000 m
25.6875 -7.75000 l
22.6094 -7.75000 l
22.6094 -8.67188 l
29.9844 -8.67188 l
29.9844 -7.75000 l
26.9062 -7.75000 l
26.9062 0.00000 l
25.6875 0.00000 l
h
f
[ .949095 0.00000 0.00000 .949095 113.554 21.2250 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .564706 .364706 RG
newpath
130.405 80.8292 m
130.405 92.7033 120.779 102.329 108.905 102.329  c
97.0305 102.329 87.4046 92.7033 87.4046 80.8292  c
87.4046 68.9550 97.0305 59.3292 108.905 59.3292  c
120.779 59.3292 130.405 68.9550 130.405 80.8292  c
h
f
0.00000 0.00000 0.00000 RG
newpath
131.405 80.8292 m
131.405 93.2556 121.331 103.329 108.905 103.329  c
96.4782 103.329 86.4046 93.2556 86.4046 80.8292  c
86.4046 68.4028 96.4782 58.3292 108.905 58.3292  c
121.331 58.3292 131.405 68.4028 131.405 80.8292  c
h
130.405 80.8292 m
130.405 92.7033 120.779 102.329 108.905 102.329  c
97.0305 102.329 87.4046 92.7033 87.4046 80.8292  c
87.4046 68.9550 97.0305 59.3292 108.905 59.3292  c
120.779 59.3292 130.405 68.9550 130.405 80.8292  c
h
f*
108.905 80.8292 translate
1.00000 1.00000 scale
-18.0586 4.42090 translate
newpath
3.48438 0.00000 m
.218750 -8.67188 l
1.43750 -8.67188 l
4.12500 -1.57812 l
6.71875 -8.67188 l
7.79688 -8.67188 l
4.64062 0.00000 l
3.48438 0.00000 l
h
8.97070 0.00000 m
8.97070 -8.67188 l
11.3301 -8.67188 l
12.3717 -8.67188 13.1217 -8.49479 13.5801 -8.14062  c
14.0384 -7.78646 14.2676 -7.20833 14.2676 -6.40625  c
14.2676 -5.47917 13.9551 -4.75521 13.3301 -4.23438  c
12.7051 -3.71354 11.8405 -3.45312 10.7363 -3.45312  c
10.1895 -3.45312 l
10.1895 0.00000 l
8.97070 0.00000 l
h
10.1895 -4.37500 m
10.6895 -4.37500 l
11.4186 -4.37500 11.9811 -4.54427 12.3770 -4.88281  c
12.7728 -5.22135 12.9707 -5.69792 12.9707 -6.31250  c
12.9707 -6.82292 12.8145 -7.19010 12.5020 -7.41406  c
12.1895 -7.63802 11.6686 -7.75000 10.9395 -7.75000  c
10.1895 -7.75000 l
10.1895 -4.37500 l
h
17.2910 .218750 m
16.7181 .218750 15.9785 .0885417 15.0723 -.171875  c
15.0723 -1.39062 l
16.0410 -.932292 16.8431 -.703125 17.4785 -.703125  c
17.9577 -.703125 18.3457 -.830729 18.6426 -1.08594  c
18.9395 -1.34115 19.0879 -1.67708 19.0879 -2.09375  c
19.0879 -2.42708 18.9915 -2.71354 18.7988 -2.95312  c
18.6061 -3.19271 18.2493 -3.45833 17.7285 -3.75000  c
17.1348 -4.09375 l
16.3952 -4.52083 15.8743 -4.91927 15.5723 -5.28906  c
15.2702 -5.65885 15.1191 -6.09375 15.1191 -6.59375  c
15.1191 -7.26042 15.3613 -7.80990 15.8457 -8.24219  c
16.3301 -8.67448 16.9473 -8.89062 17.6973 -8.89062  c
18.3639 -8.89062 19.0671 -8.78125 19.8066 -8.56250  c
19.8066 -7.43750 l
18.8900 -7.79167 18.2077 -7.96875 17.7598 -7.96875  c
17.3327 -7.96875 16.9811 -7.85677 16.7051 -7.63281  c
16.4290 -7.40885 16.2910 -7.12500 16.2910 -6.78125  c
16.2910 -6.48958 16.3926 -6.23177 16.5957 -6.00781  c
16.7988 -5.78385 17.1712 -5.51562 17.7129 -5.20312  c
18.3223 -4.85938 l
19.0723 -4.43229 19.5957 -4.02865 19.8926 -3.64844  c
20.1895 -3.26823 20.3379 -2.81250 20.3379 -2.28125  c
20.3379 -1.53125 20.0618 -.927083 19.5098 -.468750  c
18.9577 -.0104167 18.2181 .218750 17.2910 .218750  c
h
22.1602 -.0625000 m
22.1602 -1.14062 l
22.9935 -.817708 23.6445 -.656250 24.1133 -.656250  c
24.6654 -.656250 25.1159 -.817708 25.4648 -1.14062  c
25.8138 -1.46354 25.9883 -1.88021 25.9883 -2.39062  c
25.9883 -3.60938 25.1341 -4.21875 23.4258 -4.21875  c
22.9570 -4.21875 l
22.9570 -5.00000 l
23.3633 -5.00000 l
24.9674 -5.00000 25.7695 -5.56250 25.7695 -6.68750  c
25.7695 -7.57292 25.2435 -8.01562 24.1914 -8.01562  c
23.6081 -8.01562 22.9727 -7.85417 22.2852 -7.53125  c
22.2852 -8.54688 l
22.9622 -8.77604 23.6237 -8.89062 24.2695 -8.89062  c
26.0404 -8.89062 26.9258 -8.21875 26.9258 -6.87500  c
26.9258 -5.85417 26.3216 -5.13021 25.1133 -4.70312  c
26.5195 -4.38021 27.2227 -3.61458 27.2227 -2.40625  c
27.2227 -1.58333 26.9518 -.940104 26.4102 -.476562  c
25.8685 -.0130208 25.1289 .218750 24.1914 .218750  c
23.6497 .218750 22.9727 .125000 22.1602 -.0625000  c
h
29.8887 -.0468750 m
29.8887 -1.03125 l
30.6283 -.781250 31.2533 -.656250 31.7637 -.656250  c
32.4824 -.656250 33.0449 -.960938 33.4512 -1.57031  c
33.8574 -2.17969 34.0605 -3.03125 34.0605 -4.12500  c
33.4772 -3.39583 32.8105 -3.03125 32.0605 -3.03125  c
31.3314 -3.03125 30.7142 -3.29948 30.2090 -3.83594  c
29.7038 -4.37240 29.4512 -5.03125 29.4512 -5.81250  c
29.4512 -6.69792 29.7194 -7.43229 30.2559 -8.01562  c
30.7923 -8.59896 31.4720 -8.89062 32.2949 -8.89062  c
33.2428 -8.89062 33.9876 -8.51302 34.5293 -7.75781  c
35.0710 -7.00260 35.3418 -5.96875 35.3418 -4.65625  c
35.3418 -3.16667 35.0111 -1.98177 34.3496 -1.10156  c
33.6882 -.221354 32.7897 .218750 31.6543 .218750  c
31.2064 .218750 30.6178 .130208 29.8887 -.0468750  c
h
30.5918 -6.03125 m
30.5918 -5.36458 30.7428 -4.83854 31.0449 -4.45312  c
31.3470 -4.06771 31.7585 -3.87500 32.2793 -3.87500  c
32.7689 -3.87500 33.1855 -4.03906 33.5293 -4.36719  c
33.8730 -4.69531 34.0449 -5.09375 34.0449 -5.56250  c
34.0449 -6.30208 33.8783 -6.89844 33.5449 -7.35156  c
33.2116 -7.80469 32.7741 -8.03125 32.2324 -8.03125  c
31.7220 -8.03125 31.3210 -7.85156 31.0293 -7.49219  c
30.7376 -7.13281 30.5918 -6.64583 30.5918 -6.03125  c
h
f
[ .949095 0.00000 0.00000 .949095 113.554 21.2250 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .647059 .447059 RG
newpath
106.500 200.000 m
106.500 211.874 96.8741 221.500 85.0000 221.500  c
73.1259 221.500 63.5000 211.874 63.5000 200.000  c
63.5000 188.126 73.1259 178.500 85.0000 178.500  c
96.8741 178.500 106.500 188.126 106.500 200.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
107.500 200.000 m
107.500 212.426 97.4264 222.500 85.0000 222.500  c
72.5736 222.500 62.5000 212.426 62.5000 200.000  c
62.5000 187.574 72.5736 177.500 85.0000 177.500  c
97.4264 177.500 107.500 187.574 107.500 200.000  c
h
106.500 200.000 m
106.500 211.874 96.8741 221.500 85.0000 221.500  c
73.1259 221.500 63.5000 211.874 63.5000 200.000  c
63.5000 188.126 73.1259 178.500 85.0000 178.500  c
96.8741 178.500 106.500 188.126 106.500 200.000  c
h
f*
85.0000 200.000 translate
1.00000 1.00000 scale
-21.0088 4.42090 translate
newpath
2.25000 0.00000 m
.0156250 -8.67188 l
1.20312 -8.67188 l
2.96875 -1.82812 l
4.60938 -8.67188 l
5.79688 -8.67188 l
7.34375 -1.92188 l
9.25000 -8.67188 l
10.2500 -8.67188 l
7.81250 0.00000 l
6.59375 0.00000 l
5.06250 -6.68750 l
3.46875 0.00000 l
2.25000 0.00000 l
h
11.3906 0.00000 m
11.3906 -8.67188 l
14.2656 -8.67188 l
15.1302 -8.67188 15.8255 -8.57552 16.3516 -8.38281  c
16.8776 -8.19010 17.3333 -7.86458 17.7188 -7.40625  c
18.3333 -6.68750 18.6406 -5.73438 18.6406 -4.54688  c
18.6406 -3.09896 18.2604 -1.97917 17.5000 -1.18750  c
16.7396 -.395833 15.6667 0.00000 14.2812 0.00000  c
11.3906 0.00000 l
h
12.6094 -.921875 m
14.1875 -.921875 l
15.3125 -.921875 16.1094 -1.22396 16.5781 -1.82812  c
17.0885 -2.47396 17.3438 -3.33854 17.3438 -4.42188  c
17.3438 -5.44271 17.0938 -6.24479 16.5938 -6.82812  c
16.2917 -7.18229 15.9323 -7.42448 15.5156 -7.55469  c
15.0990 -7.68490 14.4688 -7.75000 13.6250 -7.75000  c
12.6094 -7.75000 l
12.6094 -.921875 l
h
20.3789 0.00000 m
20.3789 -8.67188 l
23.0039 -8.67188 l
23.8372 -8.67188 24.4753 -8.48958 24.9180 -8.12500  c
25.3607 -7.76042 25.5820 -7.22396 25.5820 -6.51562  c
25.5820 -5.35938 24.9987 -4.54167 23.8320 -4.06250  c
26.7227 0.00000 l
25.2070 0.00000 l
22.7383 -3.67188 l
21.5977 -3.67188 l
21.5977 0.00000 l
20.3789 0.00000 l
h
21.5977 -4.59375 m
21.9883 -4.59375 l
23.5404 -4.59375 24.3164 -5.19792 24.3164 -6.40625  c
24.3164 -7.30208 23.6654 -7.75000 22.3633 -7.75000  c
21.5977 -7.75000 l
21.5977 -4.59375 l
h
28.6543 0.00000 m
28.7585 -.677083 28.9173 -1.26042 29.1309 -1.75000  c
29.3444 -2.23958 29.7168 -2.91667 30.2480 -3.78125  c
32.6074 -7.59375 l
28.1387 -7.59375 l
28.1387 -8.67188 l
33.7168 -8.67188 l
33.7168 -7.59375 l
31.4876 -4.31250 30.2428 -1.78125 29.9824 0.00000  c
28.6543 0.00000 l
h
38.1953 .218750 m
37.2995 .218750 36.5755 -.203125 36.0234 -1.04688  c
35.4714 -1.89062 35.1953 -2.98958 35.1953 -4.34375  c
35.1953 -5.70833 35.4740 -6.80729 36.0312 -7.64062  c
36.5885 -8.47396 37.3203 -8.89062 38.2266 -8.89062  c
39.1328 -8.89062 39.8646 -8.47396 40.4219 -7.64062  c
40.9792 -6.80729 41.2578 -5.71354 41.2578 -4.35938  c
41.2578 -2.97396 40.9792 -1.86458 40.4219 -1.03125  c
39.8646 -.197917 39.1224 .218750 38.1953 .218750  c
h
38.2109 -.656250 m
39.4297 -.656250 40.0391 -1.89583 40.0391 -4.37500  c
40.0391 -6.80208 39.4349 -8.01562 38.2266 -8.01562  c
37.0286 -8.01562 36.4297 -6.79167 36.4297 -4.34375  c
36.4297 -1.88542 37.0234 -.656250 38.2109 -.656250  c
h
f
[ .949095 0.00000 0.00000 .949095 113.554 21.2250 ] defaultmatrix matrix concatmatrix setmatrix
.913725 .223529 .200000 RG
newpath
49.4861 97.9274 m
28.4003 119.013 l
7.31456 97.9274 l
28.4003 76.8416 l
h
f
0.00000 0.00000 0.00000 RG
newpath
28.4003 75.4274 m
50.9003 97.9274 l
28.4003 120.427 l
5.90035 97.9274 l
h
49.4861 97.9274 m
28.4003 119.013 l
7.31456 97.9274 l
28.4003 76.8416 l
h
f*
28.4003 97.9274 translate
1.00000 1.00000 scale
-18.9609 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
9.44531 .218750 m
8.87240 .218750 8.13281 .0885417 7.22656 -.171875  c
7.22656 -1.39062 l
8.19531 -.932292 8.99740 -.703125 9.63281 -.703125  c
10.1120 -.703125 10.5000 -.830729 10.7969 -1.08594  c
11.0938 -1.34115 11.2422 -1.67708 11.2422 -2.09375  c
11.2422 -2.42708 11.1458 -2.71354 10.9531 -2.95312  c
10.7604 -3.19271 10.4036 -3.45833 9.88281 -3.75000  c
9.28906 -4.09375 l
8.54948 -4.52083 8.02865 -4.91927 7.72656 -5.28906  c
7.42448 -5.65885 7.27344 -6.09375 7.27344 -6.59375  c
7.27344 -7.26042 7.51562 -7.80990 8.00000 -8.24219  c
8.48438 -8.67448 9.10156 -8.89062 9.85156 -8.89062  c
10.5182 -8.89062 11.2214 -8.78125 11.9609 -8.56250  c
11.9609 -7.43750 l
11.0443 -7.79167 10.3620 -7.96875 9.91406 -7.96875  c
9.48698 -7.96875 9.13542 -7.85677 8.85938 -7.63281  c
8.58333 -7.40885 8.44531 -7.12500 8.44531 -6.78125  c
8.44531 -6.48958 8.54688 -6.23177 8.75000 -6.00781  c
8.95312 -5.78385 9.32552 -5.51562 9.86719 -5.20312  c
10.4766 -4.85938 l
11.2266 -4.43229 11.7500 -4.02865 12.0469 -3.64844  c
12.3438 -3.26823 12.4922 -2.81250 12.4922 -2.28125  c
12.4922 -1.53125 12.2161 -.927083 11.6641 -.468750  c
11.1120 -.0104167 10.3724 .218750 9.44531 .218750  c
h
14.2207 0.00000 m
14.2207 -8.67188 l
15.9238 -8.67188 l
18.3301 -1.96875 l
20.7988 -8.67188 l
22.3145 -8.67188 l
22.3145 0.00000 l
21.1738 0.00000 l
21.1738 -7.06250 l
18.7832 -.578125 l
17.5957 -.578125 l
15.2676 -7.07812 l
15.2676 0.00000 l
14.2207 0.00000 l
h
24.5566 0.00000 m
24.5566 -8.67188 l
26.8066 -8.67188 l
27.6712 -8.67188 28.3353 -8.50781 28.7988 -8.17969  c
29.2624 -7.85156 29.4941 -7.38021 29.4941 -6.76562  c
29.4941 -5.71354 28.9004 -4.96354 27.7129 -4.51562  c
29.1296 -4.08854 29.8379 -3.30729 29.8379 -2.17188  c
29.8379 -1.46354 29.6035 -.924479 29.1348 -.554688  c
28.6660 -.184896 27.9889 0.00000 27.1035 0.00000  c
24.5566 0.00000 l
h
25.7754 -.921875 m
26.0254 -.921875 l
26.9212 -.921875 27.5046 -.979167 27.7754 -1.09375  c
28.2858 -1.30208 28.5410 -1.69792 28.5410 -2.28125  c
28.5410 -2.80208 28.3092 -3.23177 27.8457 -3.57031  c
27.3822 -3.90885 26.8066 -4.07812 26.1191 -4.07812  c
25.7754 -4.07812 l
25.7754 -.921875 l
h
25.7754 -4.85938 m
26.1660 -4.85938 l
26.8223 -4.85938 27.3301 -5.00000 27.6895 -5.28125  c
28.0488 -5.56250 28.2285 -5.95833 28.2285 -6.46875  c
28.2285 -7.32292 27.5671 -7.75000 26.2441 -7.75000  c
25.7754 -7.75000 l
25.7754 -4.85938 l
h
31.7871 .0312500 m
31.7871 -1.00000 l
32.3704 -.770833 32.9173 -.656250 33.4277 -.656250  c
34.0007 -.656250 34.4512 -.822917 34.7793 -1.15625  c
35.1074 -1.48958 35.2715 -1.95312 35.2715 -2.54688  c
35.2715 -3.84896 34.3757 -4.50000 32.5840 -4.50000  c
32.3757 -4.50000 32.1621 -4.48438 31.9434 -4.45312  c
31.9434 -8.67188 l
36.3340 -8.67188 l
36.3340 -7.67188 l
32.9590 -7.67188 l
32.9590 -5.37500 l
34.0736 -5.37500 34.9434 -5.11979 35.5684 -4.60938  c
36.1934 -4.09896 36.5059 -3.39062 36.5059 -2.48438  c
36.5059 -1.64062 36.2194 -.979167 35.6465 -.500000  c
35.0736 -.0208333 34.2871 .218750 33.2871 .218750  c
32.8496 .218750 32.3496 .156250 31.7871 .0312500  c
h
f
[ .949095 0.00000 0.00000 .949095 113.554 21.2250 ] defaultmatrix matrix concatmatrix setmatrix
.937255 .274510 .200000 RG
newpath
146.177 .136562 m
125.091 21.2223 l
104.005 .136562 l
125.091 -20.9492 l
h
f
0.00000 0.00000 0.00000 RG
newpath
125.091 -22.3634 m
147.591 .136562 l
125.091 22.6366 l
102.591 .136562 l
h
146.177 .136562 m
125.091 21.2223 l
104.005 .136562 l
125.091 -20.9492 l
h
f*
125.091 .136562 translate
1.00000 1.00000 scale
-26.1855 4.42090 translate
newpath
3.18750 0.00000 m
3.18750 -7.75000 l
.109375 -7.75000 l
.109375 -8.67188 l
7.48438 -8.67188 l
7.48438 -7.75000 l
4.40625 -7.75000 l
4.40625 0.00000 l
3.18750 0.00000 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
11.0723 -8.67188 l
12.1139 -8.67188 12.8639 -8.49479 13.3223 -8.14062  c
13.7806 -7.78646 14.0098 -7.20833 14.0098 -6.40625  c
14.0098 -5.47917 13.6973 -4.75521 13.0723 -4.23438  c
12.4473 -3.71354 11.5827 -3.45312 10.4785 -3.45312  c
9.93164 -3.45312 l
9.93164 0.00000 l
8.71289 0.00000 l
h
9.93164 -4.37500 m
10.4316 -4.37500 l
11.1608 -4.37500 11.7233 -4.54427 12.1191 -4.88281  c
12.5150 -5.22135 12.7129 -5.69792 12.7129 -6.31250  c
12.7129 -6.82292 12.5566 -7.19010 12.2441 -7.41406  c
11.9316 -7.63802 11.4108 -7.75000 10.6816 -7.75000  c
9.93164 -7.75000 l
9.93164 -4.37500 l
h
15.3457 0.00000 m
15.3457 -8.67188 l
18.2207 -8.67188 l
19.0853 -8.67188 19.7806 -8.57552 20.3066 -8.38281  c
20.8327 -8.19010 21.2884 -7.86458 21.6738 -7.40625  c
22.2884 -6.68750 22.5957 -5.73438 22.5957 -4.54688  c
22.5957 -3.09896 22.2155 -1.97917 21.4551 -1.18750  c
20.6947 -.395833 19.6217 0.00000 18.2363 0.00000  c
15.3457 0.00000 l
h
16.5645 -.921875 m
18.1426 -.921875 l
19.2676 -.921875 20.0645 -1.22396 20.5332 -1.82812  c
21.0436 -2.47396 21.2988 -3.33854 21.2988 -4.42188  c
21.2988 -5.44271 21.0488 -6.24479 20.5488 -6.82812  c
20.2467 -7.18229 19.8874 -7.42448 19.4707 -7.55469  c
19.0540 -7.68490 18.4238 -7.75000 17.5801 -7.75000  c
16.5645 -7.75000 l
16.5645 -.921875 l
h
24.6621 .0312500 m
24.6621 -1.00000 l
25.2454 -.770833 25.7923 -.656250 26.3027 -.656250  c
26.8757 -.656250 27.3262 -.822917 27.6543 -1.15625  c
27.9824 -1.48958 28.1465 -1.95312 28.1465 -2.54688  c
28.1465 -3.84896 27.2507 -4.50000 25.4590 -4.50000  c
25.2507 -4.50000 25.0371 -4.48438 24.8184 -4.45312  c
24.8184 -8.67188 l
29.2090 -8.67188 l
29.2090 -7.67188 l
25.8340 -7.67188 l
25.8340 -5.37500 l
26.9486 -5.37500 27.8184 -5.11979 28.4434 -4.60938  c
29.0684 -4.09896 29.3809 -3.39062 29.3809 -2.48438  c
29.3809 -1.64062 29.0944 -.979167 28.5215 -.500000  c
27.9486 -.0208333 27.1621 .218750 26.1621 .218750  c
25.7246 .218750 25.2246 .156250 24.6621 .0312500  c
h
31.7969 0.00000 m
31.7969 -1.01562 l
32.1302 -1.79688 32.8073 -2.65104 33.8281 -3.57812  c
34.5000 -4.17188 l
35.3438 -4.94271 35.7656 -5.70833 35.7656 -6.46875  c
35.7656 -6.94792 35.6224 -7.32552 35.3359 -7.60156  c
35.0495 -7.87760 34.6510 -8.01562 34.1406 -8.01562  c
33.5365 -8.01562 32.8281 -7.78646 32.0156 -7.32812  c
32.0156 -8.34375 l
32.7865 -8.70833 33.5469 -8.89062 34.2969 -8.89062  c
35.1094 -8.89062 35.7630 -8.67188 36.2578 -8.23438  c
36.7526 -7.79688 37.0000 -7.21875 37.0000 -6.50000  c
37.0000 -5.97917 36.8750 -5.51562 36.6250 -5.10938  c
36.3750 -4.70312 35.9115 -4.21354 35.2344 -3.64062  c
34.7969 -3.26562 l
33.8698 -2.48438 33.3333 -1.73438 33.1875 -1.01562  c
36.9531 -1.01562 l
36.9531 0.00000 l
31.7969 0.00000 l
h
39.5098 0.00000 m
39.5098 -8.67188 l
40.7285 -8.67188 l
40.7285 -.921875 l
44.6348 -.921875 l
44.6348 0.00000 l
39.5098 0.00000 l
h
45.7832 0.00000 m
45.7832 -1.01562 l
46.1165 -1.79688 46.7936 -2.65104 47.8145 -3.57812  c
48.4863 -4.17188 l
49.3301 -4.94271 49.7520 -5.70833 49.7520 -6.46875  c
49.7520 -6.94792 49.6087 -7.32552 49.3223 -7.60156  c
49.0358 -7.87760 48.6374 -8.01562 48.1270 -8.01562  c
47.5228 -8.01562 46.8145 -7.78646 46.0020 -7.32812  c
46.0020 -8.34375 l
46.7728 -8.70833 47.5332 -8.89062 48.2832 -8.89062  c
49.0957 -8.89062 49.7493 -8.67188 50.2441 -8.23438  c
50.7389 -7.79688 50.9863 -7.21875 50.9863 -6.50000  c
50.9863 -5.97917 50.8613 -5.51562 50.6113 -5.10938  c
50.3613 -4.70312 49.8978 -4.21354 49.2207 -3.64062  c
48.7832 -3.26562 l
47.8561 -2.48438 47.3197 -1.73438 47.1738 -1.01562  c
50.9395 -1.01562 l
50.9395 0.00000 l
45.7832 0.00000 l
h
f
[ .949095 0.00000 0.00000 .949095 113.554 21.2250 ] defaultmatrix matrix concatmatrix setmatrix
.988235 .376471 .200000 RG
newpath
197.673 127.652 m
176.587 148.738 l
155.501 127.652 l
176.587 106.567 l
h
f
0.00000 0.00000 0.00000 RG
newpath
176.587 105.152 m
199.087 127.652 l
176.587 150.152 l
154.087 127.652 l
h
197.673 127.652 m
176.587 148.738 l
155.501 127.652 l
176.587 106.567 l
h
f*
176.587 127.652 translate
1.00000 1.00000 scale
-30.7236 4.42090 translate
newpath
3.18750 0.00000 m
3.18750 -7.75000 l
.109375 -7.75000 l
.109375 -8.67188 l
7.48438 -8.67188 l
7.48438 -7.75000 l
4.40625 -7.75000 l
4.40625 0.00000 l
3.18750 0.00000 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
10.9629 -8.67188 l
11.8275 -8.67188 12.4915 -8.50781 12.9551 -8.17969  c
13.4186 -7.85156 13.6504 -7.38021 13.6504 -6.76562  c
13.6504 -5.71354 13.0566 -4.96354 11.8691 -4.51562  c
13.2858 -4.08854 13.9941 -3.30729 13.9941 -2.17188  c
13.9941 -1.46354 13.7598 -.924479 13.2910 -.554688  c
12.8223 -.184896 12.1452 0.00000 11.2598 0.00000  c
8.71289 0.00000 l
h
9.93164 -.921875 m
10.1816 -.921875 l
11.0775 -.921875 11.6608 -.979167 11.9316 -1.09375  c
12.4421 -1.30208 12.6973 -1.69792 12.6973 -2.28125  c
12.6973 -2.80208 12.4655 -3.23177 12.0020 -3.57031  c
11.5384 -3.90885 10.9629 -4.07812 10.2754 -4.07812  c
9.93164 -4.07812 l
9.93164 -.921875 l
h
9.93164 -4.85938 m
10.3223 -4.85938 l
10.9785 -4.85938 11.4863 -5.00000 11.8457 -5.28125  c
12.2051 -5.56250 12.3848 -5.95833 12.3848 -6.46875  c
12.3848 -7.32292 11.7233 -7.75000 10.4004 -7.75000  c
9.93164 -7.75000 l
9.93164 -4.85938 l
h
19.3184 .218750 m
17.9746 .218750 16.9355 -.177083 16.2012 -.968750  c
15.4668 -1.76042 15.0996 -2.88021 15.0996 -4.32812  c
15.0996 -5.77604 15.4746 -6.89844 16.2246 -7.69531  c
16.9746 -8.49219 18.0267 -8.89062 19.3809 -8.89062  c
20.1621 -8.89062 21.0736 -8.76562 22.1152 -8.51562  c
22.1152 -7.35938 l
20.9277 -7.76562 20.0111 -7.96875 19.3652 -7.96875  c
18.4277 -7.96875 17.7012 -7.65104 17.1855 -7.01562  c
16.6699 -6.38021 16.4121 -5.47917 16.4121 -4.31250  c
16.4121 -3.20833 16.6855 -2.33854 17.2324 -1.70312  c
17.7793 -1.06771 18.5319 -.750000 19.4902 -.750000  c
20.3132 -.750000 21.1934 -1.00000 22.1309 -1.50000  c
22.1309 -.453125 l
21.2767 -.00520833 20.3392 .218750 19.3184 .218750  c
h
24.6055 0.00000 m
24.6055 -.875000 l
26.3398 -.875000 l
26.3398 -7.71875 l
24.6055 -7.28125 l
24.6055 -8.17188 l
27.4961 -8.89062 l
27.4961 -.875000 l
29.2305 -.875000 l
29.2305 0.00000 l
24.6055 0.00000 l
h
31.5059 0.00000 m
31.5059 -8.67188 l
34.3809 -8.67188 l
35.2454 -8.67188 35.9408 -8.57552 36.4668 -8.38281  c
36.9928 -8.19010 37.4486 -7.86458 37.8340 -7.40625  c
38.4486 -6.68750 38.7559 -5.73438 38.7559 -4.54688  c
38.7559 -3.09896 38.3757 -1.97917 37.6152 -1.18750  c
36.8548 -.395833 35.7819 0.00000 34.3965 0.00000  c
31.5059 0.00000 l
h
32.7246 -.921875 m
34.3027 -.921875 l
35.4277 -.921875 36.2246 -1.22396 36.6934 -1.82812  c
37.2038 -2.47396 37.4590 -3.33854 37.4590 -4.42188  c
37.4590 -5.44271 37.2090 -6.24479 36.7090 -6.82812  c
36.4069 -7.18229 36.0475 -7.42448 35.6309 -7.55469  c
35.2142 -7.68490 34.5840 -7.75000 33.7402 -7.75000  c
32.7246 -7.75000 l
32.7246 -.921875 l
h
41.1816 0.00000 m
41.1816 -.875000 l
42.9160 -.875000 l
42.9160 -7.71875 l
41.1816 -7.28125 l
41.1816 -8.17188 l
44.0723 -8.89062 l
44.0723 -.875000 l
45.8066 -.875000 l
45.8066 0.00000 l
41.1816 0.00000 l
h
50.7227 .218750 m
49.8268 .218750 49.1029 -.203125 48.5508 -1.04688  c
47.9987 -1.89062 47.7227 -2.98958 47.7227 -4.34375  c
47.7227 -5.70833 48.0013 -6.80729 48.5586 -7.64062  c
49.1159 -8.47396 49.8477 -8.89062 50.7539 -8.89062  c
51.6602 -8.89062 52.3919 -8.47396 52.9492 -7.64062  c
53.5065 -6.80729 53.7852 -5.71354 53.7852 -4.35938  c
53.7852 -2.97396 53.5065 -1.86458 52.9492 -1.03125  c
52.3919 -.197917 51.6497 .218750 50.7227 .218750  c
h
50.7383 -.656250 m
51.9570 -.656250 52.5664 -1.89583 52.5664 -4.37500  c
52.5664 -6.80208 51.9622 -8.01562 50.7539 -8.01562  c
49.5560 -8.01562 48.9570 -6.79167 48.9570 -4.34375  c
48.9570 -1.88542 49.5508 -.656250 50.7383 -.656250  c
h
55.6699 0.00000 m
55.6699 -8.67188 l
57.9199 -8.67188 l
58.7845 -8.67188 59.4486 -8.50781 59.9121 -8.17969  c
60.3757 -7.85156 60.6074 -7.38021 60.6074 -6.76562  c
60.6074 -5.71354 60.0137 -4.96354 58.8262 -4.51562  c
60.2428 -4.08854 60.9512 -3.30729 60.9512 -2.17188  c
60.9512 -1.46354 60.7168 -.924479 60.2480 -.554688  c
59.7793 -.184896 59.1022 0.00000 58.2168 0.00000  c
55.6699 0.00000 l
h
56.8887 -.921875 m
57.1387 -.921875 l
58.0345 -.921875 58.6178 -.979167 58.8887 -1.09375  c
59.3991 -1.30208 59.6543 -1.69792 59.6543 -2.28125  c
59.6543 -2.80208 59.4225 -3.23177 58.9590 -3.57031  c
58.4954 -3.90885 57.9199 -4.07812 57.2324 -4.07812  c
56.8887 -4.07812 l
56.8887 -.921875 l
h
56.8887 -4.85938 m
57.2793 -4.85938 l
57.9355 -4.85938 58.4434 -5.00000 58.8027 -5.28125  c
59.1621 -5.56250 59.3418 -5.95833 59.3418 -6.46875  c
59.3418 -7.32292 58.6803 -7.75000 57.3574 -7.75000  c
56.8887 -7.75000 l
56.8887 -4.85938 l
h
f
[ .949095 0.00000 0.00000 .949095 113.554 21.2250 ] defaultmatrix matrix concatmatrix setmatrix
.952941 .309804 .200000 RG
newpath
21.3959 326.305 m
.310087 347.391 l
-20.7757 326.305 l
.310087 305.220 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.310087 303.805 m
22.8101 326.305 l
.310087 348.805 l
-22.1899 326.305 l
h
21.3959 326.305 m
.310087 347.391 l
-20.7757 326.305 l
.310087 305.220 l
h
f*
.310087 326.305 translate
1.00000 1.00000 scale
-20.1533 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.48438 -8.67188 l
4.52604 -8.67188 5.27604 -8.49479 5.73438 -8.14062  c
6.19271 -7.78646 6.42188 -7.20833 6.42188 -6.40625  c
6.42188 -5.47917 6.10938 -4.75521 5.48438 -4.23438  c
4.85938 -3.71354 3.99479 -3.45312 2.89062 -3.45312  c
2.34375 -3.45312 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.37500 m
2.84375 -4.37500 l
3.57292 -4.37500 4.13542 -4.54427 4.53125 -4.88281  c
4.92708 -5.22135 5.12500 -5.69792 5.12500 -6.31250  c
5.12500 -6.82292 4.96875 -7.19010 4.65625 -7.41406  c
4.34375 -7.63802 3.82292 -7.75000 3.09375 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.37500 l
h
7.75781 0.00000 m
7.75781 -8.67188 l
10.6328 -8.67188 l
11.4974 -8.67188 12.1927 -8.57552 12.7188 -8.38281  c
13.2448 -8.19010 13.7005 -7.86458 14.0859 -7.40625  c
14.7005 -6.68750 15.0078 -5.73438 15.0078 -4.54688  c
15.0078 -3.09896 14.6276 -1.97917 13.8672 -1.18750  c
13.1068 -.395833 12.0339 0.00000 10.6484 0.00000  c
7.75781 0.00000 l
h
8.97656 -.921875 m
10.5547 -.921875 l
11.6797 -.921875 12.4766 -1.22396 12.9453 -1.82812  c
13.4557 -2.47396 13.7109 -3.33854 13.7109 -4.42188  c
13.7109 -5.44271 13.4609 -6.24479 12.9609 -6.82812  c
12.6589 -7.18229 12.2995 -7.42448 11.8828 -7.55469  c
11.4661 -7.68490 10.8359 -7.75000 9.99219 -7.75000  c
8.97656 -7.75000 l
8.97656 -.921875 l
h
16.7461 0.00000 m
16.7461 -8.67188 l
17.9648 -8.67188 l
17.9648 -5.01562 l
22.0898 -5.01562 l
22.0898 -8.67188 l
23.3242 -8.67188 l
23.3242 0.00000 l
22.0898 0.00000 l
22.0898 -4.09375 l
17.9648 -4.09375 l
17.9648 0.00000 l
16.7461 0.00000 l
h
29.9551 -3.31250 m
28.4707 -7.06250 l
27.0020 -3.31250 l
29.9551 -3.31250 l
h
31.2520 0.00000 m
30.3145 -2.40625 l
26.6426 -2.40625 l
25.6895 0.00000 l
24.5332 0.00000 l
27.9863 -8.67188 l
29.2051 -8.67188 l
32.5801 0.00000 l
31.2520 0.00000 l
h
33.7188 0.00000 m
33.7188 -1.01562 l
34.0521 -1.79688 34.7292 -2.65104 35.7500 -3.57812  c
36.4219 -4.17188 l
37.2656 -4.94271 37.6875 -5.70833 37.6875 -6.46875  c
37.6875 -6.94792 37.5443 -7.32552 37.2578 -7.60156  c
36.9714 -7.87760 36.5729 -8.01562 36.0625 -8.01562  c
35.4583 -8.01562 34.7500 -7.78646 33.9375 -7.32812  c
33.9375 -8.34375 l
34.7083 -8.70833 35.4688 -8.89062 36.2188 -8.89062  c
37.0312 -8.89062 37.6849 -8.67188 38.1797 -8.23438  c
38.6745 -7.79688 38.9219 -7.21875 38.9219 -6.50000  c
38.9219 -5.97917 38.7969 -5.51562 38.5469 -5.10938  c
38.2969 -4.70312 37.8333 -4.21354 37.1562 -3.64062  c
36.7188 -3.26562 l
35.7917 -2.48438 35.2552 -1.73438 35.1094 -1.01562  c
38.8750 -1.01562 l
38.8750 0.00000 l
33.7188 0.00000 l
h
f
[ .949095 0.00000 0.00000 .949095 113.554 21.2250 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .662745 .462745 RG
newpath
90.3138 280.693 m
90.3138 292.567 80.6879 302.193 68.8138 302.193  c
56.9396 302.193 47.3138 292.567 47.3138 280.693  c
47.3138 268.818 56.9396 259.193 68.8138 259.193  c
80.6879 259.193 90.3138 268.818 90.3138 280.693  c
h
f
0.00000 0.00000 0.00000 RG
newpath
91.3138 280.693 m
91.3138 293.119 81.2402 303.193 68.8138 303.193  c
56.3874 303.193 46.3138 293.119 46.3138 280.693  c
46.3138 268.266 56.3874 258.193 68.8138 258.193  c
81.2402 258.193 91.3138 268.266 91.3138 280.693  c
h
90.3138 280.693 m
90.3138 292.567 80.6879 302.193 68.8138 302.193  c
56.9396 302.193 47.3138 292.567 47.3138 280.693  c
47.3138 268.818 56.9396 259.193 68.8138 259.193  c
80.6879 259.193 90.3138 268.818 90.3138 280.693  c
h
f*
68.8138 280.693 translate
1.00000 1.00000 scale
-15.6270 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
4.00000 -8.67188 l
4.86458 -8.67188 5.55990 -8.57552 6.08594 -8.38281  c
6.61198 -8.19010 7.06771 -7.86458 7.45312 -7.40625  c
8.06771 -6.68750 8.37500 -5.73438 8.37500 -4.54688  c
8.37500 -3.09896 7.99479 -1.97917 7.23438 -1.18750  c
6.47396 -.395833 5.40104 0.00000 4.01562 0.00000  c
1.12500 0.00000 l
h
2.34375 -.921875 m
3.92188 -.921875 l
5.04688 -.921875 5.84375 -1.22396 6.31250 -1.82812  c
6.82292 -2.47396 7.07812 -3.33854 7.07812 -4.42188  c
7.07812 -5.44271 6.82812 -6.24479 6.32812 -6.82812  c
6.02604 -7.18229 5.66667 -7.42448 5.25000 -7.55469  c
4.83333 -7.68490 4.20312 -7.75000 3.35938 -7.75000  c
2.34375 -7.75000 l
2.34375 -.921875 l
h
10.1133 0.00000 m
10.1133 -8.67188 l
11.3320 -8.67188 l
11.3320 -.921875 l
15.2383 -.921875 l
15.2383 0.00000 l
10.1133 0.00000 l
h
20.9023 -3.31250 m
19.4180 -7.06250 l
17.9492 -3.31250 l
20.9023 -3.31250 l
h
22.1992 0.00000 m
21.2617 -2.40625 l
17.5898 -2.40625 l
16.6367 0.00000 l
15.4805 0.00000 l
18.9336 -8.67188 l
20.1523 -8.67188 l
23.5273 0.00000 l
22.1992 0.00000 l
h
26.8535 0.00000 m
26.8535 -7.75000 l
23.7754 -7.75000 l
23.7754 -8.67188 l
31.1504 -8.67188 l
31.1504 -7.75000 l
28.0723 -7.75000 l
28.0723 0.00000 l
26.8535 0.00000 l
h
f
[ .949095 0.00000 0.00000 .949095 113.554 21.2250 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
