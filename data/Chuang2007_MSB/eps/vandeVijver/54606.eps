%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 11:14:55 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 2.13302 0.00000 0.00000 2.13302 60.3258 46.2207 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
19.0935 99.1841 m
80.7413 113.255 l
S
newpath
19.0935 90.8218 m
109.526 70.1812 l
S
newpath
8.08812 79.8164 m
38.8121 16.0174 l
S
newpath
13.2922 104.985 m
33.6080 121.187 l
S
newpath
64.4444 5.01203 m
84.3584 9.55726 l
S
newpath
120.532 50.8135 m
109.991 28.9250 l
S
newpath
58.6431 10.8133 m
115.328 56.0176 l
S
newpath
53.4390 16.0174 m
92.9148 97.9898 l
S
newpath
18.3659 22.9685 m
33.6080 10.8133 l
S
newpath
18.3659 51.0255 m
85.0860 104.233 l
S
newpath
80.7413 123.268 m
64.4444 126.988 l
S
newpath
120.532 81.1865 m
112.440 97.9898 l
S
1.00000 .396078 .200000 RG
newpath
21.8605 95.0030 m
.774668 116.089 l
-20.3111 95.0030 l
.774668 73.9172 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.774668 72.5030 m
23.2747 95.0030 l
.774668 117.503 l
-21.7253 95.0030 l
h
21.8605 95.0030 m
.774668 116.089 l
-20.3111 95.0030 l
.774668 73.9172 l
h
f*
.774668 95.0030 translate
1.00000 1.00000 scale
-23.8711 4.42090 translate
newpath
1.10938 0.00000 m
1.10938 -8.67188 l
2.34375 -8.67188 l
2.34375 0.00000 l
1.10938 0.00000 l
h
6.64453 0.00000 m
6.64453 -7.75000 l
3.56641 -7.75000 l
3.56641 -8.67188 l
10.9414 -8.67188 l
10.9414 -7.75000 l
7.86328 -7.75000 l
7.86328 0.00000 l
6.64453 0.00000 l
h
18.6855 -.234375 m
17.6335 .0677083 16.7168 .218750 15.9355 .218750  c
14.5501 .218750 13.4902 -.174479 12.7559 -.960938  c
12.0215 -1.74740 11.6543 -2.87500 11.6543 -4.34375  c
11.6543 -5.78125 12.0267 -6.89844 12.7715 -7.69531  c
13.5163 -8.49219 14.5658 -8.89062 15.9199 -8.89062  c
16.7949 -8.89062 17.7116 -8.76042 18.6699 -8.50000  c
18.6699 -7.35938 l
17.4720 -7.76562 16.5553 -7.96875 15.9199 -7.96875  c
14.9824 -7.96875 14.2559 -7.65104 13.7402 -7.01562  c
13.2246 -6.38021 12.9668 -5.48438 12.9668 -4.32812  c
12.9668 -3.18229 13.2428 -2.29167 13.7949 -1.65625  c
14.3470 -1.02083 15.1230 -.703125 16.1230 -.703125  c
16.5397 -.703125 16.9824 -.776042 17.4512 -.921875  c
17.4512 -3.75000 l
18.6855 -3.75000 l
18.6855 -.234375 l
h
20.8418 0.00000 m
20.8418 -8.67188 l
23.0918 -8.67188 l
23.9564 -8.67188 24.6204 -8.50781 25.0840 -8.17969  c
25.5475 -7.85156 25.7793 -7.38021 25.7793 -6.76562  c
25.7793 -5.71354 25.1855 -4.96354 23.9980 -4.51562  c
25.4147 -4.08854 26.1230 -3.30729 26.1230 -2.17188  c
26.1230 -1.46354 25.8887 -.924479 25.4199 -.554688  c
24.9512 -.184896 24.2741 0.00000 23.3887 0.00000  c
20.8418 0.00000 l
h
22.0605 -.921875 m
22.3105 -.921875 l
23.2064 -.921875 23.7897 -.979167 24.0605 -1.09375  c
24.5710 -1.30208 24.8262 -1.69792 24.8262 -2.28125  c
24.8262 -2.80208 24.5944 -3.23177 24.1309 -3.57031  c
23.6673 -3.90885 23.0918 -4.07812 22.4043 -4.07812  c
22.0605 -4.07812 l
22.0605 -.921875 l
h
22.0605 -4.85938 m
22.4512 -4.85938 l
23.1074 -4.85938 23.6152 -5.00000 23.9746 -5.28125  c
24.3340 -5.56250 24.5137 -5.95833 24.5137 -6.46875  c
24.5137 -7.32292 23.8522 -7.75000 22.5293 -7.75000  c
22.0605 -7.75000 l
22.0605 -4.85938 l
h
31.1348 0.00000 m
31.1348 -2.45312 l
27.2285 -2.45312 l
27.2285 -3.32812 l
31.1348 -8.67188 l
32.2285 -8.67188 l
32.2285 -3.40625 l
33.3848 -3.40625 l
33.3848 -2.45312 l
32.2285 -2.45312 l
32.2285 0.00000 l
31.1348 0.00000 l
h
28.3691 -3.40625 m
31.2129 -3.40625 l
31.2129 -7.25000 l
28.3691 -3.40625 l
h
35.3320 0.00000 m
35.3320 -8.67188 l
37.5820 -8.67188 l
38.4466 -8.67188 39.1107 -8.50781 39.5742 -8.17969  c
40.0378 -7.85156 40.2695 -7.38021 40.2695 -6.76562  c
40.2695 -5.71354 39.6758 -4.96354 38.4883 -4.51562  c
39.9049 -4.08854 40.6133 -3.30729 40.6133 -2.17188  c
40.6133 -1.46354 40.3789 -.924479 39.9102 -.554688  c
39.4414 -.184896 38.7643 0.00000 37.8789 0.00000  c
35.3320 0.00000 l
h
36.5508 -.921875 m
36.8008 -.921875 l
37.6966 -.921875 38.2799 -.979167 38.5508 -1.09375  c
39.0612 -1.30208 39.3164 -1.69792 39.3164 -2.28125  c
39.3164 -2.80208 39.0846 -3.23177 38.6211 -3.57031  c
38.1576 -3.90885 37.5820 -4.07812 36.8945 -4.07812  c
36.5508 -4.07812 l
36.5508 -.921875 l
h
36.5508 -4.85938 m
36.9414 -4.85938 l
37.5977 -4.85938 38.1055 -5.00000 38.4648 -5.28125  c
38.8242 -5.56250 39.0039 -5.95833 39.0039 -6.46875  c
39.0039 -7.32292 38.3424 -7.75000 37.0195 -7.75000  c
36.5508 -7.75000 l
36.5508 -4.85938 l
h
42.2344 0.00000 m
42.2344 -8.67188 l
44.5938 -8.67188 l
45.6354 -8.67188 46.3854 -8.49479 46.8438 -8.14062  c
47.3021 -7.78646 47.5312 -7.20833 47.5312 -6.40625  c
47.5312 -5.47917 47.2188 -4.75521 46.5938 -4.23438  c
45.9688 -3.71354 45.1042 -3.45312 44.0000 -3.45312  c
43.4531 -3.45312 l
43.4531 0.00000 l
42.2344 0.00000 l
h
43.4531 -4.37500 m
43.9531 -4.37500 l
44.6823 -4.37500 45.2448 -4.54427 45.6406 -4.88281  c
46.0365 -5.22135 46.2344 -5.69792 46.2344 -6.31250  c
46.2344 -6.82292 46.0781 -7.19010 45.7656 -7.41406  c
45.4531 -7.63802 44.9323 -7.75000 44.2031 -7.75000  c
43.4531 -7.75000 l
43.4531 -4.37500 l
h
f
[ 2.13302 0.00000 0.00000 2.13302 60.3258 46.2207 ] defaultmatrix matrix concatmatrix setmatrix
.976471 .349020 .200000 RG
newpath
123.763 13.7384 m
102.677 34.8242 l
81.5914 13.7384 l
102.677 -7.34737 l
h
f
0.00000 0.00000 0.00000 RG
newpath
102.677 -8.76159 m
125.177 13.7384 l
102.677 36.2384 l
80.1772 13.7384 l
h
123.763 13.7384 m
102.677 34.8242 l
81.5914 13.7384 l
102.677 -7.34737 l
h
f*
102.677 13.7384 translate
1.00000 1.00000 scale
-20.3320 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
4.00000 -8.67188 l
4.86458 -8.67188 5.55990 -8.57552 6.08594 -8.38281  c
6.61198 -8.19010 7.06771 -7.86458 7.45312 -7.40625  c
8.06771 -6.68750 8.37500 -5.73438 8.37500 -4.54688  c
8.37500 -3.09896 7.99479 -1.97917 7.23438 -1.18750  c
6.47396 -.395833 5.40104 0.00000 4.01562 0.00000  c
1.12500 0.00000 l
h
2.34375 -.921875 m
3.92188 -.921875 l
5.04688 -.921875 5.84375 -1.22396 6.31250 -1.82812  c
6.82292 -2.47396 7.07812 -3.33854 7.07812 -4.42188  c
7.07812 -5.44271 6.82812 -6.24479 6.32812 -6.82812  c
6.02604 -7.18229 5.66667 -7.42448 5.25000 -7.55469  c
4.83333 -7.68490 4.20312 -7.75000 3.35938 -7.75000  c
2.34375 -7.75000 l
2.34375 -.921875 l
h
10.1133 0.00000 m
10.1133 -8.67188 l
12.9883 -8.67188 l
13.8529 -8.67188 14.5482 -8.57552 15.0742 -8.38281  c
15.6003 -8.19010 16.0560 -7.86458 16.4414 -7.40625  c
17.0560 -6.68750 17.3633 -5.73438 17.3633 -4.54688  c
17.3633 -3.09896 16.9831 -1.97917 16.2227 -1.18750  c
15.4622 -.395833 14.3893 0.00000 13.0039 0.00000  c
10.1133 0.00000 l
h
11.3320 -.921875 m
12.9102 -.921875 l
14.0352 -.921875 14.8320 -1.22396 15.3008 -1.82812  c
15.8112 -2.47396 16.0664 -3.33854 16.0664 -4.42188  c
16.0664 -5.44271 15.8164 -6.24479 15.3164 -6.82812  c
15.0143 -7.18229 14.6549 -7.42448 14.2383 -7.55469  c
13.8216 -7.68490 13.1914 -7.75000 12.3477 -7.75000  c
11.3320 -7.75000 l
11.3320 -.921875 l
h
18.0703 0.00000 m
20.9453 -4.35938 l
18.2109 -8.67188 l
19.6641 -8.67188 l
21.7578 -5.40625 l
23.9453 -8.67188 l
25.1016 -8.67188 l
22.3359 -4.48438 l
25.1797 0.00000 l
23.7266 0.00000 l
21.5234 -3.43750 l
19.2422 0.00000 l
18.0703 0.00000 l
h
26.9414 .0312500 m
26.9414 -1.00000 l
27.5247 -.770833 28.0716 -.656250 28.5820 -.656250  c
29.1549 -.656250 29.6055 -.822917 29.9336 -1.15625  c
30.2617 -1.48958 30.4258 -1.95312 30.4258 -2.54688  c
30.4258 -3.84896 29.5299 -4.50000 27.7383 -4.50000  c
27.5299 -4.50000 27.3164 -4.48438 27.0977 -4.45312  c
27.0977 -8.67188 l
31.4883 -8.67188 l
31.4883 -7.67188 l
28.1133 -7.67188 l
28.1133 -5.37500 l
29.2279 -5.37500 30.0977 -5.11979 30.7227 -4.60938  c
31.3477 -4.09896 31.6602 -3.39062 31.6602 -2.48438  c
31.6602 -1.64062 31.3737 -.979167 30.8008 -.500000  c
30.2279 -.0208333 29.4414 .218750 28.4414 .218750  c
28.0039 .218750 27.5039 .156250 26.9414 .0312500  c
h
35.1387 -4.50000 m
35.6908 -5.20833 36.3835 -5.56250 37.2168 -5.56250  c
37.9772 -5.56250 38.5996 -5.31250 39.0840 -4.81250  c
39.5684 -4.31250 39.8105 -3.67188 39.8105 -2.89062  c
39.8105 -1.98438 39.5397 -1.23958 38.9980 -.656250  c
38.4564 -.0729167 37.7689 .218750 36.9355 .218750  c
35.9772 .218750 35.2272 -.166667 34.6855 -.937500  c
34.1439 -1.70833 33.8730 -2.77604 33.8730 -4.14062  c
33.8730 -5.65104 34.1829 -6.82031 34.8027 -7.64844  c
35.4225 -8.47656 36.2949 -8.89062 37.4199 -8.89062  c
37.9408 -8.89062 38.5866 -8.78125 39.3574 -8.56250  c
39.3574 -7.56250 l
38.5449 -7.87500 37.8783 -8.03125 37.3574 -8.03125  c
35.8783 -8.03125 35.1387 -6.85417 35.1387 -4.50000  c
h
38.6387 -2.62500 m
38.6387 -3.28125 38.4928 -3.79688 38.2012 -4.17188  c
37.9095 -4.54688 37.4980 -4.73438 36.9668 -4.73438  c
36.4876 -4.73438 36.0710 -4.57031 35.7168 -4.24219  c
35.3626 -3.91406 35.1855 -3.52083 35.1855 -3.06250  c
35.1855 -2.33333 35.3522 -1.75000 35.6855 -1.31250  c
36.0189 -.875000 36.4616 -.656250 37.0137 -.656250  c
37.5137 -.656250 37.9095 -.833333 38.2012 -1.18750  c
38.4928 -1.54167 38.6387 -2.02083 38.6387 -2.62500  c
h
f
[ 2.13302 0.00000 0.00000 2.13302 60.3258 46.2207 ] defaultmatrix matrix concatmatrix setmatrix
.941176 .282353 .200000 RG
newpath
67.2114 .830870 m
46.1256 21.9167 l
25.0398 .830870 l
46.1256 -20.2549 l
h
f
0.00000 0.00000 0.00000 RG
newpath
46.1256 -21.6691 m
68.6256 .830870 l
46.1256 23.3309 l
23.6256 .830870 l
h
67.2114 .830870 m
46.1256 21.9167 l
25.0398 .830870 l
46.1256 -20.2549 l
h
f*
46.1256 .830870 translate
1.00000 1.00000 scale
-22.0078 4.42090 translate
newpath
7.64062 -.234375 m
6.58854 .0677083 5.67188 .218750 4.89062 .218750  c
3.50521 .218750 2.44531 -.174479 1.71094 -.960938  c
.976562 -1.74740 .609375 -2.87500 .609375 -4.34375  c
.609375 -5.78125 .981771 -6.89844 1.72656 -7.69531  c
2.47135 -8.49219 3.52083 -8.89062 4.87500 -8.89062  c
5.75000 -8.89062 6.66667 -8.76042 7.62500 -8.50000  c
7.62500 -7.35938 l
6.42708 -7.76562 5.51042 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.48438 1.92188 -4.32812  c
1.92188 -3.18229 2.19792 -2.29167 2.75000 -1.65625  c
3.30208 -1.02083 4.07812 -.703125 5.07812 -.703125  c
5.49479 -.703125 5.93750 -.776042 6.40625 -.921875  c
6.40625 -3.75000 l
7.64062 -3.75000 l
7.64062 -.234375 l
h
11.8594 0.00000 m
11.8594 -7.75000 l
8.78125 -7.75000 l
8.78125 -8.67188 l
16.1562 -8.67188 l
16.1562 -7.75000 l
13.0781 -7.75000 l
13.0781 0.00000 l
11.8594 0.00000 l
h
17.3848 0.00000 m
17.3848 -8.67188 l
19.7441 -8.67188 l
20.7858 -8.67188 21.5358 -8.49479 21.9941 -8.14062  c
22.4525 -7.78646 22.6816 -7.20833 22.6816 -6.40625  c
22.6816 -5.47917 22.3691 -4.75521 21.7441 -4.23438  c
21.1191 -3.71354 20.2546 -3.45312 19.1504 -3.45312  c
18.6035 -3.45312 l
18.6035 0.00000 l
17.3848 0.00000 l
h
18.6035 -4.37500 m
19.1035 -4.37500 l
19.8327 -4.37500 20.3952 -4.54427 20.7910 -4.88281  c
21.1868 -5.22135 21.3848 -5.69792 21.3848 -6.31250  c
21.3848 -6.82292 21.2285 -7.19010 20.9160 -7.41406  c
20.6035 -7.63802 20.0827 -7.75000 19.3535 -7.75000  c
18.6035 -7.75000 l
18.6035 -4.37500 l
h
24.0176 0.00000 m
24.0176 -8.67188 l
26.2676 -8.67188 l
27.1322 -8.67188 27.7962 -8.50781 28.2598 -8.17969  c
28.7233 -7.85156 28.9551 -7.38021 28.9551 -6.76562  c
28.9551 -5.71354 28.3613 -4.96354 27.1738 -4.51562  c
28.5905 -4.08854 29.2988 -3.30729 29.2988 -2.17188  c
29.2988 -1.46354 29.0645 -.924479 28.5957 -.554688  c
28.1270 -.184896 27.4499 0.00000 26.5645 0.00000  c
24.0176 0.00000 l
h
25.2363 -.921875 m
25.4863 -.921875 l
26.3822 -.921875 26.9655 -.979167 27.2363 -1.09375  c
27.7467 -1.30208 28.0020 -1.69792 28.0020 -2.28125  c
28.0020 -2.80208 27.7702 -3.23177 27.3066 -3.57031  c
26.8431 -3.90885 26.2676 -4.07812 25.5801 -4.07812  c
25.2363 -4.07812 l
25.2363 -.921875 l
h
25.2363 -4.85938 m
25.6270 -4.85938 l
26.2832 -4.85938 26.7910 -5.00000 27.1504 -5.28125  c
27.5098 -5.56250 27.6895 -5.95833 27.6895 -6.46875  c
27.6895 -7.32292 27.0280 -7.75000 25.7051 -7.75000  c
25.2363 -7.75000 l
25.2363 -4.85938 l
h
30.9199 0.00000 m
30.9199 -8.67188 l
33.2793 -8.67188 l
34.3210 -8.67188 35.0710 -8.49479 35.5293 -8.14062  c
35.9876 -7.78646 36.2168 -7.20833 36.2168 -6.40625  c
36.2168 -5.47917 35.9043 -4.75521 35.2793 -4.23438  c
34.6543 -3.71354 33.7897 -3.45312 32.6855 -3.45312  c
32.1387 -3.45312 l
32.1387 0.00000 l
30.9199 0.00000 l
h
32.1387 -4.37500 m
32.6387 -4.37500 l
33.3678 -4.37500 33.9303 -4.54427 34.3262 -4.88281  c
34.7220 -5.22135 34.9199 -5.69792 34.9199 -6.31250  c
34.9199 -6.82292 34.7637 -7.19010 34.4512 -7.41406  c
34.1387 -7.63802 33.6178 -7.75000 32.8887 -7.75000  c
32.1387 -7.75000 l
32.1387 -4.37500 l
h
40.9434 0.00000 m
40.9434 -2.45312 l
37.0371 -2.45312 l
37.0371 -3.32812 l
40.9434 -8.67188 l
42.0371 -8.67188 l
42.0371 -3.40625 l
43.1934 -3.40625 l
43.1934 -2.45312 l
42.0371 -2.45312 l
42.0371 0.00000 l
40.9434 0.00000 l
h
38.1777 -3.40625 m
41.0215 -3.40625 l
41.0215 -7.25000 l
38.1777 -3.40625 l
h
f
[ 2.13302 0.00000 0.00000 2.13302 60.3258 46.2207 ] defaultmatrix matrix concatmatrix setmatrix
.690196 1.00000 .592157 RG
newpath
22.2747 36.9970 m
22.2747 48.8711 12.6488 58.4970 .774668 58.4970  c
-11.0995 58.4970 -20.7253 48.8711 -20.7253 36.9970  c
-20.7253 25.1229 -11.0995 15.4970 .774668 15.4970  c
12.6488 15.4970 22.2747 25.1229 22.2747 36.9970  c
h
f
0.00000 0.00000 0.00000 RG
newpath
23.2747 36.9970 m
23.2747 49.4234 13.2011 59.4970 .774668 59.4970  c
-11.6517 59.4970 -21.7253 49.4234 -21.7253 36.9970  c
-21.7253 24.5706 -11.6517 14.4970 .774668 14.4970  c
13.2011 14.4970 23.2747 24.5706 23.2747 36.9970  c
h
22.2747 36.9970 m
22.2747 48.8711 12.6488 58.4970 .774668 58.4970  c
-11.0995 58.4970 -20.7253 48.8711 -20.7253 36.9970  c
-20.7253 25.1229 -11.0995 15.4970 .774668 15.4970  c
12.6488 15.4970 22.2747 25.1229 22.2747 36.9970  c
h
f*
.774668 36.9970 translate
1.00000 1.00000 scale
-17.8887 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.82812 -8.67188 l
5.23438 -1.96875 l
7.70312 -8.67188 l
9.21875 -8.67188 l
9.21875 0.00000 l
8.07812 0.00000 l
8.07812 -7.06250 l
5.68750 -.578125 l
4.50000 -.578125 l
2.17188 -7.07812 l
2.17188 0.00000 l
1.12500 0.00000 l
h
11.4609 0.00000 m
11.4609 -8.67188 l
14.3359 -8.67188 l
15.2005 -8.67188 15.8958 -8.57552 16.4219 -8.38281  c
16.9479 -8.19010 17.4036 -7.86458 17.7891 -7.40625  c
18.4036 -6.68750 18.7109 -5.73438 18.7109 -4.54688  c
18.7109 -3.09896 18.3307 -1.97917 17.5703 -1.18750  c
16.8099 -.395833 15.7370 0.00000 14.3516 0.00000  c
11.4609 0.00000 l
h
12.6797 -.921875 m
14.2578 -.921875 l
15.3828 -.921875 16.1797 -1.22396 16.6484 -1.82812  c
17.1589 -2.47396 17.4141 -3.33854 17.4141 -4.42188  c
17.4141 -5.44271 17.1641 -6.24479 16.6641 -6.82812  c
16.3620 -7.18229 16.0026 -7.42448 15.5859 -7.55469  c
15.1693 -7.68490 14.5391 -7.75000 13.6953 -7.75000  c
12.6797 -7.75000 l
12.6797 -.921875 l
h
20.4492 0.00000 m
20.4492 -8.67188 l
21.6523 -8.67188 l
26.0117 -1.96875 l
26.0117 -8.67188 l
27.0742 -8.67188 l
27.0742 0.00000 l
25.8711 0.00000 l
21.4961 -6.70312 l
21.4961 0.00000 l
20.4492 0.00000 l
h
30.0020 0.00000 m
30.0020 -.875000 l
31.7363 -.875000 l
31.7363 -7.71875 l
30.0020 -7.28125 l
30.0020 -8.17188 l
32.8926 -8.89062 l
32.8926 -.875000 l
34.6270 -.875000 l
34.6270 0.00000 l
30.0020 0.00000 l
h
f
[ 2.13302 0.00000 0.00000 2.13302 60.3258 46.2207 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .505882 .305882 RG
newpath
124.177 118.262 m
124.177 130.136 114.551 139.762 102.677 139.762  c
90.8031 139.762 81.1772 130.136 81.1772 118.262  c
81.1772 106.387 90.8031 96.7616 102.677 96.7616  c
114.551 96.7616 124.177 106.387 124.177 118.262  c
h
f
0.00000 0.00000 0.00000 RG
newpath
125.177 118.262 m
125.177 130.688 115.104 140.762 102.677 140.762  c
90.2508 140.762 80.1772 130.688 80.1772 118.262  c
80.1772 105.835 90.2508 95.7616 102.677 95.7616  c
115.104 95.7616 125.177 105.835 125.177 118.262  c
h
124.177 118.262 m
124.177 130.136 114.551 139.762 102.677 139.762  c
90.8031 139.762 81.1772 130.136 81.1772 118.262  c
81.1772 106.387 90.8031 96.7616 102.677 96.7616  c
114.551 96.7616 124.177 106.387 124.177 118.262  c
h
f*
102.677 118.262 translate
1.00000 1.00000 scale
-18.9609 4.42090 translate
newpath
7.64062 -.234375 m
6.58854 .0677083 5.67188 .218750 4.89062 .218750  c
3.50521 .218750 2.44531 -.174479 1.71094 -.960938  c
.976562 -1.74740 .609375 -2.87500 .609375 -4.34375  c
.609375 -5.78125 .981771 -6.89844 1.72656 -7.69531  c
2.47135 -8.49219 3.52083 -8.89062 4.87500 -8.89062  c
5.75000 -8.89062 6.66667 -8.76042 7.62500 -8.50000  c
7.62500 -7.35938 l
6.42708 -7.76562 5.51042 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.48438 1.92188 -4.32812  c
1.92188 -3.18229 2.19792 -2.29167 2.75000 -1.65625  c
3.30208 -1.02083 4.07812 -.703125 5.07812 -.703125  c
5.49479 -.703125 5.93750 -.776042 6.40625 -.921875  c
6.40625 -3.75000 l
7.64062 -3.75000 l
7.64062 -.234375 l
h
9.79688 0.00000 m
9.79688 -8.67188 l
11.0000 -8.67188 l
15.3594 -1.96875 l
15.3594 -8.67188 l
16.4219 -8.67188 l
16.4219 0.00000 l
15.2188 0.00000 l
10.8438 -6.70312 l
10.8438 0.00000 l
9.79688 0.00000 l
h
18.6621 0.00000 m
18.6621 -8.67188 l
19.8809 -8.67188 l
19.8809 -.921875 l
23.7871 -.921875 l
23.7871 0.00000 l
18.6621 0.00000 l
h
25.1543 -.0625000 m
25.1543 -1.14062 l
25.9876 -.817708 26.6387 -.656250 27.1074 -.656250  c
27.6595 -.656250 28.1100 -.817708 28.4590 -1.14062  c
28.8079 -1.46354 28.9824 -1.88021 28.9824 -2.39062  c
28.9824 -3.60938 28.1283 -4.21875 26.4199 -4.21875  c
25.9512 -4.21875 l
25.9512 -5.00000 l
26.3574 -5.00000 l
27.9616 -5.00000 28.7637 -5.56250 28.7637 -6.68750  c
28.7637 -7.57292 28.2376 -8.01562 27.1855 -8.01562  c
26.6022 -8.01562 25.9668 -7.85417 25.2793 -7.53125  c
25.2793 -8.54688 l
25.9564 -8.77604 26.6178 -8.89062 27.2637 -8.89062  c
29.0345 -8.89062 29.9199 -8.21875 29.9199 -6.87500  c
29.9199 -5.85417 29.3158 -5.13021 28.1074 -4.70312  c
29.5137 -4.38021 30.2168 -3.61458 30.2168 -2.40625  c
30.2168 -1.58333 29.9460 -.940104 29.4043 -.476562  c
28.8626 -.0130208 28.1230 .218750 27.1855 .218750  c
26.6439 .218750 25.9668 .125000 25.1543 -.0625000  c
h
32.6484 0.00000 m
32.6484 -8.67188 l
33.8672 -8.67188 l
33.8672 -.921875 l
37.7734 -.921875 l
37.7734 0.00000 l
32.6484 0.00000 l
h
f
[ 2.13302 0.00000 0.00000 2.13302 60.3258 46.2207 ] defaultmatrix matrix concatmatrix setmatrix
.917647 .235294 .200000 RG
newpath
148.931 66.0000 m
127.845 87.0858 l
106.759 66.0000 l
127.845 44.9142 l
h
f
0.00000 0.00000 0.00000 RG
newpath
127.845 43.5000 m
150.345 66.0000 l
127.845 88.5000 l
105.345 66.0000 l
h
148.931 66.0000 m
127.845 87.0858 l
106.759 66.0000 l
127.845 44.9142 l
h
f*
127.845 66.0000 translate
1.00000 1.00000 scale
-13.2715 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.32812 -8.67188 l
6.68750 -1.96875 l
6.68750 -8.67188 l
7.75000 -8.67188 l
7.75000 0.00000 l
6.54688 0.00000 l
2.17188 -6.70312 l
2.17188 0.00000 l
1.12500 0.00000 l
h
9.97461 0.00000 m
9.97461 -8.67188 l
11.2090 -8.67188 l
11.2090 0.00000 l
9.97461 0.00000 l
h
13.4473 0.00000 m
13.4473 -8.67188 l
15.8066 -8.67188 l
16.8483 -8.67188 17.5983 -8.49479 18.0566 -8.14062  c
18.5150 -7.78646 18.7441 -7.20833 18.7441 -6.40625  c
18.7441 -5.47917 18.4316 -4.75521 17.8066 -4.23438  c
17.1816 -3.71354 16.3171 -3.45312 15.2129 -3.45312  c
14.6660 -3.45312 l
14.6660 0.00000 l
13.4473 0.00000 l
h
14.6660 -4.37500 m
15.1660 -4.37500 l
15.8952 -4.37500 16.4577 -4.54427 16.8535 -4.88281  c
17.2493 -5.22135 17.4473 -5.69792 17.4473 -6.31250  c
17.4473 -6.82292 17.2910 -7.19010 16.9785 -7.41406  c
16.6660 -7.63802 16.1452 -7.75000 15.4160 -7.75000  c
14.6660 -7.75000 l
14.6660 -4.37500 l
h
20.7676 0.00000 m
20.8717 -.677083 21.0306 -1.26042 21.2441 -1.75000  c
21.4577 -2.23958 21.8301 -2.91667 22.3613 -3.78125  c
24.7207 -7.59375 l
20.2520 -7.59375 l
20.2520 -8.67188 l
25.8301 -8.67188 l
25.8301 -7.59375 l
23.6009 -4.31250 22.3561 -1.78125 22.0957 0.00000  c
20.7676 0.00000 l
h
f
[ 2.13302 0.00000 0.00000 2.13302 60.3258 46.2207 ] defaultmatrix matrix concatmatrix setmatrix
.898039 .200000 .200000 RG
newpath
67.2114 131.169 m
46.1256 152.255 l
25.0398 131.169 l
46.1256 110.083 l
h
f
0.00000 0.00000 0.00000 RG
newpath
46.1256 108.669 m
68.6256 131.169 l
46.1256 153.669 l
23.6256 131.169 l
h
67.2114 131.169 m
46.1256 152.255 l
25.0398 131.169 l
46.1256 110.083 l
h
f*
46.1256 131.169 translate
1.00000 1.00000 scale
-15.9023 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
5.96875 -8.67188 l
5.96875 -7.75000 l
2.34375 -7.75000 l
2.34375 -4.84375 l
5.39062 -4.84375 l
5.39062 -3.93750 l
2.34375 -3.93750 l
2.34375 0.00000 l
1.12500 0.00000 l
h
9.62109 0.00000 m
9.62109 -7.75000 l
6.54297 -7.75000 l
6.54297 -8.67188 l
13.9180 -8.67188 l
13.9180 -7.75000 l
10.8398 -7.75000 l
10.8398 0.00000 l
9.62109 0.00000 l
h
16.8340 .218750 m
16.2611 .218750 15.5215 .0885417 14.6152 -.171875  c
14.6152 -1.39062 l
15.5840 -.932292 16.3861 -.703125 17.0215 -.703125  c
17.5007 -.703125 17.8887 -.830729 18.1855 -1.08594  c
18.4824 -1.34115 18.6309 -1.67708 18.6309 -2.09375  c
18.6309 -2.42708 18.5345 -2.71354 18.3418 -2.95312  c
18.1491 -3.19271 17.7923 -3.45833 17.2715 -3.75000  c
16.6777 -4.09375 l
15.9382 -4.52083 15.4173 -4.91927 15.1152 -5.28906  c
14.8132 -5.65885 14.6621 -6.09375 14.6621 -6.59375  c
14.6621 -7.26042 14.9043 -7.80990 15.3887 -8.24219  c
15.8730 -8.67448 16.4902 -8.89062 17.2402 -8.89062  c
17.9069 -8.89062 18.6100 -8.78125 19.3496 -8.56250  c
19.3496 -7.43750 l
18.4329 -7.79167 17.7507 -7.96875 17.3027 -7.96875  c
16.8757 -7.96875 16.5241 -7.85677 16.2480 -7.63281  c
15.9720 -7.40885 15.8340 -7.12500 15.8340 -6.78125  c
15.8340 -6.48958 15.9355 -6.23177 16.1387 -6.00781  c
16.3418 -5.78385 16.7142 -5.51562 17.2559 -5.20312  c
17.8652 -4.85938 l
18.6152 -4.43229 19.1387 -4.02865 19.4355 -3.64844  c
19.7324 -3.26823 19.8809 -2.81250 19.8809 -2.28125  c
19.8809 -1.53125 19.6048 -.927083 19.0527 -.468750  c
18.5007 -.0104167 17.7611 .218750 16.8340 .218750  c
h
19.4062 1.60938 m
19.4062 .515625 l
19.8750 .671875 20.2917 .750000 20.6562 .750000  c
21.1250 .750000 21.4505 .617188 21.6328 .351562  c
21.8151 .0859375 21.9062 -.385417 21.9062 -1.06250  c
21.9062 -8.67188 l
23.1406 -8.67188 l
23.1406 -1.09375 l
23.1406 .791667 22.2448 1.73438 20.4531 1.73438  c
20.1823 1.73438 19.8333 1.69271 19.4062 1.60938  c
h
25.4355 -.0625000 m
25.4355 -1.14062 l
26.2689 -.817708 26.9199 -.656250 27.3887 -.656250  c
27.9408 -.656250 28.3913 -.817708 28.7402 -1.14062  c
29.0892 -1.46354 29.2637 -1.88021 29.2637 -2.39062  c
29.2637 -3.60938 28.4095 -4.21875 26.7012 -4.21875  c
26.2324 -4.21875 l
26.2324 -5.00000 l
26.6387 -5.00000 l
28.2428 -5.00000 29.0449 -5.56250 29.0449 -6.68750  c
29.0449 -7.57292 28.5189 -8.01562 27.4668 -8.01562  c
26.8835 -8.01562 26.2480 -7.85417 25.5605 -7.53125  c
25.5605 -8.54688 l
26.2376 -8.77604 26.8991 -8.89062 27.5449 -8.89062  c
29.3158 -8.89062 30.2012 -8.21875 30.2012 -6.87500  c
30.2012 -5.85417 29.5970 -5.13021 28.3887 -4.70312  c
29.7949 -4.38021 30.4980 -3.61458 30.4980 -2.40625  c
30.4980 -1.58333 30.2272 -.940104 29.6855 -.476562  c
29.1439 -.0130208 28.4043 .218750 27.4668 .218750  c
26.9251 .218750 26.2480 .125000 25.4355 -.0625000  c
h
f
[ 2.13302 0.00000 0.00000 2.13302 60.3258 46.2207 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
