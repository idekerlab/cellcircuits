%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 11:07:29 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.27429 0.00000 0.00000 1.27429 27.6282 96.5253 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
34.5899 56.9101 m
9.22885 14.4214 l
S
newpath
34.5899 85.0899 m
12.3507 122.348 l
S
newpath
185.100 71.0000 m
147.800 71.0000 l
S
newpath
223.510 55.0901 m
254.545 24.0551 l
S
newpath
223.510 86.9099 m
249.885 113.285 l
S
newpath
102.800 71.0000 m
65.5000 71.0000 l
S
.992157 .380392 .200000 RG
newpath
21.9045 .331539 m
.818743 21.4173 l
-20.2670 .331539 l
.818743 -20.7542 l
h
f
0.00000 0.00000 0.00000 RG
newpath
.818743 -22.1685 m
23.3187 .331539 l
.818743 22.8315 l
-21.6813 .331539 l
h
21.9045 .331539 m
.818743 21.4173 l
-20.2670 .331539 l
.818743 -20.7542 l
h
f*
.818743 .331539 translate
1.00000 1.00000 scale
-24.5361 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
9.42773 0.00000 m
9.42773 -8.67188 l
12.3027 -8.67188 l
13.1673 -8.67188 13.8626 -8.57552 14.3887 -8.38281  c
14.9147 -8.19010 15.3704 -7.86458 15.7559 -7.40625  c
16.3704 -6.68750 16.6777 -5.73438 16.6777 -4.54688  c
16.6777 -3.09896 16.2975 -1.97917 15.5371 -1.18750  c
14.7767 -.395833 13.7038 0.00000 12.3184 0.00000  c
9.42773 0.00000 l
h
10.6465 -.921875 m
12.2246 -.921875 l
13.3496 -.921875 14.1465 -1.22396 14.6152 -1.82812  c
15.1257 -2.47396 15.3809 -3.33854 15.3809 -4.42188  c
15.3809 -5.44271 15.1309 -6.24479 14.6309 -6.82812  c
14.3288 -7.18229 13.9694 -7.42448 13.5527 -7.55469  c
13.1361 -7.68490 12.5059 -7.75000 11.6621 -7.75000  c
10.6465 -7.75000 l
10.6465 -.921875 l
h
22.1191 .218750 m
20.7754 .218750 19.7363 -.177083 19.0020 -.968750  c
18.2676 -1.76042 17.9004 -2.88021 17.9004 -4.32812  c
17.9004 -5.77604 18.2754 -6.89844 19.0254 -7.69531  c
19.7754 -8.49219 20.8275 -8.89062 22.1816 -8.89062  c
22.9629 -8.89062 23.8743 -8.76562 24.9160 -8.51562  c
24.9160 -7.35938 l
23.7285 -7.76562 22.8118 -7.96875 22.1660 -7.96875  c
21.2285 -7.96875 20.5020 -7.65104 19.9863 -7.01562  c
19.4707 -6.38021 19.2129 -5.47917 19.2129 -4.31250  c
19.2129 -3.20833 19.4863 -2.33854 20.0332 -1.70312  c
20.5801 -1.06771 21.3327 -.750000 22.2910 -.750000  c
23.1139 -.750000 23.9941 -1.00000 24.9316 -1.50000  c
24.9316 -.453125 l
24.0775 -.00520833 23.1400 .218750 22.1191 .218750  c
h
26.5938 0.00000 m
26.5938 -1.01562 l
26.9271 -1.79688 27.6042 -2.65104 28.6250 -3.57812  c
29.2969 -4.17188 l
30.1406 -4.94271 30.5625 -5.70833 30.5625 -6.46875  c
30.5625 -6.94792 30.4193 -7.32552 30.1328 -7.60156  c
29.8464 -7.87760 29.4479 -8.01562 28.9375 -8.01562  c
28.3333 -8.01562 27.6250 -7.78646 26.8125 -7.32812  c
26.8125 -8.34375 l
27.5833 -8.70833 28.3438 -8.89062 29.0938 -8.89062  c
29.9062 -8.89062 30.5599 -8.67188 31.0547 -8.23438  c
31.5495 -7.79688 31.7969 -7.21875 31.7969 -6.50000  c
31.7969 -5.97917 31.6719 -5.51562 31.4219 -5.10938  c
31.1719 -4.70312 30.7083 -4.21354 30.0312 -3.64062  c
29.5938 -3.26562 l
28.6667 -2.48438 28.1302 -1.73438 27.9844 -1.01562  c
31.7500 -1.01562 l
31.7500 0.00000 l
26.5938 0.00000 l
h
34.6348 .0312500 m
34.6348 -1.00000 l
35.2181 -.770833 35.7650 -.656250 36.2754 -.656250  c
36.8483 -.656250 37.2988 -.822917 37.6270 -1.15625  c
37.9551 -1.48958 38.1191 -1.95312 38.1191 -2.54688  c
38.1191 -3.84896 37.2233 -4.50000 35.4316 -4.50000  c
35.2233 -4.50000 35.0098 -4.48438 34.7910 -4.45312  c
34.7910 -8.67188 l
39.1816 -8.67188 l
39.1816 -7.67188 l
35.8066 -7.67188 l
35.8066 -5.37500 l
36.9212 -5.37500 37.7910 -5.11979 38.4160 -4.60938  c
39.0410 -4.09896 39.3535 -3.39062 39.3535 -2.48438  c
39.3535 -1.64062 39.0671 -.979167 38.4941 -.500000  c
37.9212 -.0208333 37.1348 .218750 36.1348 .218750  c
35.6973 .218750 35.1973 .156250 34.6348 .0312500  c
h
45.5977 .218750 m
44.2539 .218750 43.2148 -.177083 42.4805 -.968750  c
41.7461 -1.76042 41.3789 -2.88021 41.3789 -4.32812  c
41.3789 -5.77604 41.7539 -6.89844 42.5039 -7.69531  c
43.2539 -8.49219 44.3060 -8.89062 45.6602 -8.89062  c
46.4414 -8.89062 47.3529 -8.76562 48.3945 -8.51562  c
48.3945 -7.35938 l
47.2070 -7.76562 46.2904 -7.96875 45.6445 -7.96875  c
44.7070 -7.96875 43.9805 -7.65104 43.4648 -7.01562  c
42.9492 -6.38021 42.6914 -5.47917 42.6914 -4.31250  c
42.6914 -3.20833 42.9648 -2.33854 43.5117 -1.70312  c
44.0586 -1.06771 44.8112 -.750000 45.7695 -.750000  c
46.5924 -.750000 47.4727 -1.00000 48.4102 -1.50000  c
48.4102 -.453125 l
47.5560 -.00520833 46.6185 .218750 45.5977 .218750  c
h
f
[ 1.27429 0.00000 0.00000 1.27429 27.6282 96.5253 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .603922 .403922 RG
newpath
22.3187 141.668 m
22.3187 153.543 12.6929 163.168 .818743 163.168  c
-11.0554 163.168 -20.6813 153.543 -20.6813 141.668  c
-20.6813 129.794 -11.0554 120.168 .818743 120.168  c
12.6929 120.168 22.3187 129.794 22.3187 141.668  c
h
f
0.00000 0.00000 0.00000 RG
newpath
23.3187 141.668 m
23.3187 154.095 13.2451 164.168 .818743 164.168  c
-11.6077 164.168 -21.6813 154.095 -21.6813 141.668  c
-21.6813 129.242 -11.6077 119.168 .818743 119.168  c
13.2451 119.168 23.3187 129.242 23.3187 141.668  c
h
22.3187 141.668 m
22.3187 153.543 12.6929 163.168 .818743 163.168  c
-11.0554 163.168 -20.6813 153.543 -20.6813 141.668  c
-20.6813 129.794 -11.0554 120.168 .818743 120.168  c
12.6929 120.168 22.3187 129.794 22.3187 141.668  c
h
f*
.818743 141.668 translate
1.00000 1.00000 scale
-26.3057 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
13.1035 -3.31250 m
11.6191 -7.06250 l
10.1504 -3.31250 l
13.1035 -3.31250 l
h
14.4004 0.00000 m
13.4629 -2.40625 l
9.79102 -2.40625 l
8.83789 0.00000 l
7.68164 0.00000 l
11.1348 -8.67188 l
12.3535 -8.67188 l
15.7285 0.00000 l
14.4004 0.00000 l
h
18.6797 .218750 m
18.1068 .218750 17.3672 .0885417 16.4609 -.171875  c
16.4609 -1.39062 l
17.4297 -.932292 18.2318 -.703125 18.8672 -.703125  c
19.3464 -.703125 19.7344 -.830729 20.0312 -1.08594  c
20.3281 -1.34115 20.4766 -1.67708 20.4766 -2.09375  c
20.4766 -2.42708 20.3802 -2.71354 20.1875 -2.95312  c
19.9948 -3.19271 19.6380 -3.45833 19.1172 -3.75000  c
18.5234 -4.09375 l
17.7839 -4.52083 17.2630 -4.91927 16.9609 -5.28906  c
16.6589 -5.65885 16.5078 -6.09375 16.5078 -6.59375  c
16.5078 -7.26042 16.7500 -7.80990 17.2344 -8.24219  c
17.7188 -8.67448 18.3359 -8.89062 19.0859 -8.89062  c
19.7526 -8.89062 20.4557 -8.78125 21.1953 -8.56250  c
21.1953 -7.43750 l
20.2786 -7.79167 19.5964 -7.96875 19.1484 -7.96875  c
18.7214 -7.96875 18.3698 -7.85677 18.0938 -7.63281  c
17.8177 -7.40885 17.6797 -7.12500 17.6797 -6.78125  c
17.6797 -6.48958 17.7812 -6.23177 17.9844 -6.00781  c
18.1875 -5.78385 18.5599 -5.51562 19.1016 -5.20312  c
19.7109 -4.85938 l
20.4609 -4.43229 20.9844 -4.02865 21.2812 -3.64844  c
21.5781 -3.26823 21.7266 -2.81250 21.7266 -2.28125  c
21.7266 -1.53125 21.4505 -.927083 20.8984 -.468750  c
20.3464 -.0104167 19.6068 .218750 18.6797 .218750  c
h
29.9707 -.234375 m
28.9186 .0677083 28.0020 .218750 27.2207 .218750  c
25.8353 .218750 24.7754 -.174479 24.0410 -.960938  c
23.3066 -1.74740 22.9395 -2.87500 22.9395 -4.34375  c
22.9395 -5.78125 23.3118 -6.89844 24.0566 -7.69531  c
24.8014 -8.49219 25.8509 -8.89062 27.2051 -8.89062  c
28.0801 -8.89062 28.9967 -8.76042 29.9551 -8.50000  c
29.9551 -7.35938 l
28.7572 -7.76562 27.8405 -7.96875 27.2051 -7.96875  c
26.2676 -7.96875 25.5410 -7.65104 25.0254 -7.01562  c
24.5098 -6.38021 24.2520 -5.48438 24.2520 -4.32812  c
24.2520 -3.18229 24.5280 -2.29167 25.0801 -1.65625  c
25.6322 -1.02083 26.4082 -.703125 27.4082 -.703125  c
27.8249 -.703125 28.2676 -.776042 28.7363 -.921875  c
28.7363 -3.75000 l
29.9707 -3.75000 l
29.9707 -.234375 l
h
32.1270 0.00000 m
32.1270 -8.67188 l
34.7520 -8.67188 l
35.5853 -8.67188 36.2233 -8.48958 36.6660 -8.12500  c
37.1087 -7.76042 37.3301 -7.22396 37.3301 -6.51562  c
37.3301 -5.35938 36.7467 -4.54167 35.5801 -4.06250  c
38.4707 0.00000 l
36.9551 0.00000 l
34.4863 -3.67188 l
33.3457 -3.67188 l
33.3457 0.00000 l
32.1270 0.00000 l
h
33.3457 -4.59375 m
33.7363 -4.59375 l
35.2884 -4.59375 36.0645 -5.19792 36.0645 -6.40625  c
36.0645 -7.30208 35.4134 -7.75000 34.1113 -7.75000  c
33.3457 -7.75000 l
33.3457 -4.59375 l
h
39.7148 0.00000 m
39.7148 -8.67188 l
44.5586 -8.67188 l
44.5586 -7.75000 l
40.9336 -7.75000 l
40.9336 -4.84375 l
43.9805 -4.84375 l
43.9805 -3.93750 l
40.9336 -3.93750 l
40.9336 0.00000 l
39.7148 0.00000 l
h
46.8359 0.00000 m
46.8359 -.875000 l
48.5703 -.875000 l
48.5703 -7.71875 l
46.8359 -7.28125 l
46.8359 -8.17188 l
49.7266 -8.89062 l
49.7266 -.875000 l
51.4609 -.875000 l
51.4609 0.00000 l
46.8359 0.00000 l
h
f
[ 1.27429 0.00000 0.00000 1.27429 27.6282 96.5253 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .913725 .713725 RG
newpath
229.100 71.0000 m
229.100 82.8741 219.474 92.5000 207.600 92.5000  c
195.726 92.5000 186.100 82.8741 186.100 71.0000  c
186.100 59.1259 195.726 49.5000 207.600 49.5000  c
219.474 49.5000 229.100 59.1259 229.100 71.0000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
230.100 71.0000 m
230.100 83.4264 220.026 93.5000 207.600 93.5000  c
195.174 93.5000 185.100 83.4264 185.100 71.0000  c
185.100 58.5736 195.174 48.5000 207.600 48.5000  c
220.026 48.5000 230.100 58.5736 230.100 71.0000  c
h
229.100 71.0000 m
229.100 82.8741 219.474 92.5000 207.600 92.5000  c
195.726 92.5000 186.100 82.8741 186.100 71.0000  c
186.100 59.1259 195.726 49.5000 207.600 49.5000  c
219.474 49.5000 229.100 59.1259 229.100 71.0000  c
h
f*
207.600 71.0000 translate
1.00000 1.00000 scale
-19.3301 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.37500 -8.67188 l
4.23958 -8.67188 4.90365 -8.50781 5.36719 -8.17969  c
5.83073 -7.85156 6.06250 -7.38021 6.06250 -6.76562  c
6.06250 -5.71354 5.46875 -4.96354 4.28125 -4.51562  c
5.69792 -4.08854 6.40625 -3.30729 6.40625 -2.17188  c
6.40625 -1.46354 6.17188 -.924479 5.70312 -.554688  c
5.23438 -.184896 4.55729 0.00000 3.67188 0.00000  c
1.12500 0.00000 l
h
2.34375 -.921875 m
2.59375 -.921875 l
3.48958 -.921875 4.07292 -.979167 4.34375 -1.09375  c
4.85417 -1.30208 5.10938 -1.69792 5.10938 -2.28125  c
5.10938 -2.80208 4.87760 -3.23177 4.41406 -3.57031  c
3.95052 -3.90885 3.37500 -4.07812 2.68750 -4.07812  c
2.34375 -4.07812 l
2.34375 -.921875 l
h
2.34375 -4.85938 m
2.73438 -4.85938 l
3.39062 -4.85938 3.89844 -5.00000 4.25781 -5.28125  c
4.61719 -5.56250 4.79688 -5.95833 4.79688 -6.46875  c
4.79688 -7.32292 4.13542 -7.75000 2.81250 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.85938 l
h
8.02734 0.00000 m
8.02734 -8.67188 l
10.6523 -8.67188 l
11.4857 -8.67188 12.1237 -8.48958 12.5664 -8.12500  c
13.0091 -7.76042 13.2305 -7.22396 13.2305 -6.51562  c
13.2305 -5.35938 12.6471 -4.54167 11.4805 -4.06250  c
14.3711 0.00000 l
12.8555 0.00000 l
10.3867 -3.67188 l
9.24609 -3.67188 l
9.24609 0.00000 l
8.02734 0.00000 l
h
9.24609 -4.59375 m
9.63672 -4.59375 l
11.1888 -4.59375 11.9648 -5.19792 11.9648 -6.40625  c
11.9648 -7.30208 11.3138 -7.75000 10.0117 -7.75000  c
9.24609 -7.75000 l
9.24609 -4.59375 l
h
19.3184 .218750 m
17.9746 .218750 16.9355 -.177083 16.2012 -.968750  c
15.4668 -1.76042 15.0996 -2.88021 15.0996 -4.32812  c
15.0996 -5.77604 15.4746 -6.89844 16.2246 -7.69531  c
16.9746 -8.49219 18.0267 -8.89062 19.3809 -8.89062  c
20.1621 -8.89062 21.0736 -8.76562 22.1152 -8.51562  c
22.1152 -7.35938 l
20.9277 -7.76562 20.0111 -7.96875 19.3652 -7.96875  c
18.4277 -7.96875 17.7012 -7.65104 17.1855 -7.01562  c
16.6699 -6.38021 16.4121 -5.47917 16.4121 -4.31250  c
16.4121 -3.20833 16.6855 -2.33854 17.2324 -1.70312  c
17.7793 -1.06771 18.5319 -.750000 19.4902 -.750000  c
20.3132 -.750000 21.1934 -1.00000 22.1309 -1.50000  c
22.1309 -.453125 l
21.2767 -.00520833 20.3392 .218750 19.3184 .218750  c
h
28.3086 -3.31250 m
26.8242 -7.06250 l
25.3555 -3.31250 l
28.3086 -3.31250 l
h
29.6055 0.00000 m
28.6680 -2.40625 l
24.9961 -2.40625 l
24.0430 0.00000 l
22.8867 0.00000 l
26.3398 -8.67188 l
27.5586 -8.67188 l
30.9336 0.00000 l
29.6055 0.00000 l
h
32.8848 0.00000 m
32.8848 -.875000 l
34.6191 -.875000 l
34.6191 -7.71875 l
32.8848 -7.28125 l
32.8848 -8.17188 l
35.7754 -8.89062 l
35.7754 -.875000 l
37.5098 -.875000 l
37.5098 0.00000 l
32.8848 0.00000 l
h
f
[ 1.27429 0.00000 0.00000 1.27429 27.6282 96.5253 ] defaultmatrix matrix concatmatrix setmatrix
.894118 .192157 .200000 RG
newpath
286.881 12.8051 m
265.795 33.8909 l
244.709 12.8051 l
265.795 -8.28067 l
h
f
0.00000 0.00000 0.00000 RG
newpath
265.795 -9.69489 m
288.295 12.8051 l
265.795 35.3051 l
243.295 12.8051 l
h
286.881 12.8051 m
265.795 33.8909 l
244.709 12.8051 l
265.795 -8.28067 l
h
f*
265.795 12.8051 translate
1.00000 1.00000 scale
-14.9561 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.75000 -8.67188 l
4.58333 -8.67188 5.22135 -8.48958 5.66406 -8.12500  c
6.10677 -7.76042 6.32812 -7.22396 6.32812 -6.51562  c
6.32812 -5.35938 5.74479 -4.54167 4.57812 -4.06250  c
7.46875 0.00000 l
5.95312 0.00000 l
3.48438 -3.67188 l
2.34375 -3.67188 l
2.34375 0.00000 l
1.12500 0.00000 l
h
2.34375 -4.59375 m
2.73438 -4.59375 l
4.28646 -4.59375 5.06250 -5.19792 5.06250 -6.40625  c
5.06250 -7.30208 4.41146 -7.75000 3.10938 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.59375 l
h
8.71289 0.00000 m
8.71289 -8.67188 l
13.5566 -8.67188 l
13.5566 -7.75000 l
9.93164 -7.75000 l
9.93164 -4.84375 l
12.9785 -4.84375 l
12.9785 -3.93750 l
9.93164 -3.93750 l
9.93164 0.00000 l
8.71289 0.00000 l
h
18.8496 .218750 m
17.5059 .218750 16.4668 -.177083 15.7324 -.968750  c
14.9980 -1.76042 14.6309 -2.88021 14.6309 -4.32812  c
14.6309 -5.77604 15.0059 -6.89844 15.7559 -7.69531  c
16.5059 -8.49219 17.5579 -8.89062 18.9121 -8.89062  c
19.6934 -8.89062 20.6048 -8.76562 21.6465 -8.51562  c
21.6465 -7.35938 l
20.4590 -7.76562 19.5423 -7.96875 18.8965 -7.96875  c
17.9590 -7.96875 17.2324 -7.65104 16.7168 -7.01562  c
16.2012 -6.38021 15.9434 -5.47917 15.9434 -4.31250  c
15.9434 -3.20833 16.2168 -2.33854 16.7637 -1.70312  c
17.3105 -1.06771 18.0632 -.750000 19.0215 -.750000  c
19.8444 -.750000 20.7246 -1.00000 21.6621 -1.50000  c
21.6621 -.453125 l
20.8079 -.00520833 19.8704 .218750 18.8496 .218750  c
h
26.8398 0.00000 m
26.8398 -2.45312 l
22.9336 -2.45312 l
22.9336 -3.32812 l
26.8398 -8.67188 l
27.9336 -8.67188 l
27.9336 -3.40625 l
29.0898 -3.40625 l
29.0898 -2.45312 l
27.9336 -2.45312 l
27.9336 0.00000 l
26.8398 0.00000 l
h
24.0742 -3.40625 m
26.9180 -3.40625 l
26.9180 -7.25000 l
24.0742 -3.40625 l
h
f
[ 1.27429 0.00000 0.00000 1.27429 27.6282 96.5253 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .643137 .443137 RG
newpath
287.295 129.195 m
287.295 141.069 277.669 150.695 265.795 150.695  c
253.921 150.695 244.295 141.069 244.295 129.195  c
244.295 117.321 253.921 107.695 265.795 107.695  c
277.669 107.695 287.295 117.321 287.295 129.195  c
h
f
0.00000 0.00000 0.00000 RG
newpath
288.295 129.195 m
288.295 141.621 278.221 151.695 265.795 151.695  c
253.368 151.695 243.295 141.621 243.295 129.195  c
243.295 116.768 253.368 106.695 265.795 106.695  c
278.221 106.695 288.295 116.768 288.295 129.195  c
h
287.295 129.195 m
287.295 141.069 277.669 150.695 265.795 150.695  c
253.921 150.695 244.295 141.069 244.295 129.195  c
244.295 117.321 253.921 107.695 265.795 107.695  c
277.669 107.695 287.295 117.321 287.295 129.195  c
h
f*
265.795 129.195 translate
1.00000 1.00000 scale
-14.7012 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.37500 -8.67188 l
4.23958 -8.67188 4.90365 -8.50781 5.36719 -8.17969  c
5.83073 -7.85156 6.06250 -7.38021 6.06250 -6.76562  c
6.06250 -5.71354 5.46875 -4.96354 4.28125 -4.51562  c
5.69792 -4.08854 6.40625 -3.30729 6.40625 -2.17188  c
6.40625 -1.46354 6.17188 -.924479 5.70312 -.554688  c
5.23438 -.184896 4.55729 0.00000 3.67188 0.00000  c
1.12500 0.00000 l
h
2.34375 -.921875 m
2.59375 -.921875 l
3.48958 -.921875 4.07292 -.979167 4.34375 -1.09375  c
4.85417 -1.30208 5.10938 -1.69792 5.10938 -2.28125  c
5.10938 -2.80208 4.87760 -3.23177 4.41406 -3.57031  c
3.95052 -3.90885 3.37500 -4.07812 2.68750 -4.07812  c
2.34375 -4.07812 l
2.34375 -.921875 l
h
2.34375 -4.85938 m
2.73438 -4.85938 l
3.39062 -4.85938 3.89844 -5.00000 4.25781 -5.28125  c
4.61719 -5.56250 4.79688 -5.95833 4.79688 -6.46875  c
4.79688 -7.32292 4.13542 -7.75000 2.81250 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.85938 l
h
8.02734 0.00000 m
8.02734 -8.67188 l
10.6523 -8.67188 l
11.4857 -8.67188 12.1237 -8.48958 12.5664 -8.12500  c
13.0091 -7.76042 13.2305 -7.22396 13.2305 -6.51562  c
13.2305 -5.35938 12.6471 -4.54167 11.4805 -4.06250  c
14.3711 0.00000 l
12.8555 0.00000 l
10.3867 -3.67188 l
9.24609 -3.67188 l
9.24609 0.00000 l
8.02734 0.00000 l
h
9.24609 -4.59375 m
9.63672 -4.59375 l
11.1888 -4.59375 11.9648 -5.19792 11.9648 -6.40625  c
11.9648 -7.30208 11.3138 -7.75000 10.0117 -7.75000  c
9.24609 -7.75000 l
9.24609 -4.59375 l
h
20.0059 -3.31250 m
18.5215 -7.06250 l
17.0527 -3.31250 l
20.0059 -3.31250 l
h
21.3027 0.00000 m
20.3652 -2.40625 l
16.6934 -2.40625 l
15.7402 0.00000 l
14.5840 0.00000 l
18.0371 -8.67188 l
19.2559 -8.67188 l
22.6309 0.00000 l
21.3027 0.00000 l
h
23.8945 0.00000 m
23.8945 -8.67188 l
26.2539 -8.67188 l
27.2956 -8.67188 28.0456 -8.49479 28.5039 -8.14062  c
28.9622 -7.78646 29.1914 -7.20833 29.1914 -6.40625  c
29.1914 -5.47917 28.8789 -4.75521 28.2539 -4.23438  c
27.6289 -3.71354 26.7643 -3.45312 25.6602 -3.45312  c
25.1133 -3.45312 l
25.1133 0.00000 l
23.8945 0.00000 l
h
25.1133 -4.37500 m
25.6133 -4.37500 l
26.3424 -4.37500 26.9049 -4.54427 27.3008 -4.88281  c
27.6966 -5.22135 27.8945 -5.69792 27.8945 -6.31250  c
27.8945 -6.82292 27.7383 -7.19010 27.4258 -7.41406  c
27.1133 -7.63802 26.5924 -7.75000 25.8633 -7.75000  c
25.1133 -7.75000 l
25.1133 -4.37500 l
h
f
[ 1.27429 0.00000 0.00000 1.27429 27.6282 96.5253 ] defaultmatrix matrix concatmatrix setmatrix
.996078 .392157 .200000 RG
newpath
64.0858 71.0000 m
43.0000 92.0858 l
21.9142 71.0000 l
43.0000 49.9142 l
h
f
0.00000 0.00000 0.00000 RG
newpath
43.0000 48.5000 m
65.5000 71.0000 l
43.0000 93.5000 l
20.5000 71.0000 l
h
64.0858 71.0000 m
43.0000 92.0858 l
21.9142 71.0000 l
43.0000 49.9142 l
h
f*
43.0000 71.0000 translate
1.00000 1.00000 scale
-19.5234 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
9.42773 0.00000 m
9.42773 -8.67188 l
10.6465 -8.67188 l
10.6465 -5.01562 l
14.7715 -5.01562 l
14.7715 -8.67188 l
16.0059 -8.67188 l
16.0059 0.00000 l
14.7715 0.00000 l
14.7715 -4.09375 l
10.6465 -4.09375 l
10.6465 0.00000 l
9.42773 0.00000 l
h
18.2461 0.00000 m
18.2461 -8.67188 l
23.0898 -8.67188 l
23.0898 -7.75000 l
19.4648 -7.75000 l
19.4648 -4.96875 l
22.4961 -4.96875 l
22.4961 -4.06250 l
19.4648 -4.06250 l
19.4648 -.921875 l
23.3398 -.921875 l
23.3398 0.00000 l
18.2461 0.00000 l
h
24.7500 0.00000 m
24.7500 -8.67188 l
25.9062 -8.67188 l
25.9062 -4.40625 l
29.4062 -8.67188 l
30.6406 -8.67188 l
27.2500 -4.53125 l
31.2500 0.00000 l
29.6875 0.00000 l
25.9062 -4.39062 l
25.9062 0.00000 l
24.7500 0.00000 l
h
33.2715 0.00000 m
33.2715 -.875000 l
35.0059 -.875000 l
35.0059 -7.71875 l
33.2715 -7.28125 l
33.2715 -8.17188 l
36.1621 -8.89062 l
36.1621 -.875000 l
37.8965 -.875000 l
37.8965 0.00000 l
33.2715 0.00000 l
h
f
[ 1.27429 0.00000 0.00000 1.27429 27.6282 96.5253 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
146.800 71.0000 m
146.800 82.8741 137.174 92.5000 125.300 92.5000  c
113.426 92.5000 103.800 82.8741 103.800 71.0000  c
103.800 59.1259 113.426 49.5000 125.300 49.5000  c
137.174 49.5000 146.800 59.1259 146.800 71.0000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
147.800 71.0000 m
147.800 83.4264 137.726 93.5000 125.300 93.5000  c
112.874 93.5000 102.800 83.4264 102.800 71.0000  c
102.800 58.5736 112.874 48.5000 125.300 48.5000  c
137.726 48.5000 147.800 58.5736 147.800 71.0000  c
h
146.800 71.0000 m
146.800 82.8741 137.174 92.5000 125.300 92.5000  c
113.426 92.5000 103.800 82.8741 103.800 71.0000  c
103.800 59.1259 113.426 49.5000 125.300 49.5000  c
137.174 49.5000 146.800 59.1259 146.800 71.0000  c
h
f*
125.300 71.0000 translate
1.00000 1.00000 scale
-18.3311 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
9.42773 0.00000 m
9.42773 -8.67188 l
10.6465 -8.67188 l
10.6465 -.921875 l
14.5527 -.921875 l
14.5527 0.00000 l
9.42773 0.00000 l
h
17.5137 .218750 m
16.9408 .218750 16.2012 .0885417 15.2949 -.171875  c
15.2949 -1.39062 l
16.2637 -.932292 17.0658 -.703125 17.7012 -.703125  c
18.1803 -.703125 18.5684 -.830729 18.8652 -1.08594  c
19.1621 -1.34115 19.3105 -1.67708 19.3105 -2.09375  c
19.3105 -2.42708 19.2142 -2.71354 19.0215 -2.95312  c
18.8288 -3.19271 18.4720 -3.45833 17.9512 -3.75000  c
17.3574 -4.09375 l
16.6178 -4.52083 16.0970 -4.91927 15.7949 -5.28906  c
15.4928 -5.65885 15.3418 -6.09375 15.3418 -6.59375  c
15.3418 -7.26042 15.5840 -7.80990 16.0684 -8.24219  c
16.5527 -8.67448 17.1699 -8.89062 17.9199 -8.89062  c
18.5866 -8.89062 19.2897 -8.78125 20.0293 -8.56250  c
20.0293 -7.43750 l
19.1126 -7.79167 18.4303 -7.96875 17.9824 -7.96875  c
17.5553 -7.96875 17.2038 -7.85677 16.9277 -7.63281  c
16.6517 -7.40885 16.5137 -7.12500 16.5137 -6.78125  c
16.5137 -6.48958 16.6152 -6.23177 16.8184 -6.00781  c
17.0215 -5.78385 17.3939 -5.51562 17.9355 -5.20312  c
18.5449 -4.85938 l
19.2949 -4.43229 19.8184 -4.02865 20.1152 -3.64844  c
20.4121 -3.26823 20.5605 -2.81250 20.5605 -2.28125  c
20.5605 -1.53125 20.2845 -.927083 19.7324 -.468750  c
19.1803 -.0104167 18.4408 .218750 17.5137 .218750  c
h
22.2891 0.00000 m
22.2891 -8.67188 l
24.6484 -8.67188 l
25.6901 -8.67188 26.4401 -8.49479 26.8984 -8.14062  c
27.3568 -7.78646 27.5859 -7.20833 27.5859 -6.40625  c
27.5859 -5.47917 27.2734 -4.75521 26.6484 -4.23438  c
26.0234 -3.71354 25.1589 -3.45312 24.0547 -3.45312  c
23.5078 -3.45312 l
23.5078 0.00000 l
22.2891 0.00000 l
h
23.5078 -4.37500 m
24.0078 -4.37500 l
24.7370 -4.37500 25.2995 -4.54427 25.6953 -4.88281  c
26.0911 -5.22135 26.2891 -5.69792 26.2891 -6.31250  c
26.2891 -6.82292 26.1328 -7.19010 25.8203 -7.41406  c
25.5078 -7.63802 24.9870 -7.75000 24.2578 -7.75000  c
23.5078 -7.75000 l
23.5078 -4.37500 l
h
28.9219 0.00000 m
28.9219 -8.67188 l
30.1250 -8.67188 l
34.4844 -1.96875 l
34.4844 -8.67188 l
35.5469 -8.67188 l
35.5469 0.00000 l
34.3438 0.00000 l
29.9688 -6.70312 l
29.9688 0.00000 l
28.9219 0.00000 l
h
f
[ 1.27429 0.00000 0.00000 1.27429 27.6282 96.5253 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
