%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 48 575 743
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.26 
%%For: 
%%Title: 
%%CreationDate: Friday, March 23, 2007 11:07:01 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
2 J
0 j
10.0000 M
[ ] 0.00000 d
1.00000 1.00000 1.00000 RG
0.00000 0.00000 400.000 500.000 rf
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 395.000 374.000 rf
0.00000 w
1 J
1 j
[ 1.06465 0.00000 0.00000 1.06465 134.840 22.9008 ] concat
1.00000 w
0.00000 0.00000 1.00000 RG
newpath
46.5825 48.9439 m
16.2339 17.2426 l
S
newpath
69.0825 49.4343 m
100.784 19.0857 l
S
newpath
56.2737 120.700 m
57.1073 82.4591 l
S
newpath
54.4800 202.980 m
55.3136 164.740 l
S
newpath
53.5200 247.020 m
52.6864 285.260 l
S
.956863 .313725 .200000 RG
newpath
78.6731 60.4391 m
57.5873 81.5249 l
36.5015 60.4391 l
57.5873 39.3533 l
h
f
0.00000 0.00000 0.00000 RG
newpath
57.5873 37.9391 m
80.0873 60.4391 l
57.5873 82.9391 l
35.0873 60.4391 l
h
78.6731 60.4391 m
57.5873 81.5249 l
36.5015 60.4391 l
57.5873 39.3533 l
h
f*
57.5873 60.4391 translate
1.00000 1.00000 scale
-15.2959 4.42090 translate
newpath
4.82812 .218750 m
3.48438 .218750 2.44531 -.177083 1.71094 -.968750  c
.976562 -1.76042 .609375 -2.88021 .609375 -4.32812  c
.609375 -5.77604 .984375 -6.89844 1.73438 -7.69531  c
2.48438 -8.49219 3.53646 -8.89062 4.89062 -8.89062  c
5.67188 -8.89062 6.58333 -8.76562 7.62500 -8.51562  c
7.62500 -7.35938 l
6.43750 -7.76562 5.52083 -7.96875 4.87500 -7.96875  c
3.93750 -7.96875 3.21094 -7.65104 2.69531 -7.01562  c
2.17969 -6.38021 1.92188 -5.47917 1.92188 -4.31250  c
1.92188 -3.20833 2.19531 -2.33854 2.74219 -1.70312  c
3.28906 -1.06771 4.04167 -.750000 5.00000 -.750000  c
5.82292 -.750000 6.70312 -1.00000 7.64062 -1.50000  c
7.64062 -.453125 l
6.78646 -.00520833 5.84896 .218750 4.82812 .218750  c
h
9.42773 0.00000 m
9.42773 -8.67188 l
10.6465 -8.67188 l
10.6465 -.921875 l
14.5527 -.921875 l
14.5527 0.00000 l
9.42773 0.00000 l
h
17.8887 0.00000 m
17.8887 -7.75000 l
14.8105 -7.75000 l
14.8105 -8.67188 l
22.1855 -8.67188 l
22.1855 -7.75000 l
19.1074 -7.75000 l
19.1074 0.00000 l
17.8887 0.00000 l
h
27.1172 .218750 m
25.7734 .218750 24.7344 -.177083 24.0000 -.968750  c
23.2656 -1.76042 22.8984 -2.88021 22.8984 -4.32812  c
22.8984 -5.77604 23.2734 -6.89844 24.0234 -7.69531  c
24.7734 -8.49219 25.8255 -8.89062 27.1797 -8.89062  c
27.9609 -8.89062 28.8724 -8.76562 29.9141 -8.51562  c
29.9141 -7.35938 l
28.7266 -7.76562 27.8099 -7.96875 27.1641 -7.96875  c
26.2266 -7.96875 25.5000 -7.65104 24.9844 -7.01562  c
24.4688 -6.38021 24.2109 -5.47917 24.2109 -4.31250  c
24.2109 -3.20833 24.4844 -2.33854 25.0312 -1.70312  c
25.5781 -1.06771 26.3307 -.750000 27.2891 -.750000  c
28.1120 -.750000 28.9922 -1.00000 29.9297 -1.50000  c
29.9297 -.453125 l
29.0755 -.00520833 28.1380 .218750 27.1172 .218750  c
h
f
[ 1.06465 0.00000 0.00000 1.06465 134.840 22.9008 ] defaultmatrix matrix concatmatrix setmatrix
.968627 .337255 .200000 RG
newpath
76.8794 142.720 m
55.7936 163.805 l
34.7079 142.720 l
55.7936 121.634 l
h
f
0.00000 0.00000 0.00000 RG
newpath
55.7936 120.220 m
78.2936 142.720 l
55.7936 165.220 l
33.2936 142.720 l
h
76.8794 142.720 m
55.7936 163.805 l
34.7079 142.720 l
55.7936 121.634 l
h
f*
55.7936 142.720 translate
1.00000 1.00000 scale
-18.4951 4.42090 translate
newpath
5.51562 -3.31250 m
4.03125 -7.06250 l
2.56250 -3.31250 l
5.51562 -3.31250 l
h
6.81250 0.00000 m
5.87500 -2.40625 l
2.20312 -2.40625 l
1.25000 0.00000 l
.0937500 0.00000 l
3.54688 -8.67188 l
4.76562 -8.67188 l
8.14062 0.00000 l
6.81250 0.00000 l
h
9.40430 0.00000 m
9.40430 -8.67188 l
11.7637 -8.67188 l
12.8053 -8.67188 13.5553 -8.49479 14.0137 -8.14062  c
14.4720 -7.78646 14.7012 -7.20833 14.7012 -6.40625  c
14.7012 -5.47917 14.3887 -4.75521 13.7637 -4.23438  c
13.1387 -3.71354 12.2741 -3.45312 11.1699 -3.45312  c
10.6230 -3.45312 l
10.6230 0.00000 l
9.40430 0.00000 l
h
10.6230 -4.37500 m
11.1230 -4.37500 l
11.8522 -4.37500 12.4147 -4.54427 12.8105 -4.88281  c
13.2064 -5.22135 13.4043 -5.69792 13.4043 -6.31250  c
13.4043 -6.82292 13.2480 -7.19010 12.9355 -7.41406  c
12.6230 -7.63802 12.1022 -7.75000 11.3730 -7.75000  c
10.6230 -7.75000 l
10.6230 -4.37500 l
h
16.7246 0.00000 m
16.7246 -.875000 l
18.4590 -.875000 l
18.4590 -7.71875 l
16.7246 -7.28125 l
16.7246 -8.17188 l
19.6152 -8.89062 l
19.6152 -.875000 l
21.3496 -.875000 l
21.3496 0.00000 l
16.7246 0.00000 l
h
23.6250 0.00000 m
23.6250 -8.67188 l
25.8750 -8.67188 l
26.7396 -8.67188 27.4036 -8.50781 27.8672 -8.17969  c
28.3307 -7.85156 28.5625 -7.38021 28.5625 -6.76562  c
28.5625 -5.71354 27.9688 -4.96354 26.7812 -4.51562  c
28.1979 -4.08854 28.9062 -3.30729 28.9062 -2.17188  c
28.9062 -1.46354 28.6719 -.924479 28.2031 -.554688  c
27.7344 -.184896 27.0573 0.00000 26.1719 0.00000  c
23.6250 0.00000 l
h
24.8438 -.921875 m
25.0938 -.921875 l
25.9896 -.921875 26.5729 -.979167 26.8438 -1.09375  c
27.3542 -1.30208 27.6094 -1.69792 27.6094 -2.28125  c
27.6094 -2.80208 27.3776 -3.23177 26.9141 -3.57031  c
26.4505 -3.90885 25.8750 -4.07812 25.1875 -4.07812  c
24.8438 -4.07812 l
24.8438 -.921875 l
h
24.8438 -4.85938 m
25.2344 -4.85938 l
25.8906 -4.85938 26.3984 -5.00000 26.7578 -5.28125  c
27.1172 -5.56250 27.2969 -5.95833 27.2969 -6.46875  c
27.2969 -7.32292 26.6354 -7.75000 25.3125 -7.75000  c
24.8438 -7.75000 l
24.8438 -4.85938 l
h
31.2148 0.00000 m
31.2148 -.875000 l
32.9492 -.875000 l
32.9492 -7.71875 l
31.2148 -7.28125 l
31.2148 -8.17188 l
34.1055 -8.89062 l
34.1055 -.875000 l
35.8398 -.875000 l
35.8398 0.00000 l
31.2148 0.00000 l
h
f
[ 1.06465 0.00000 0.00000 1.06465 134.840 22.9008 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .749020 .549020 RG
newpath
138.537 3.52632 m
138.537 15.4004 128.911 25.0263 117.037 25.0263  c
105.163 25.0263 95.5366 15.4004 95.5366 3.52632  c
95.5366 -8.34780 105.163 -17.9737 117.037 -17.9737  c
128.911 -17.9737 138.537 -8.34780 138.537 3.52632  c
h
f
0.00000 0.00000 0.00000 RG
newpath
139.537 3.52632 m
139.537 15.9527 129.463 26.0263 117.037 26.0263  c
104.610 26.0263 94.5366 15.9527 94.5366 3.52632  c
94.5366 -8.90009 104.610 -18.9737 117.037 -18.9737  c
129.463 -18.9737 139.537 -8.90009 139.537 3.52632  c
h
138.537 3.52632 m
138.537 15.4004 128.911 25.0263 117.037 25.0263  c
105.163 25.0263 95.5366 15.4004 95.5366 3.52632  c
95.5366 -8.34780 105.163 -17.9737 117.037 -17.9737  c
128.911 -17.9737 138.537 -8.34780 138.537 3.52632  c
h
f*
117.037 3.52632 translate
1.00000 1.00000 scale
-19.1016 4.42090 translate
newpath
1.04688 -8.67188 m
2.28125 -8.67188 l
2.28125 -3.20312 l
2.28125 -2.32812 2.44271 -1.69271 2.76562 -1.29688  c
3.08854 -.901042 3.59896 -.703125 4.29688 -.703125  c
4.98438 -.703125 5.47135 -.890625 5.75781 -1.26562  c
6.04427 -1.64062 6.18750 -2.27083 6.18750 -3.15625  c
6.18750 -8.67188 l
7.26562 -8.67188 l
7.26562 -3.17188 l
7.26562 -1.99479 7.02344 -1.13542 6.53906 -.593750  c
6.05469 -.0520833 5.28125 .218750 4.21875 .218750  c
3.13542 .218750 2.33594 -.0598958 1.82031 -.617188  c
1.30469 -1.17448 1.04688 -2.04167 1.04688 -3.21875  c
1.04688 -8.67188 l
h
9.31445 0.00000 m
9.31445 -1.01562 l
9.64779 -1.79688 10.3249 -2.65104 11.3457 -3.57812  c
12.0176 -4.17188 l
12.8613 -4.94271 13.2832 -5.70833 13.2832 -6.46875  c
13.2832 -6.94792 13.1400 -7.32552 12.8535 -7.60156  c
12.5671 -7.87760 12.1686 -8.01562 11.6582 -8.01562  c
11.0540 -8.01562 10.3457 -7.78646 9.53320 -7.32812  c
9.53320 -8.34375 l
10.3040 -8.70833 11.0645 -8.89062 11.8145 -8.89062  c
12.6270 -8.89062 13.2806 -8.67188 13.7754 -8.23438  c
14.2702 -7.79688 14.5176 -7.21875 14.5176 -6.50000  c
14.5176 -5.97917 14.3926 -5.51562 14.1426 -5.10938  c
13.8926 -4.70312 13.4290 -4.21354 12.7520 -3.64062  c
12.3145 -3.26562 l
11.3874 -2.48438 10.8509 -1.73438 10.7051 -1.01562  c
14.4707 -1.01562 l
14.4707 0.00000 l
9.31445 0.00000 l
h
21.4180 -3.31250 m
19.9336 -7.06250 l
18.4648 -3.31250 l
21.4180 -3.31250 l
h
22.7148 0.00000 m
21.7773 -2.40625 l
18.1055 -2.40625 l
17.1523 0.00000 l
15.9961 0.00000 l
19.4492 -8.67188 l
20.6680 -8.67188 l
24.0430 0.00000 l
22.7148 0.00000 l
h
25.3066 0.00000 m
25.3066 -8.67188 l
30.1504 -8.67188 l
30.1504 -7.75000 l
26.5254 -7.75000 l
26.5254 -4.84375 l
29.5723 -4.84375 l
29.5723 -3.93750 l
26.5254 -3.93750 l
26.5254 0.00000 l
25.3066 0.00000 l
h
31.6152 0.00000 m
31.6152 -1.01562 l
31.9486 -1.79688 32.6257 -2.65104 33.6465 -3.57812  c
34.3184 -4.17188 l
35.1621 -4.94271 35.5840 -5.70833 35.5840 -6.46875  c
35.5840 -6.94792 35.4408 -7.32552 35.1543 -7.60156  c
34.8678 -7.87760 34.4694 -8.01562 33.9590 -8.01562  c
33.3548 -8.01562 32.6465 -7.78646 31.8340 -7.32812  c
31.8340 -8.34375 l
32.6048 -8.70833 33.3652 -8.89062 34.1152 -8.89062  c
34.9277 -8.89062 35.5814 -8.67188 36.0762 -8.23438  c
36.5710 -7.79688 36.8184 -7.21875 36.8184 -6.50000  c
36.8184 -5.97917 36.6934 -5.51562 36.4434 -5.10938  c
36.1934 -4.70312 35.7298 -4.21354 35.0527 -3.64062  c
34.6152 -3.26562 l
33.6882 -2.48438 33.1517 -1.73438 33.0059 -1.01562  c
36.7715 -1.01562 l
36.7715 0.00000 l
31.6152 0.00000 l
h
f
[ 1.06465 0.00000 0.00000 1.06465 134.840 22.9008 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 .435294 .235294 RG
newpath
22.1745 .989737 m
22.1745 12.8639 12.5486 22.4897 .674500 22.4897  c
-11.1996 22.4897 -20.8255 12.8639 -20.8255 .989737  c
-20.8255 -10.8844 -11.1996 -20.5103 .674500 -20.5103  c
12.5486 -20.5103 22.1745 -10.8844 22.1745 .989737  c
h
f
0.00000 0.00000 0.00000 RG
newpath
23.1745 .989737 m
23.1745 13.4161 13.1009 23.4897 .674500 23.4897  c
-11.7519 23.4897 -21.8255 13.4161 -21.8255 .989737  c
-21.8255 -11.4367 -11.7519 -21.5103 .674500 -21.5103  c
13.1009 -21.5103 23.1745 -11.4367 23.1745 .989737  c
h
22.1745 .989737 m
22.1745 12.8639 12.5486 22.4897 .674500 22.4897  c
-11.1996 22.4897 -20.8255 12.8639 -20.8255 .989737  c
-20.8255 -10.8844 -11.1996 -20.5103 .674500 -20.5103  c
12.5486 -20.5103 22.1745 -10.8844 22.1745 .989737  c
h
f*
.674500 .989737 translate
1.00000 1.00000 scale
-18.4951 4.42090 translate
newpath
5.51562 -3.31250 m
4.03125 -7.06250 l
2.56250 -3.31250 l
5.51562 -3.31250 l
h
6.81250 0.00000 m
5.87500 -2.40625 l
2.20312 -2.40625 l
1.25000 0.00000 l
.0937500 0.00000 l
3.54688 -8.67188 l
4.76562 -8.67188 l
8.14062 0.00000 l
6.81250 0.00000 l
h
9.40430 0.00000 m
9.40430 -8.67188 l
11.7637 -8.67188 l
12.8053 -8.67188 13.5553 -8.49479 14.0137 -8.14062  c
14.4720 -7.78646 14.7012 -7.20833 14.7012 -6.40625  c
14.7012 -5.47917 14.3887 -4.75521 13.7637 -4.23438  c
13.1387 -3.71354 12.2741 -3.45312 11.1699 -3.45312  c
10.6230 -3.45312 l
10.6230 0.00000 l
9.40430 0.00000 l
h
10.6230 -4.37500 m
11.1230 -4.37500 l
11.8522 -4.37500 12.4147 -4.54427 12.8105 -4.88281  c
13.2064 -5.22135 13.4043 -5.69792 13.4043 -6.31250  c
13.4043 -6.82292 13.2480 -7.19010 12.9355 -7.41406  c
12.6230 -7.63802 12.1022 -7.75000 11.3730 -7.75000  c
10.6230 -7.75000 l
10.6230 -4.37500 l
h
16.1309 -.0625000 m
16.1309 -1.14062 l
16.9642 -.817708 17.6152 -.656250 18.0840 -.656250  c
18.6361 -.656250 19.0866 -.817708 19.4355 -1.14062  c
19.7845 -1.46354 19.9590 -1.88021 19.9590 -2.39062  c
19.9590 -3.60938 19.1048 -4.21875 17.3965 -4.21875  c
16.9277 -4.21875 l
16.9277 -5.00000 l
17.3340 -5.00000 l
18.9382 -5.00000 19.7402 -5.56250 19.7402 -6.68750  c
19.7402 -7.57292 19.2142 -8.01562 18.1621 -8.01562  c
17.5788 -8.01562 16.9434 -7.85417 16.2559 -7.53125  c
16.2559 -8.54688 l
16.9329 -8.77604 17.5944 -8.89062 18.2402 -8.89062  c
20.0111 -8.89062 20.8965 -8.21875 20.8965 -6.87500  c
20.8965 -5.85417 20.2923 -5.13021 19.0840 -4.70312  c
20.4902 -4.38021 21.1934 -3.61458 21.1934 -2.40625  c
21.1934 -1.58333 20.9225 -.940104 20.3809 -.476562  c
19.8392 -.0130208 19.0996 .218750 18.1621 .218750  c
17.6204 .218750 16.9434 .125000 16.1309 -.0625000  c
h
23.6250 0.00000 m
23.6250 -8.67188 l
25.8750 -8.67188 l
26.7396 -8.67188 27.4036 -8.50781 27.8672 -8.17969  c
28.3307 -7.85156 28.5625 -7.38021 28.5625 -6.76562  c
28.5625 -5.71354 27.9688 -4.96354 26.7812 -4.51562  c
28.1979 -4.08854 28.9062 -3.30729 28.9062 -2.17188  c
28.9062 -1.46354 28.6719 -.924479 28.2031 -.554688  c
27.7344 -.184896 27.0573 0.00000 26.1719 0.00000  c
23.6250 0.00000 l
h
24.8438 -.921875 m
25.0938 -.921875 l
25.9896 -.921875 26.5729 -.979167 26.8438 -1.09375  c
27.3542 -1.30208 27.6094 -1.69792 27.6094 -2.28125  c
27.6094 -2.80208 27.3776 -3.23177 26.9141 -3.57031  c
26.4505 -3.90885 25.8750 -4.07812 25.1875 -4.07812  c
24.8438 -4.07812 l
24.8438 -.921875 l
h
24.8438 -4.85938 m
25.2344 -4.85938 l
25.8906 -4.85938 26.3984 -5.00000 26.7578 -5.28125  c
27.1172 -5.56250 27.2969 -5.95833 27.2969 -6.46875  c
27.2969 -7.32292 26.6354 -7.75000 25.3125 -7.75000  c
24.8438 -7.75000 l
24.8438 -4.85938 l
h
30.4023 0.00000 m
30.4023 -1.01562 l
30.7357 -1.79688 31.4128 -2.65104 32.4336 -3.57812  c
33.1055 -4.17188 l
33.9492 -4.94271 34.3711 -5.70833 34.3711 -6.46875  c
34.3711 -6.94792 34.2279 -7.32552 33.9414 -7.60156  c
33.6549 -7.87760 33.2565 -8.01562 32.7461 -8.01562  c
32.1419 -8.01562 31.4336 -7.78646 30.6211 -7.32812  c
30.6211 -8.34375 l
31.3919 -8.70833 32.1523 -8.89062 32.9023 -8.89062  c
33.7148 -8.89062 34.3685 -8.67188 34.8633 -8.23438  c
35.3581 -7.79688 35.6055 -7.21875 35.6055 -6.50000  c
35.6055 -5.97917 35.4805 -5.51562 35.2305 -5.10938  c
34.9805 -4.70312 34.5169 -4.21354 33.8398 -3.64062  c
33.4023 -3.26562 l
32.4753 -2.48438 31.9388 -1.73438 31.7930 -1.01562  c
35.5586 -1.01562 l
35.5586 0.00000 l
30.4023 0.00000 l
h
f
[ 1.06465 0.00000 0.00000 1.06465 134.840 22.9008 ] defaultmatrix matrix concatmatrix setmatrix
.894118 .188235 .200000 RG
newpath
75.0858 225.000 m
54.0000 246.086 l
32.9142 225.000 l
54.0000 203.914 l
h
f
0.00000 0.00000 0.00000 RG
newpath
54.0000 202.500 m
76.5000 225.000 l
54.0000 247.500 l
31.5000 225.000 l
h
75.0858 225.000 m
54.0000 246.086 l
32.9142 225.000 l
54.0000 203.914 l
h
f*
54.0000 225.000 translate
1.00000 1.00000 scale
-18.3047 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
3.37500 -8.67188 l
4.23958 -8.67188 4.90365 -8.50781 5.36719 -8.17969  c
5.83073 -7.85156 6.06250 -7.38021 6.06250 -6.76562  c
6.06250 -5.71354 5.46875 -4.96354 4.28125 -4.51562  c
5.69792 -4.08854 6.40625 -3.30729 6.40625 -2.17188  c
6.40625 -1.46354 6.17188 -.924479 5.70312 -.554688  c
5.23438 -.184896 4.55729 0.00000 3.67188 0.00000  c
1.12500 0.00000 l
h
2.34375 -.921875 m
2.59375 -.921875 l
3.48958 -.921875 4.07292 -.979167 4.34375 -1.09375  c
4.85417 -1.30208 5.10938 -1.69792 5.10938 -2.28125  c
5.10938 -2.80208 4.87760 -3.23177 4.41406 -3.57031  c
3.95052 -3.90885 3.37500 -4.07812 2.68750 -4.07812  c
2.34375 -4.07812 l
2.34375 -.921875 l
h
2.34375 -4.85938 m
2.73438 -4.85938 l
3.39062 -4.85938 3.89844 -5.00000 4.25781 -5.28125  c
4.61719 -5.56250 4.79688 -5.95833 4.79688 -6.46875  c
4.79688 -7.32292 4.13542 -7.75000 2.81250 -7.75000  c
2.34375 -7.75000 l
2.34375 -4.85938 l
h
7.94922 -8.67188 m
9.18359 -8.67188 l
9.18359 -3.20312 l
9.18359 -2.32812 9.34505 -1.69271 9.66797 -1.29688  c
9.99089 -.901042 10.5013 -.703125 11.1992 -.703125  c
11.8867 -.703125 12.3737 -.890625 12.6602 -1.26562  c
12.9466 -1.64062 13.0898 -2.27083 13.0898 -3.15625  c
13.0898 -8.67188 l
14.1680 -8.67188 l
14.1680 -3.17188 l
14.1680 -1.99479 13.9258 -1.13542 13.4414 -.593750  c
12.9570 -.0520833 12.1836 .218750 11.1211 .218750  c
10.0378 .218750 9.23828 -.0598958 8.72266 -.617188  c
8.20703 -1.17448 7.94922 -2.04167 7.94922 -3.21875  c
7.94922 -8.67188 l
h
16.3418 0.00000 m
16.3418 -8.67188 l
18.5918 -8.67188 l
19.4564 -8.67188 20.1204 -8.50781 20.5840 -8.17969  c
21.0475 -7.85156 21.2793 -7.38021 21.2793 -6.76562  c
21.2793 -5.71354 20.6855 -4.96354 19.4980 -4.51562  c
20.9147 -4.08854 21.6230 -3.30729 21.6230 -2.17188  c
21.6230 -1.46354 21.3887 -.924479 20.9199 -.554688  c
20.4512 -.184896 19.7741 0.00000 18.8887 0.00000  c
16.3418 0.00000 l
h
17.5605 -.921875 m
17.8105 -.921875 l
18.7064 -.921875 19.2897 -.979167 19.5605 -1.09375  c
20.0710 -1.30208 20.3262 -1.69792 20.3262 -2.28125  c
20.3262 -2.80208 20.0944 -3.23177 19.6309 -3.57031  c
19.1673 -3.90885 18.5918 -4.07812 17.9043 -4.07812  c
17.5605 -4.07812 l
17.5605 -.921875 l
h
17.5605 -4.85938 m
17.9512 -4.85938 l
18.6074 -4.85938 19.1152 -5.00000 19.4746 -5.28125  c
19.8340 -5.56250 20.0137 -5.95833 20.0137 -6.46875  c
20.0137 -7.32292 19.3522 -7.75000 18.0293 -7.75000  c
17.5605 -7.75000 l
17.5605 -4.85938 l
h
23.9316 0.00000 m
23.9316 -.875000 l
25.6660 -.875000 l
25.6660 -7.71875 l
23.9316 -7.28125 l
23.9316 -8.17188 l
26.8223 -8.89062 l
26.8223 -.875000 l
28.5566 -.875000 l
28.5566 0.00000 l
23.9316 0.00000 l
h
30.8320 0.00000 m
30.8320 -8.67188 l
33.0820 -8.67188 l
33.9466 -8.67188 34.6107 -8.50781 35.0742 -8.17969  c
35.5378 -7.85156 35.7695 -7.38021 35.7695 -6.76562  c
35.7695 -5.71354 35.1758 -4.96354 33.9883 -4.51562  c
35.4049 -4.08854 36.1133 -3.30729 36.1133 -2.17188  c
36.1133 -1.46354 35.8789 -.924479 35.4102 -.554688  c
34.9414 -.184896 34.2643 0.00000 33.3789 0.00000  c
30.8320 0.00000 l
h
32.0508 -.921875 m
32.3008 -.921875 l
33.1966 -.921875 33.7799 -.979167 34.0508 -1.09375  c
34.5612 -1.30208 34.8164 -1.69792 34.8164 -2.28125  c
34.8164 -2.80208 34.5846 -3.23177 34.1211 -3.57031  c
33.6576 -3.90885 33.0820 -4.07812 32.3945 -4.07812  c
32.0508 -4.07812 l
32.0508 -.921875 l
h
32.0508 -4.85938 m
32.4414 -4.85938 l
33.0977 -4.85938 33.6055 -5.00000 33.9648 -5.28125  c
34.3242 -5.56250 34.5039 -5.95833 34.5039 -6.46875  c
34.5039 -7.32292 33.8424 -7.75000 32.5195 -7.75000  c
32.0508 -7.75000 l
32.0508 -4.85938 l
h
f
[ 1.06465 0.00000 0.00000 1.06465 134.840 22.9008 ] defaultmatrix matrix concatmatrix setmatrix
.882353 .160784 .200000 RG
newpath
73.2922 307.280 m
52.2064 328.366 l
31.1206 307.280 l
52.2064 286.195 l
h
f
0.00000 0.00000 0.00000 RG
newpath
52.2064 284.780 m
74.7064 307.280 l
52.2064 329.780 l
29.7064 307.280 l
h
73.2922 307.280 m
52.2064 328.366 l
31.1206 307.280 l
52.2064 286.195 l
h
f*
52.2064 307.280 translate
1.00000 1.00000 scale
-24.5889 4.42090 translate
newpath
1.12500 0.00000 m
1.12500 -8.67188 l
2.82812 -8.67188 l
5.23438 -1.96875 l
7.70312 -8.67188 l
9.21875 -8.67188 l
9.21875 0.00000 l
8.07812 0.00000 l
8.07812 -7.06250 l
5.68750 -.578125 l
4.50000 -.578125 l
2.17188 -7.07812 l
2.17188 0.00000 l
1.12500 0.00000 l
h
15.8516 -3.31250 m
14.3672 -7.06250 l
12.8984 -3.31250 l
15.8516 -3.31250 l
h
17.1484 0.00000 m
16.2109 -2.40625 l
12.5391 -2.40625 l
11.5859 0.00000 l
10.4297 0.00000 l
13.8828 -8.67188 l
15.1016 -8.67188 l
18.4766 0.00000 l
17.1484 0.00000 l
h
19.7402 0.00000 m
19.7402 -8.67188 l
22.6152 -8.67188 l
23.4798 -8.67188 24.1751 -8.57552 24.7012 -8.38281  c
25.2272 -8.19010 25.6829 -7.86458 26.0684 -7.40625  c
26.6829 -6.68750 26.9902 -5.73438 26.9902 -4.54688  c
26.9902 -3.09896 26.6100 -1.97917 25.8496 -1.18750  c
25.0892 -.395833 24.0163 0.00000 22.6309 0.00000  c
19.7402 0.00000 l
h
20.9590 -.921875 m
22.5371 -.921875 l
23.6621 -.921875 24.4590 -1.22396 24.9277 -1.82812  c
25.4382 -2.47396 25.6934 -3.33854 25.6934 -4.42188  c
25.6934 -5.44271 25.4434 -6.24479 24.9434 -6.82812  c
24.6413 -7.18229 24.2819 -7.42448 23.8652 -7.55469  c
23.4486 -7.68490 22.8184 -7.75000 21.9746 -7.75000  c
20.9590 -7.75000 l
20.9590 -.921875 l
h
28.6035 0.00000 m
28.6035 -1.01562 l
28.9368 -1.79688 29.6139 -2.65104 30.6348 -3.57812  c
31.3066 -4.17188 l
32.1504 -4.94271 32.5723 -5.70833 32.5723 -6.46875  c
32.5723 -6.94792 32.4290 -7.32552 32.1426 -7.60156  c
31.8561 -7.87760 31.4577 -8.01562 30.9473 -8.01562  c
30.3431 -8.01562 29.6348 -7.78646 28.8223 -7.32812  c
28.8223 -8.34375 l
29.5931 -8.70833 30.3535 -8.89062 31.1035 -8.89062  c
31.9160 -8.89062 32.5697 -8.67188 33.0645 -8.23438  c
33.5592 -7.79688 33.8066 -7.21875 33.8066 -6.50000  c
33.8066 -5.97917 33.6816 -5.51562 33.4316 -5.10938  c
33.1816 -4.70312 32.7181 -4.21354 32.0410 -3.64062  c
31.6035 -3.26562 l
30.6764 -2.48438 30.1400 -1.73438 29.9941 -1.01562  c
33.7598 -1.01562 l
33.7598 0.00000 l
28.6035 0.00000 l
h
36.3164 0.00000 m
36.3164 -8.67188 l
37.5352 -8.67188 l
37.5352 -.921875 l
41.4414 -.921875 l
41.4414 0.00000 l
36.3164 0.00000 l
h
43.4023 0.00000 m
43.4023 -.875000 l
45.1367 -.875000 l
45.1367 -7.71875 l
43.4023 -7.28125 l
43.4023 -8.17188 l
46.2930 -8.89062 l
46.2930 -.875000 l
48.0273 -.875000 l
48.0273 0.00000 l
43.4023 0.00000 l
h
f
[ 1.06465 0.00000 0.00000 1.06465 134.840 22.9008 ] defaultmatrix matrix concatmatrix setmatrix
end end restore showpage

%%Trailer
%%EOF
